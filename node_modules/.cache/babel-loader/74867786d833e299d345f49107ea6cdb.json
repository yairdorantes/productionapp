{"ast":null,"code":"var _jsxFileName = \"/home/yair/Desktop/what i delete form project/src/components/Cards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport \"./styles/cardStyles.css\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/css\";\nimport \"swiper/css/effect-cards\";\nimport \"./styles/stylesCards.css\";\nimport { Pagination, EffectCards, Mousewheel, Keyboard } from \"swiper\";\nimport wordSound from \"../media/cards/audio.png\";\nimport iconAdd from \"../media/add.png\";\nimport Loader from \"./Loader\";\nimport AboutUser from \"./AboutUser\";\nimport CardTuto from \"./CardTuto\";\nimport MenuBar from \"./MenuBar\";\nimport { Link, NavLink, useParams } from \"react-router-dom\";\nimport AuthContext from \"../context/AuthContext\";\nimport FormCard from \"./FormCard\";\nimport PayPal from \"./PayPal\";\nimport { helpHttp } from \"../helpers/helpHttp\";\nimport Modal from \"react-modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst customStyles = {\n  content: {\n    color: \"white\",\n    width: \"270px\",\n    height: \"450px\",\n    backgroundColor: \"#16181cf2\",\n    border: \"solid 1px #040615\",\n    // backgroundColor: \"#00000000\",\n    outline: \"none\"\n  },\n  overlay: {\n    zIndex: 999,\n    backgroundColor: \"rgba(0, 0, 0, 0)\"\n  }\n};\nlet url = \"\";\nconst urlImageCard = \"https://res.cloudinary.com/tolumaster/image/upload/v1/\";\n\nconst Cards = () => {\n  _s();\n\n  let {\n    user\n  } = useContext(AuthContext);\n  const paramsUrl = useParams();\n  const [isActive, setIsActive] = useState(true);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [isPremium, setIsPremium] = useState(false);\n  const [cardLength, setCardLength] = useState(0);\n  const [cards, setCards] = useState([]);\n  const [answerSelected, setAnswerSelected] = useState();\n  const [cardPicked, setCardPicked] = useState();\n  const [answerOnes, setAnswerOnes] = useState();\n  const [answerTwos, setAnswerTwos] = useState();\n  const [modalQuestion, setModalQuestion] = useState(false);\n  const [answers, setAnswers] = useState([]);\n  const params = {\n    method: \"GET\",\n    headers: {\n      accept: \"application/json\"\n    }\n  };\n\n  const fetchAPi = async () => {\n    // console.log(\"fetched\");\n    paramsUrl.section === \"mis-cartas\" ? url = `https://englishapputc.herokuapp.com/api/usercards/${user.user_id}` : url = `https://englishapputc.herokuapp.com/api/cards/${paramsUrl.section}`;\n    const response = await fetch(url, params);\n    const responseJSON = await response.json();\n    setCards(responseJSON);\n    setCardLength(responseJSON.cards.length); // console.log(responseJSON.cards.length);\n  };\n\n  const getUserData = () => {\n    helpHttp().get(`https://englishapputc.herokuapp.com/api/users/${user.user_id}`).then(res => {\n      // console.log(res.user.premium);\n      setIsPremium(res.user.premium);\n    });\n  };\n\n  useEffect(() => {\n    fetchAPi();\n    getUserData(); // console.log(setCards);\n  }, []);\n\n  const handleDisplay = e => {\n    isActive ? setIsActive(false) : setIsActive(true);\n  };\n\n  var speechSynthesis = require(\"speech-synthesis\");\n\n  const openModal = e => {\n    // e.preventDefault();\n    modalIsOpen ? setModalIsOpen(false) : setModalIsOpen(true);\n  };\n\n  const openModalQuestion = e => {\n    // e.preventDefault();\n    modalQuestion ? setModalQuestion(false) : setModalIsOpen(true);\n  };\n\n  function differentRandom() {\n    var randoms = [];\n\n    while (randoms.length < 3) {\n      var r = Math.floor(Math.random() * cardLength - 1) + 1;\n      if (randoms.indexOf(r) === -1) randoms.push(r);\n    }\n\n    console.log(randoms);\n    return randoms;\n  }\n\n  const generateQuestion = () => {\n    const lista = [];\n    const cartas = cards.cards;\n    const randomsGenerated = differentRandom();\n    const cardChoosen = cartas[randomsGenerated[0]];\n    lista.push(cardChoosen);\n    setCardPicked(cardChoosen);\n    const answerOne = cartas[randomsGenerated[1]];\n    lista.push(answerOne);\n    const answerTwo = cartas[randomsGenerated[2]];\n    lista.push(answerTwo);\n    setAnswers(lista.sort(() => Math.random() - 0.5));\n    console.log(answers);\n  };\n\n  const handleChangeRadio = e => {\n    setAnswerSelected(e.target.value);\n  };\n\n  const handleAnswer = () => {\n    if (answerSelected === cardPicked.cardMeaning) {\n      console.log(\"correct\");\n    } else {\n      console.log(\"incorrect\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AboutUser, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all-cards\",\n      children: [paramsUrl.section === \"mis-cartas\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"del-cards\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/delete\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-delete-cards\",\n            children: \"Eliminar cartas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Swiper, {\n        keyboard: true,\n        mousewheel: true,\n        className: \"mySwiper\",\n        effect: \"cards\",\n        modules: [EffectCards, Mousewheel, Pagination, Keyboard],\n        children: !cards ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this) : !cards.cards ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nada-por-aqui\",\n          children: \"Nada por aqui...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this) : cards.cards.map((card, key) => {\n          // console.log(cards);\n          return /*#__PURE__*/_jsxDEV(SwiperSlide, {\n            style: {\n              borderColor: \"white\",\n              backgroundImage: \"url(\" + (card.imageURL === \"\" ? urlImageCard + card.cardImage : card.imageURL) + \")\"\n            },\n            className: \"swiper-slide-card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container-card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"contenido-card\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    onClick: handleDisplay,\n                    className: \"card-text\",\n                    children: isActive ? card.cardTitle : card.cardMeaning\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn-sound-card\",\n                    onClick: () => {\n                      speechSynthesis(card.cardTitle); // console.log(card.cardTitle);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      className: \"word-sound\",\n                      src: wordSound,\n                      alt: \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 193,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 19\n            }, this)\n          }, card.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), paramsUrl.section === \"mis-cartas\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-icon-add\",\n        children: cards.cards && cards.cards.length >= 10 && !isPremium ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-updatein-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert-no-more-cards\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Para seguir agregando cartas, actual\\xEDzate a premium\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(PayPal, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 17\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: openModal,\n          className: \"icon-add\",\n          src: iconAdd,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        ariaHideApp: false,\n        style: customStyles,\n        isOpen: modalIsOpen,\n        contentLabel: \"Minimal Modal Example\",\n        children: cardPicked && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-question-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-card\",\n              children: [\"Elige el significado de\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\" \", cardPicked.cardTitle]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"parent-answers\",\n              children: answers && answers.map((answer, key) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"box-answers\",\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"rad-label\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"radio\",\n                      className: \"rad-input\",\n                      name: \"rad\",\n                      onChange: handleChangeRadio,\n                      value: answer.cardMeaning\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 250,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"rad-design\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 257,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"rad-text\",\n                      children: answer.cardMeaning\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 27\n                  }, this)\n                }, answer.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-send-answer\",\n              onClick: handleAnswer,\n              children: \"Enviar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"\",\n        onClick: generateQuestion,\n        children: \"Repasar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormCard, {\n      fetchApi: fetchAPi,\n      modalIsOpen: modalIsOpen,\n      openModal: openModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Cards, \"fRoI8nGrfJZVdo7hvpE0U1ZocXE=\", false, function () {\n  return [useParams];\n});\n\n_c = Cards;\nexport default Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Swiper","SwiperSlide","Pagination","EffectCards","Mousewheel","Keyboard","wordSound","iconAdd","Loader","AboutUser","CardTuto","MenuBar","Link","NavLink","useParams","AuthContext","FormCard","PayPal","helpHttp","Modal","customStyles","content","color","width","height","backgroundColor","border","outline","overlay","zIndex","url","urlImageCard","Cards","user","paramsUrl","isActive","setIsActive","modalIsOpen","setModalIsOpen","isPremium","setIsPremium","cardLength","setCardLength","cards","setCards","answerSelected","setAnswerSelected","cardPicked","setCardPicked","answerOnes","setAnswerOnes","answerTwos","setAnswerTwos","modalQuestion","setModalQuestion","answers","setAnswers","params","method","headers","accept","fetchAPi","section","user_id","response","fetch","responseJSON","json","length","getUserData","get","then","res","premium","handleDisplay","e","speechSynthesis","require","openModal","openModalQuestion","differentRandom","randoms","r","Math","floor","random","indexOf","push","console","log","generateQuestion","lista","cartas","randomsGenerated","cardChoosen","answerOne","answerTwo","sort","handleChangeRadio","target","value","handleAnswer","cardMeaning","map","card","key","borderColor","backgroundImage","imageURL","cardImage","cardTitle","id","answer"],"sources":["/home/yair/Desktop/what i delete form project/src/components/Cards.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport \"./styles/cardStyles.css\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/css\";\nimport \"swiper/css/effect-cards\";\nimport \"./styles/stylesCards.css\";\nimport { Pagination, EffectCards, Mousewheel, Keyboard } from \"swiper\";\nimport wordSound from \"../media/cards/audio.png\";\nimport iconAdd from \"../media/add.png\";\nimport Loader from \"./Loader\";\nimport AboutUser from \"./AboutUser\";\nimport CardTuto from \"./CardTuto\";\nimport MenuBar from \"./MenuBar\";\nimport { Link, NavLink, useParams } from \"react-router-dom\";\nimport AuthContext from \"../context/AuthContext\";\nimport FormCard from \"./FormCard\";\nimport PayPal from \"./PayPal\";\nimport { helpHttp } from \"../helpers/helpHttp\";\nimport Modal from \"react-modal\";\nconst customStyles = {\n  content: {\n    color: \"white\",\n    width: \"270px\",\n    height: \"450px\",\n    backgroundColor: \"#16181cf2\",\n    border: \"solid 1px #040615\",\n    // backgroundColor: \"#00000000\",\n    outline: \"none\",\n  },\n  overlay: { zIndex: 999, backgroundColor: \"rgba(0, 0, 0, 0)\" },\n};\n\nlet url = \"\";\nconst urlImageCard = \"https://res.cloudinary.com/tolumaster/image/upload/v1/\";\nconst Cards = () => {\n  let { user } = useContext(AuthContext);\n  const paramsUrl = useParams();\n  const [isActive, setIsActive] = useState(true);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [isPremium, setIsPremium] = useState(false);\n  const [cardLength, setCardLength] = useState(0);\n  const [cards, setCards] = useState([]);\n  const [answerSelected, setAnswerSelected] = useState();\n\n  const [cardPicked, setCardPicked] = useState();\n  const [answerOnes, setAnswerOnes] = useState();\n  const [answerTwos, setAnswerTwos] = useState();\n  const [modalQuestion, setModalQuestion] = useState(false);\n  const [answers, setAnswers] = useState([]);\n  const params = {\n    method: \"GET\",\n    headers: {\n      accept: \"application/json\",\n    },\n  };\n\n  const fetchAPi = async () => {\n    // console.log(\"fetched\");\n    paramsUrl.section === \"mis-cartas\"\n      ? (url = `https://englishapputc.herokuapp.com/api/usercards/${user.user_id}`)\n      : (url = `https://englishapputc.herokuapp.com/api/cards/${paramsUrl.section}`);\n    const response = await fetch(url, params);\n    const responseJSON = await response.json();\n    setCards(responseJSON);\n    setCardLength(responseJSON.cards.length);\n    // console.log(responseJSON.cards.length);\n  };\n\n  const getUserData = () => {\n    helpHttp()\n      .get(`https://englishapputc.herokuapp.com/api/users/${user.user_id}`)\n      .then((res) => {\n        // console.log(res.user.premium);\n        setIsPremium(res.user.premium);\n      });\n  };\n\n  useEffect(() => {\n    fetchAPi();\n    getUserData();\n    // console.log(setCards);\n  }, []);\n\n  const handleDisplay = (e) => {\n    isActive ? setIsActive(false) : setIsActive(true);\n  };\n\n  var speechSynthesis = require(\"speech-synthesis\");\n  const openModal = (e) => {\n    // e.preventDefault();\n    modalIsOpen ? setModalIsOpen(false) : setModalIsOpen(true);\n  };\n  const openModalQuestion = (e) => {\n    // e.preventDefault();\n    modalQuestion ? setModalQuestion(false) : setModalIsOpen(true);\n  };\n\n  function differentRandom() {\n    var randoms = [];\n    while (randoms.length < 3) {\n      var r = Math.floor(Math.random() * cardLength - 1) + 1;\n      if (randoms.indexOf(r) === -1) randoms.push(r);\n    }\n    console.log(randoms);\n    return randoms;\n  }\n  const generateQuestion = () => {\n    const lista = [];\n\n    const cartas = cards.cards;\n    const randomsGenerated = differentRandom();\n    const cardChoosen = cartas[randomsGenerated[0]];\n    lista.push(cardChoosen);\n    setCardPicked(cardChoosen);\n\n    const answerOne = cartas[randomsGenerated[1]];\n    lista.push(answerOne);\n\n    const answerTwo = cartas[randomsGenerated[2]];\n    lista.push(answerTwo);\n\n    setAnswers(lista.sort(() => Math.random() - 0.5));\n    console.log(answers);\n  };\n\n  const handleChangeRadio = (e) => {\n    setAnswerSelected(e.target.value);\n  };\n  const handleAnswer = () => {\n    if (answerSelected === cardPicked.cardMeaning) {\n      console.log(\"correct\");\n    } else {\n      console.log(\"incorrect\");\n    }\n  };\n\n  return (\n    <>\n      <AboutUser></AboutUser>\n\n      <div className=\"all-cards\">\n        {paramsUrl.section === \"mis-cartas\" && (\n          <div className=\"del-cards\">\n            <NavLink to=\"/delete\">\n              <button className=\"btn-delete-cards\">Eliminar cartas</button>\n            </NavLink>\n          </div>\n        )}\n\n        <Swiper\n          keyboard={true}\n          mousewheel={true}\n          className=\"mySwiper\"\n          effect={\"cards\"}\n          modules={[EffectCards, Mousewheel, Pagination, Keyboard]}\n        >\n          {/* <CardTuto></CardTuto> */}\n          {!cards ? (\n            <Loader></Loader>\n          ) : !cards.cards ? (\n            <div className=\"nada-por-aqui\">Nada por aqui...</div>\n          ) : (\n            cards.cards.map((card, key) => {\n              // console.log(cards);\n              return (\n                <SwiperSlide\n                  style={{\n                    borderColor: \"white\",\n                    backgroundImage:\n                      \"url(\" +\n                      (card.imageURL === \"\"\n                        ? urlImageCard + card.cardImage\n                        : card.imageURL) +\n                      \")\",\n                  }}\n                  className=\"swiper-slide-card\"\n                  key={card.id}\n                >\n                  <div className=\"container-card\">\n                    <div className=\"card\">\n                      {/* <img className=\"image-cards\" src={card.imageURL} alt=\"\" /> */}\n                      <div className=\"contenido-card\">\n                        <h3 onClick={handleDisplay} className=\"card-text\">\n                          {isActive ? card.cardTitle : card.cardMeaning}\n                        </h3>\n                        <button\n                          className=\"btn-sound-card\"\n                          onClick={() => {\n                            speechSynthesis(card.cardTitle);\n                            // console.log(card.cardTitle);\n                          }}\n                        >\n                          <img className=\"word-sound\" src={wordSound} alt=\"\" />\n                        </button>\n                        <div>\n                          {/* <img src={urlImageCard + card.cardImage} alt=\"\" /> */}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </SwiperSlide>\n              );\n            })\n          )}\n        </Swiper>\n        {paramsUrl.section === \"mis-cartas\" && (\n          <div className=\"container-icon-add\">\n            {cards.cards && cards.cards.length >= 10 && !isPremium ? (\n              <>\n                <div className=\"container-updatein-card\">\n                  <div className=\"alert-no-more-cards\">\n                    <strong>\n                      Para seguir agregando cartas, actualízate a premium\n                    </strong>\n                  </div>\n                  <div>\n                    <PayPal></PayPal>\n                  </div>\n                </div>\n              </>\n            ) : (\n              <img\n                onClick={openModal}\n                className=\"icon-add\"\n                src={iconAdd}\n                alt=\"\"\n              />\n            )}\n          </div>\n        )}\n        <Modal\n          ariaHideApp={false}\n          style={customStyles}\n          isOpen={modalIsOpen}\n          contentLabel=\"Minimal Modal Example\"\n        >\n          {cardPicked && (\n            <>\n              <div className=\"container-question-card\">\n                <div className=\"question-card\">\n                  Elige el significado de\n                  <strong> {cardPicked.cardTitle}</strong>\n                </div>\n                <div className=\"parent-answers\">\n                  {answers &&\n                    answers.map((answer, key) => {\n                      return (\n                        <div key={answer.id} className=\"box-answers\">\n                          <label className=\"rad-label\">\n                            <input\n                              type=\"radio\"\n                              className=\"rad-input\"\n                              name=\"rad\"\n                              onChange={handleChangeRadio}\n                              value={answer.cardMeaning}\n                            />\n                            <div className=\"rad-design\"></div>\n                            <div className=\"rad-text\">{answer.cardMeaning}</div>\n                          </label>\n                        </div>\n                      );\n                    })}\n                </div>\n                <button className=\"btn-send-answer\" onClick={handleAnswer}>\n                  Enviar\n                </button>\n              </div>\n            </>\n          )}\n        </Modal>\n        <button className=\"\" onClick={generateQuestion}>\n          Repasar\n        </button>\n      </div>\n      <FormCard\n        fetchApi={fetchAPi}\n        modalIsOpen={modalIsOpen}\n        openModal={openModal}\n      ></FormCard>\n\n      <MenuBar></MenuBar>\n    </>\n  );\n};\n\nexport default Cards;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}