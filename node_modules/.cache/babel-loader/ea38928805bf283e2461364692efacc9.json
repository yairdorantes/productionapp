{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = or;\n\nvar _propTypes = require(\"prop-types\");\n\nvar _wrapValidator = _interopRequireDefault(require(\"./helpers/wrapValidator\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction oneOfTypeValidator(validators) {\n  var validator = function oneOfType(props, propName, componentName) {\n    for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      rest[_key - 3] = arguments[_key];\n    }\n\n    var propValue = props[propName];\n\n    if (typeof propValue === 'undefined') {\n      return null;\n    }\n\n    var errors = validators.map(function (v) {\n      return v.apply(void 0, [props, propName, componentName].concat(rest));\n    }).filter(Boolean);\n\n    if (errors.length < validators.length) {\n      return null;\n    }\n\n    return new TypeError(\"\".concat(componentName, \": invalid value supplied to \").concat(propName, \".\"));\n  };\n\n  validator.isRequired = function oneOfTypeRequired(props, propName, componentName) {\n    for (var _len2 = arguments.length, rest = new Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n      rest[_key2 - 3] = arguments[_key2];\n    }\n\n    var propValue = props[propName];\n\n    if (typeof propValue === 'undefined') {\n      return new TypeError(\"\".concat(componentName, \": missing value for required \").concat(propName, \".\"));\n    }\n\n    var errors = validators.map(function (v) {\n      return v.apply(void 0, [props, propName, componentName].concat(rest));\n    }).filter(Boolean);\n\n    if (errors.length === validators.length) {\n      return new TypeError(\"\".concat(componentName, \": invalid value \").concat(errors, \" supplied to required \").concat(propName, \".\"));\n    }\n\n    return null;\n  };\n\n  return (0, _wrapValidator[\"default\"])(validator, 'oneOfType', validators);\n}\n\nfunction or(validators) {\n  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'or';\n\n  if (!Array.isArray(validators)) {\n    throw new TypeError('or: 2 or more validators are required');\n  }\n\n  if (validators.length <= 1) {\n    throw new RangeError('or: 2 or more validators are required');\n  }\n\n  var validator = oneOfTypeValidator([(0, _propTypes.arrayOf)(oneOfTypeValidator(validators))].concat(_toConsumableArray(validators)));\n  return (0, _wrapValidator[\"default\"])(validator, name, validators);\n}","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,SAASA,kBAAT,CAA4BC,UAA5B,EAAwC;EACtC,IAAMC,SAAS,GAAG,SAASC,SAAT,CAAmBC,KAAnB,EAA0BC,QAA1B,EAAoCC,aAApC,EAA4D;IAAA,kCAANC,IAAM;MAANA,IAAM,UAANA,GAAMC,eAAND;IAAM;;IAAA,IACxDE,SADwD,GAC1CL,KAD0C,CACnEC,QADmE;;IAE5E,IAAI,OAAOI,SAAP,KAAqB,WAAzB,EAAsC;MACpC,OAAO,IAAP;IACD;;IAED,IAAMC,MAAM,GAAGT,UAAU,CACtBU,GADYV,CACR,UAACW,CAAD;MAAA,OAAOA,CAAC,MAADA,UAAER,KAAF,EAASC,QAAT,EAAmBC,aAAnB,SAAqCC,IAArC,EAAP;IADQ,GAEZM,MAFYZ,CAELa,OAFKb,CAAf;;IAIA,IAAIS,MAAM,CAACK,MAAPL,GAAgBT,UAAU,CAACc,MAA/B,EAAuC;MACrC,OAAO,IAAP;IACD;;IACD,OAAO,IAAIC,SAAJ,WAAiBV,aAAjB,yCAA6DD,QAA7D,OAAP;EAbF;;EAeAH,SAAS,CAACe,UAAVf,GAAuB,SAASgB,iBAAT,CAA2Bd,KAA3B,EAAkCC,QAAlC,EAA4CC,aAA5C,EAAoE;IAAA,mCAANC,IAAM;MAANA,IAAM,WAANA,GAAMC,gBAAND;IAAM;;IAAA,IACrEE,SADqE,GACvDL,KADuD,CAChFC,QADgF;;IAEzF,IAAI,OAAOI,SAAP,KAAqB,WAAzB,EAAsC;MACpC,OAAO,IAAIO,SAAJ,WAAiBV,aAAjB,0CAA8DD,QAA9D,OAAP;IACD;;IAED,IAAMK,MAAM,GAAGT,UAAU,CACtBU,GADYV,CACR,UAACW,CAAD;MAAA,OAAOA,CAAC,MAADA,UAAER,KAAF,EAASC,QAAT,EAAmBC,aAAnB,SAAqCC,IAArC,EAAP;IADQ,GAEZM,MAFYZ,CAELa,OAFKb,CAAf;;IAIA,IAAIS,MAAM,CAACK,MAAPL,KAAkBT,UAAU,CAACc,MAAjC,EAAyC;MACvC,OAAO,IAAIC,SAAJ,WAAiBV,aAAjB,6BAAiDI,MAAjD,mCAAgFL,QAAhF,OAAP;IACD;;IACD,OAAO,IAAP;EAbF;;EAeA,OAAO,+BAAcH,SAAd,EAAyB,WAAzB,EAAsCD,UAAtC,CAAP;AACD;;AAEc,SAASkB,EAAT,CAAYlB,UAAZ,EAAqC;EAAA,IAAbmB,IAAa,uEAAN,IAAM;;EAClD,IAAI,CAACC,KAAK,CAACC,OAAND,CAAcpB,UAAdoB,CAAL,EAAgC;IAC9B,MAAM,IAAIL,SAAJ,CAAc,uCAAd,CAAN;EACD;;EACD,IAAIf,UAAU,CAACc,MAAXd,IAAqB,CAAzB,EAA4B;IAC1B,MAAM,IAAIsB,UAAJ,CAAe,uCAAf,CAAN;EACD;;EAED,IAAMrB,SAAS,GAAGF,kBAAkB,EAClC,wBAAQA,kBAAkB,CAACC,UAAD,CAA1B,CADkC,4BAE/BA,UAF+B,GAApC;EAKA,OAAO,+BAAcC,SAAd,EAAyBkB,IAAzB,EAA+BnB,UAA/B,CAAP;AACD","names":["oneOfTypeValidator","validators","validator","oneOfType","props","propName","componentName","rest","arguments","propValue","errors","map","v","filter","Boolean","length","TypeError","isRequired","oneOfTypeRequired","or","name","Array","isArray","RangeError"],"sources":["/home/yair/Desktop/Programming/what i delete form project/node_modules/react-outside-click-handler/node_modules/airbnb-prop-types/src/or.js"],"sourcesContent":["import { arrayOf } from 'prop-types';\nimport wrapValidator from './helpers/wrapValidator';\n\nfunction oneOfTypeValidator(validators) {\n  const validator = function oneOfType(props, propName, componentName, ...rest) {\n    const { [propName]: propValue } = props;\n    if (typeof propValue === 'undefined') {\n      return null;\n    }\n\n    const errors = validators\n      .map((v) => v(props, propName, componentName, ...rest))\n      .filter(Boolean);\n\n    if (errors.length < validators.length) {\n      return null;\n    }\n    return new TypeError(`${componentName}: invalid value supplied to ${propName}.`);\n  };\n  validator.isRequired = function oneOfTypeRequired(props, propName, componentName, ...rest) {\n    const { [propName]: propValue } = props;\n    if (typeof propValue === 'undefined') {\n      return new TypeError(`${componentName}: missing value for required ${propName}.`);\n    }\n\n    const errors = validators\n      .map((v) => v(props, propName, componentName, ...rest))\n      .filter(Boolean);\n\n    if (errors.length === validators.length) {\n      return new TypeError(`${componentName}: invalid value ${errors} supplied to required ${propName}.`);\n    }\n    return null;\n  };\n  return wrapValidator(validator, 'oneOfType', validators);\n}\n\nexport default function or(validators, name = 'or') {\n  if (!Array.isArray(validators)) {\n    throw new TypeError('or: 2 or more validators are required');\n  }\n  if (validators.length <= 1) {\n    throw new RangeError('or: 2 or more validators are required');\n  }\n\n  const validator = oneOfTypeValidator([\n    arrayOf(oneOfTypeValidator(validators)),\n    ...validators,\n  ]);\n\n  return wrapValidator(validator, name, validators);\n}\n"]},"metadata":{},"sourceType":"script"}