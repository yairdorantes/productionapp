{"ast":null,"code":"var _jsxFileName = \"/home/yair/Desktop/project/src/components/PostPage.js\",\n    _s = $RefreshSig$();\n\nimport \"./singlePost.css\";\nimport send from \"../media/send.png\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Loader from \"./Loader\";\nimport { helpHttp } from \"../helpers/helpHttp\";\nimport AuthContext from \"../context/AuthContext\";\nimport { InView } from \"react-intersection-observer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet url = \"http://127.0.0.1:8000/api/comments/\";\nconst parametros = {\n  method: \"GET\",\n  headers: {\n    accept: \"application/json\"\n  }\n};\nlet initialComment = {\n  author: \".\",\n  text: \".\",\n  created_date: \".\"\n};\n\nconst PostPage = () => {\n  _s();\n\n  let {\n    user\n  } = useContext(AuthContext);\n  const [post, setPost] = useState();\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState(\"\");\n  const params = useParams();\n\n  const getDate = () => {\n    const fecha = new Date();\n    const meses = [\"en\", \"feb\", \"mar\", \"abr\", \"may\", \"jun\", \"jul\", \"agto\", \"sept\", \"oct\", \"nov\", \"dic\"];\n    let actual = fecha.getDate() + \" \" + meses[fecha.getMonth()] + \" \" + fecha.getUTCFullYear();\n    return actual;\n  };\n\n  const fetchAPi = async () => {\n    let url = `http://127.0.0.1:8000/api/post/${params.id}`;\n    const response = await fetch(url, parametros);\n    const responseJSON = await response.json();\n    setPost(responseJSON.post[0]);\n  };\n\n  const fetchComments = async () => {\n    let url = `http://127.0.0.1:8000/api/comments/${params.id}`;\n    const response = await fetch(url, parametros);\n    const responseJSON = await response.json();\n    setComments(responseJSON.comments);\n  };\n\n  const getCommentContent = e => {\n    setComment(e.target.value); // console.log(e.target.value);\n  };\n\n  const sendComment = () => {\n    let options = {\n      body: {\n        post_id: params.id,\n        user_name: user.username,\n        comentario: comment,\n        date: getDate()\n      },\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    };\n    helpHttp().post(url, options).then(response => console.log(response));\n    let testing = {\n      author: user.username,\n      text: comment,\n      created_date: getDate()\n    }; // console.log(comments);\n\n    comments.unshift(testing);\n    setComments([...comments]);\n    setComment(\"\");\n    console.log(comments);\n  };\n\n  useEffect(() => {\n    fetchAPi();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-post-content\",\n      children: !post ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title-post\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-image-post\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"image-single-post\",\n            src: post.image_src\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-text-post\",\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          children: /*#__PURE__*/_jsxDEV(InView, {\n            as: \"div\",\n            onChange: inView => {\n              inView && comments.length === 1 && fetchComments();\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                autoComplete: \"off\",\n                className: \"comment-input\",\n                placeholder: `Si puedes aportar algo más, coméntalo!...`,\n                name: \"comment\",\n                id: \"comment\" // cols=\"30\"\n                // rows=\"10\"\n                ,\n                value: comment,\n                onChange: getCommentContent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                onClick: sendComment,\n                className: comment.length > 0 ? \"btn-send-comment\" : \"btn-send-comment hidden\",\n                src: send,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"all-commets\",\n              children: comments.length > 0 ? comments.map((res, id) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"lone-comment\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"author-comment\",\n                    children: [res.author, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"date-comment\",\n                      children: [\" \", res.created_date]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"post-comment\",\n                    children: res.text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 27\n                  }, this)]\n                }, id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 25\n                }, this);\n              }) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"No commens\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(PostPage, \"AnvM9BvyOhSijTGZB3VeN95ejIY=\", false, function () {\n  return [useParams];\n});\n\n_c = PostPage;\nexport default PostPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["send","useContext","useEffect","useState","useParams","Loader","helpHttp","AuthContext","InView","url","parametros","method","headers","accept","initialComment","author","text","created_date","PostPage","user","post","setPost","comments","setComments","comment","setComment","params","getDate","fecha","Date","meses","actual","getMonth","getUTCFullYear","fetchAPi","id","response","fetch","responseJSON","json","fetchComments","getCommentContent","e","target","value","sendComment","options","body","post_id","user_name","username","comentario","date","then","console","log","testing","unshift","title","image_src","content","inView","length","map","res"],"sources":["/home/yair/Desktop/project/src/components/PostPage.js"],"sourcesContent":["import \"./singlePost.css\";\nimport send from \"../media/send.png\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Loader from \"./Loader\";\nimport { helpHttp } from \"../helpers/helpHttp\";\nimport AuthContext from \"../context/AuthContext\";\nimport { InView } from \"react-intersection-observer\";\nlet url = \"http://127.0.0.1:8000/api/comments/\";\nconst parametros = {\n  method: \"GET\",\n  headers: {\n    accept: \"application/json\",\n  },\n};\nlet initialComment = {\n  author: \".\",\n  text: \".\",\n  created_date: \".\",\n};\n\nconst PostPage = () => {\n  let { user } = useContext(AuthContext);\n\n  const [post, setPost] = useState();\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState(\"\");\n  const params = useParams();\n\n  const getDate = () => {\n    const fecha = new Date();\n    const meses = [\n      \"en\",\n      \"feb\",\n      \"mar\",\n      \"abr\",\n      \"may\",\n      \"jun\",\n      \"jul\",\n      \"agto\",\n      \"sept\",\n      \"oct\",\n      \"nov\",\n      \"dic\",\n    ];\n    let actual =\n      fecha.getDate() +\n      \" \" +\n      meses[fecha.getMonth()] +\n      \" \" +\n      fecha.getUTCFullYear();\n\n    return actual;\n  };\n\n  const fetchAPi = async () => {\n    let url = `http://127.0.0.1:8000/api/post/${params.id}`;\n    const response = await fetch(url, parametros);\n    const responseJSON = await response.json();\n    setPost(responseJSON.post[0]);\n  };\n\n  const fetchComments = async () => {\n    let url = `http://127.0.0.1:8000/api/comments/${params.id}`;\n    const response = await fetch(url, parametros);\n    const responseJSON = await response.json();\n    setComments(responseJSON.comments);\n  };\n\n  const getCommentContent = (e) => {\n    setComment(e.target.value);\n    // console.log(e.target.value);\n  };\n\n  const sendComment = () => {\n    let options = {\n      body: {\n        post_id: params.id,\n        user_name: user.username,\n        comentario: comment,\n        date: getDate(),\n      },\n      headers: { \"content-type\": \"application/json\" },\n    };\n    helpHttp()\n      .post(url, options)\n\n      .then((response) => console.log(response));\n\n    let testing = {\n      author: user.username,\n      text: comment,\n      created_date: getDate(),\n    };\n    // console.log(comments);\n    comments.unshift(testing);\n    setComments([...comments]);\n    setComment(\"\");\n    console.log(comments);\n  };\n\n  useEffect(() => {\n    fetchAPi();\n  }, []);\n\n  return (\n    <>\n      <div className=\"container-post-content\">\n        {!post ? (\n          <Loader></Loader>\n        ) : (\n          <div className=\"post-content\">\n            <h1 className=\"title-post\">{post.title}</h1>\n            <div className=\"box-image-post\">\n              <img className=\"image-single-post\" src={post.image_src} />\n            </div>\n\n            <div className=\"box-text-post\">{post.content}</div>\n            <section>\n              <InView\n                as=\"div\"\n                onChange={(inView) => {\n                  inView && comments.length === 1 && fetchComments();\n                }}\n              >\n                <div className=\"comment-section\">\n                  <input\n                    autoComplete=\"off\"\n                    className=\"comment-input\"\n                    placeholder={`Si puedes aportar algo más, coméntalo!...`}\n                    name=\"comment\"\n                    id=\"comment\"\n                    // cols=\"30\"\n                    // rows=\"10\"\n                    value={comment}\n                    onChange={getCommentContent}\n                  ></input>\n                  <img\n                    onClick={sendComment}\n                    className={\n                      comment.length > 0\n                        ? \"btn-send-comment\"\n                        : \"btn-send-comment hidden\"\n                    }\n                    src={send}\n                    alt=\"\"\n                  />\n                </div>\n\n                <div className=\"all-commets\">\n                  {comments.length > 0 ? (\n                    comments.map((res, id) => {\n                      return (\n                        <div className=\"lone-comment\" key={id}>\n                          <div className=\"author-comment\">\n                            {res.author}{\" \"}\n                            <span className=\"date-comment\">\n                              {\" \"}\n                              {res.created_date}\n                            </span>\n                          </div>\n                          <div className=\"post-comment\">{res.text}</div>\n                        </div>\n                      );\n                    })\n                  ) : (\n                    <div>No commens</div>\n                  )}\n                </div>\n              </InView>\n            </section>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default PostPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}