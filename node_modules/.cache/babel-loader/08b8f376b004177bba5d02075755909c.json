{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = range;\n\nvar _and = _interopRequireDefault(require(\"./and\"));\n\nvar _between = _interopRequireDefault(require(\"./between\"));\n\nvar _integer = _interopRequireDefault(require(\"./integer\"));\n\nvar _isInteger = _interopRequireDefault(require(\"./helpers/isInteger\"));\n\nvar _wrapValidator = _interopRequireDefault(require(\"./helpers/wrapValidator\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */\nMath.pow(2, 53) - 1;\n\nfunction isValidLength(x) {\n  return (0, _isInteger[\"default\"])(x) && Math.abs(x) < MAX_SAFE_INTEGER;\n}\n\nfunction range(min, max) {\n  if (!isValidLength(min) || !isValidLength(max)) {\n    throw new RangeError(\"\\\"range\\\" requires two integers: \".concat(min, \" and \").concat(max, \" given\"));\n  }\n\n  if (min === max) {\n    throw new RangeError('min and max must not be the same');\n  }\n\n  return (0, _wrapValidator[\"default\"])((0, _and[\"default\"])([(0, _integer[\"default\"])(), (0, _between[\"default\"])({\n    gte: min,\n    lt: max\n  })], 'range'), 'range', {\n    min: min,\n    max: max\n  });\n}","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,gBAAgB,GAAGC,MAAM,CAACD,gBAAPC;AAA2B;AAA2BC,SAAC,CAAD,EAAM,EAAN,IAAY,CAA3F;;AAEA,SAASC,aAAT,CAAuBC,CAAvB,EAA0B;EACxB,OAAO,2BAAUA,CAAV,KAAgBF,IAAI,CAACG,GAALH,CAASE,CAATF,IAAcF,gBAArC;AACD;;AAEc,SAASM,KAAT,CAAeC,GAAf,EAAoBC,GAApB,EAAyB;EACtC,IAAI,CAACL,aAAa,CAACI,GAAD,CAAd,IAAuB,CAACJ,aAAa,CAACK,GAAD,CAAzC,EAAgD;IAC9C,MAAM,IAAIC,UAAJ,4CAAiDF,GAAjD,kBAA4DC,GAA5D,YAAN;EACD;;EACD,IAAID,GAAG,KAAKC,GAAZ,EAAiB;IACf,MAAM,IAAIC,UAAJ,CAAe,kCAAf,CAAN;EACD;;EACD,OAAO,+BAAc,qBAAI,CAAC,0BAAD,EAAY,yBAAQ;IAAEC,GAAG,EAAEH,GAAP;IAAYI,EAAE,EAAEH;EAAhB,CAAR,CAAZ,CAAJ,EAAiD,OAAjD,CAAd,EAAyE,OAAzE,EAAkF;IAAED,GAAG,EAAHA,GAAF;IAAOC,GAAG,EAAHA;EAAP,CAAlF,CAAP;AACD","names":["MAX_SAFE_INTEGER","Number","Math","isValidLength","x","abs","range","min","max","RangeError","gte","lt"],"sources":["/home/yair/Desktop/Programming/what i delete form project/node_modules/react-outside-click-handler/node_modules/airbnb-prop-types/src/range.js"],"sourcesContent":["import and from './and';\nimport between from './between';\nimport integer from './integer';\nimport isInteger from './helpers/isInteger';\nimport wrapValidator from './helpers/wrapValidator';\n\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || /* istanbul ignore next */ (2 ** 53) - 1;\n\nfunction isValidLength(x) {\n  return isInteger(x) && Math.abs(x) < MAX_SAFE_INTEGER;\n}\n\nexport default function range(min, max) {\n  if (!isValidLength(min) || !isValidLength(max)) {\n    throw new RangeError(`\"range\" requires two integers: ${min} and ${max} given`);\n  }\n  if (min === max) {\n    throw new RangeError('min and max must not be the same');\n  }\n  return wrapValidator(and([integer(), between({ gte: min, lt: max })], 'range'), 'range', { min, max });\n}\n"]},"metadata":{},"sourceType":"script"}