{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.browserSupportsPolyfills = exports.compareTwoStringsUsingDiceCoefficient = exports.commandToRegExp = exports.concatTranscripts = exports.debounce = void 0;\n\nvar debounce = function debounce(func, wait, immediate) {\n  var timeout;\n  return function () {\n    var context = this;\n    var args = arguments;\n\n    var later = function later() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n};\n\nexports.debounce = debounce;\n\nvar concatTranscripts = function concatTranscripts() {\n  for (var _len = arguments.length, transcriptParts = new Array(_len), _key = 0; _key < _len; _key++) {\n    transcriptParts[_key] = arguments[_key];\n  }\n\n  return transcriptParts.map(function (t) {\n    return t.trim();\n  }).join(' ').trim();\n}; // The command matching code is a modified version of Backbone.Router by Jeremy Ashkenas, under the MIT license.\n\n\nexports.concatTranscripts = concatTranscripts;\nvar optionalParam = /\\s*\\((.*?)\\)\\s*/g;\nvar optionalRegex = /(\\(\\?:[^)]+\\))\\?/g;\nvar namedParam = /(\\(\\?)?:\\w+/g;\nvar splatParam = /\\*/g;\nvar escapeRegExp = /[-{}[\\]+?.,\\\\^$|#]/g;\n\nvar commandToRegExp = function commandToRegExp(command) {\n  if (command instanceof RegExp) {\n    return new RegExp(command.source, 'i');\n  }\n\n  command = command.replace(escapeRegExp, '\\\\$&').replace(optionalParam, '(?:$1)?').replace(namedParam, function (match, optional) {\n    return optional ? match : '([^\\\\s]+)';\n  }).replace(splatParam, '(.*?)').replace(optionalRegex, '\\\\s*$1?\\\\s*');\n  return new RegExp('^' + command + '$', 'i');\n}; // this is from https://github.com/aceakash/string-similarity\n\n\nexports.commandToRegExp = commandToRegExp;\n\nvar compareTwoStringsUsingDiceCoefficient = function compareTwoStringsUsingDiceCoefficient(first, second) {\n  first = first.replace(/\\s+/g, '').toLowerCase();\n  second = second.replace(/\\s+/g, '').toLowerCase();\n  if (!first.length && !second.length) return 1; // if both are empty strings\n\n  if (!first.length || !second.length) return 0; // if only one is empty string\n\n  if (first === second) return 1; // identical\n\n  if (first.length === 1 && second.length === 1) return 0; // both are 1-letter strings\n\n  if (first.length < 2 || second.length < 2) return 0; // if either is a 1-letter string\n\n  var firstBigrams = new Map();\n\n  for (var i = 0; i < first.length - 1; i++) {\n    var bigram = first.substring(i, i + 2);\n    var count = firstBigrams.has(bigram) ? firstBigrams.get(bigram) + 1 : 1;\n    firstBigrams.set(bigram, count);\n  }\n\n  var intersectionSize = 0;\n\n  for (var _i = 0; _i < second.length - 1; _i++) {\n    var _bigram = second.substring(_i, _i + 2);\n\n    var _count = firstBigrams.has(_bigram) ? firstBigrams.get(_bigram) : 0;\n\n    if (_count > 0) {\n      firstBigrams.set(_bigram, _count - 1);\n      intersectionSize++;\n    }\n  }\n\n  return 2.0 * intersectionSize / (first.length + second.length - 2);\n};\n\nexports.compareTwoStringsUsingDiceCoefficient = compareTwoStringsUsingDiceCoefficient;\n\nvar browserSupportsPolyfills = function browserSupportsPolyfills() {\n  return typeof window !== 'undefined' && window.navigator !== undefined && window.navigator.mediaDevices !== undefined && window.navigator.mediaDevices.getUserMedia !== undefined && (window.AudioContext !== undefined || window.webkitAudioContext !== undefined);\n};\n\nexports.browserSupportsPolyfills = browserSupportsPolyfills;","map":{"version":3,"names":["Object","defineProperty","exports","value","browserSupportsPolyfills","compareTwoStringsUsingDiceCoefficient","commandToRegExp","concatTranscripts","debounce","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","clearTimeout","setTimeout","_len","length","transcriptParts","Array","_key","map","t","trim","join","optionalParam","optionalRegex","namedParam","splatParam","escapeRegExp","command","RegExp","source","replace","match","optional","first","second","toLowerCase","firstBigrams","Map","i","bigram","substring","count","has","get","set","intersectionSize","_i","_bigram","_count","window","navigator","undefined","mediaDevices","getUserMedia","AudioContext","webkitAudioContext"],"sources":["/home/yair/Desktop/what i delete form project/node_modules/react-speech-recognition/lib/utils.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.browserSupportsPolyfills = exports.compareTwoStringsUsingDiceCoefficient = exports.commandToRegExp = exports.concatTranscripts = exports.debounce = void 0;\n\nvar debounce = function debounce(func, wait, immediate) {\n  var timeout;\n  return function () {\n    var context = this;\n    var args = arguments;\n\n    var later = function later() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n};\n\nexports.debounce = debounce;\n\nvar concatTranscripts = function concatTranscripts() {\n  for (var _len = arguments.length, transcriptParts = new Array(_len), _key = 0; _key < _len; _key++) {\n    transcriptParts[_key] = arguments[_key];\n  }\n\n  return transcriptParts.map(function (t) {\n    return t.trim();\n  }).join(' ').trim();\n}; // The command matching code is a modified version of Backbone.Router by Jeremy Ashkenas, under the MIT license.\n\n\nexports.concatTranscripts = concatTranscripts;\nvar optionalParam = /\\s*\\((.*?)\\)\\s*/g;\nvar optionalRegex = /(\\(\\?:[^)]+\\))\\?/g;\nvar namedParam = /(\\(\\?)?:\\w+/g;\nvar splatParam = /\\*/g;\nvar escapeRegExp = /[-{}[\\]+?.,\\\\^$|#]/g;\n\nvar commandToRegExp = function commandToRegExp(command) {\n  if (command instanceof RegExp) {\n    return new RegExp(command.source, 'i');\n  }\n\n  command = command.replace(escapeRegExp, '\\\\$&').replace(optionalParam, '(?:$1)?').replace(namedParam, function (match, optional) {\n    return optional ? match : '([^\\\\s]+)';\n  }).replace(splatParam, '(.*?)').replace(optionalRegex, '\\\\s*$1?\\\\s*');\n  return new RegExp('^' + command + '$', 'i');\n}; // this is from https://github.com/aceakash/string-similarity\n\n\nexports.commandToRegExp = commandToRegExp;\n\nvar compareTwoStringsUsingDiceCoefficient = function compareTwoStringsUsingDiceCoefficient(first, second) {\n  first = first.replace(/\\s+/g, '').toLowerCase();\n  second = second.replace(/\\s+/g, '').toLowerCase();\n  if (!first.length && !second.length) return 1; // if both are empty strings\n\n  if (!first.length || !second.length) return 0; // if only one is empty string\n\n  if (first === second) return 1; // identical\n\n  if (first.length === 1 && second.length === 1) return 0; // both are 1-letter strings\n\n  if (first.length < 2 || second.length < 2) return 0; // if either is a 1-letter string\n\n  var firstBigrams = new Map();\n\n  for (var i = 0; i < first.length - 1; i++) {\n    var bigram = first.substring(i, i + 2);\n    var count = firstBigrams.has(bigram) ? firstBigrams.get(bigram) + 1 : 1;\n    firstBigrams.set(bigram, count);\n  }\n\n  var intersectionSize = 0;\n\n  for (var _i = 0; _i < second.length - 1; _i++) {\n    var _bigram = second.substring(_i, _i + 2);\n\n    var _count = firstBigrams.has(_bigram) ? firstBigrams.get(_bigram) : 0;\n\n    if (_count > 0) {\n      firstBigrams.set(_bigram, _count - 1);\n      intersectionSize++;\n    }\n  }\n\n  return 2.0 * intersectionSize / (first.length + second.length - 2);\n};\n\nexports.compareTwoStringsUsingDiceCoefficient = compareTwoStringsUsingDiceCoefficient;\n\nvar browserSupportsPolyfills = function browserSupportsPolyfills() {\n  return typeof window !== 'undefined' && window.navigator !== undefined && window.navigator.mediaDevices !== undefined && window.navigator.mediaDevices.getUserMedia !== undefined && (window.AudioContext !== undefined || window.webkitAudioContext !== undefined);\n};\n\nexports.browserSupportsPolyfills = browserSupportsPolyfills;"],"mappings":"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"},"metadata":{},"sourceType":"script"}