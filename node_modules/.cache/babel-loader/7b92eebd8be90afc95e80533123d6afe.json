{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = stringEndsWithValidator;\n\nvar _propTypes = require(\"prop-types\");\n\nvar _wrapValidator = _interopRequireDefault(require(\"./helpers/wrapValidator\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction stringEndsWithValidator(end) {\n  if (typeof end !== 'string' || end.length === 0) {\n    throw new TypeError('a non-empty string is required');\n  }\n\n  var validator = function stringEndsWith(props, propName, componentName) {\n    var propValue = props[propName];\n\n    if (propValue == null) {\n      return null;\n    }\n\n    for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      rest[_key - 3] = arguments[_key];\n    }\n\n    var stringError = _propTypes.string.apply(void 0, [props, propName, componentName].concat(rest));\n\n    if (stringError) {\n      return stringError;\n    }\n\n    if (!propValue.endsWith(end) || propValue.length <= end.length) {\n      return new TypeError(\"\".concat(componentName, \": \").concat(propName, \" does not end with \\\"\").concat(end, \"\\\"\"));\n    }\n\n    return null;\n  };\n\n  validator.isRequired = function requiredStringEndsWith() {\n    var stringError = _propTypes.string.isRequired.apply(_propTypes.string, arguments);\n\n    if (stringError) {\n      return stringError;\n    }\n\n    return validator.apply(void 0, arguments);\n  };\n\n  return (0, _wrapValidator[\"default\"])(validator, \"stringEndsWith: \".concat(end));\n}","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;;;;;;;AAEe,SAASA,uBAAT,CAAiCC,GAAjC,EAAsC;EACnD,IAAI,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,CAACC,MAAJD,KAAe,CAA9C,EAAiD;IAC/C,MAAM,IAAIE,SAAJ,CAAc,gCAAd,CAAN;EACD;;EAED,IAAMC,SAAS,GAAG,SAASC,cAAT,CAAwBC,KAAxB,EAA+BC,QAA/B,EAAyCC,aAAzC,EAAiE;IAAA,IAC7DC,SAD6D,GAC/CH,KAD+C,CACxEC,QADwE;;IAGjF,IAAIE,SAAS,IAAI,IAAjB,EAAuB;MACrB,OAAO,IAAP;IACD;;IALgF,kCAANC,IAAM;MAANA,IAAM,UAANA,GAAMC,eAAND;IAAM;;IAOjF,IAAME,WAAW,GAAGC,iCAAOP,KAAPO,EAAcN,QAAdM,EAAwBL,aAAxBK,SAA0CH,IAA1CG,EAApB;;IACA,IAAID,WAAJ,EAAiB;MACf,OAAOA,WAAP;IACD;;IAED,IAAI,CAACH,SAAS,CAACK,QAAVL,CAAmBR,GAAnBQ,CAAD,IAA4BA,SAAS,CAACP,MAAVO,IAAoBR,GAAG,CAACC,MAAxD,EAAgE;MAC9D,OAAO,IAAIC,SAAJ,WAAiBK,aAAjB,eAAmCD,QAAnC,kCAAkEN,GAAlE,QAAP;IACD;;IACD,OAAO,IAAP;EAfF;;EAkBAG,SAAS,CAACW,UAAVX,GAAuB,SAASY,sBAAT,GAAyC;IAC9D,IAAMJ,WAAW,GAAGC,kBAAOE,UAAPF,oCAApB;;IACA,IAAID,WAAJ,EAAiB;MACf,OAAOA,WAAP;IACD;;IACD,OAAOR,SAAS,MAATA,mBAAP;EALF;;EAQA,OAAO,+BAAcA,SAAd,4BAA4CH,GAA5C,EAAP;AACD","names":["stringEndsWithValidator","end","length","TypeError","validator","stringEndsWith","props","propName","componentName","propValue","rest","arguments","stringError","string","endsWith","isRequired","requiredStringEndsWith"],"sources":["/home/yair/Desktop/Programming/what i delete form project/node_modules/react-outside-click-handler/node_modules/airbnb-prop-types/src/stringEndsWith.js"],"sourcesContent":["import { string } from 'prop-types';\nimport wrapValidator from './helpers/wrapValidator';\n\nexport default function stringEndsWithValidator(end) {\n  if (typeof end !== 'string' || end.length === 0) {\n    throw new TypeError('a non-empty string is required');\n  }\n\n  const validator = function stringEndsWith(props, propName, componentName, ...rest) {\n    const { [propName]: propValue } = props;\n\n    if (propValue == null) {\n      return null;\n    }\n\n    const stringError = string(props, propName, componentName, ...rest);\n    if (stringError) {\n      return stringError;\n    }\n\n    if (!propValue.endsWith(end) || propValue.length <= end.length) {\n      return new TypeError(`${componentName}: ${propName} does not end with \"${end}\"`);\n    }\n    return null;\n  };\n\n  validator.isRequired = function requiredStringEndsWith(...args) {\n    const stringError = string.isRequired(...args);\n    if (stringError) {\n      return stringError;\n    }\n    return validator(...args);\n  };\n\n  return wrapValidator(validator, `stringEndsWith: ${end}`);\n}\n"]},"metadata":{},"sourceType":"script"}