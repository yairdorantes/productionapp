{"ast":null,"code":"var _jsxFileName = \"/home/yair/Desktop/project/src/components/PostPage.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Loader from \"./Loader\";\nimport { helpHttp } from \"../helpers/helpHttp\";\nimport AuthContext from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet url = \"http://127.0.0.1:8000/api/comments/\";\nconst parametros = {\n  method: \"GET\",\n  headers: {\n    accept: \"application/json\"\n  }\n};\n\nconst PostPage = () => {\n  _s();\n\n  let {\n    user\n  } = useContext(AuthContext);\n  const [post, setPost] = useState();\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState(\"\");\n  const params = useParams();\n\n  const fetchAPi = async () => {\n    let url = `http://127.0.0.1:8000/api/post/${params.id}`;\n    const response = await fetch(url, parametros);\n    const responseJSON = await response.json();\n    setPost(responseJSON.post[0]);\n  }; // const fetchComments = async () => {\n  //   let url = `http://127.0.0.1:8000/api/comments/${params.id}`;\n  //   const response = await fetch(url, parametros);\n  //   const responseJSON = await response.json();\n  //   setComments(responseJSON.comments);\n  // };\n\n\n  const getCommentContent = e => {\n    setComment(e.target.value); // console.log(e.target.value);\n  };\n\n  const sendComment = async () => {\n    let options = {\n      body: {\n        post_id: params.id,\n        user_name: user.username,\n        comentario: comment\n      },\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    };\n    helpHttp().post(url, options).then(response => console.log(response));\n    let testing = {\n      post_id: params.id,\n      user_name: user.username,\n      comentario: comment\n    };\n    setComments([...comments, testing]);\n    console.log(comments);\n  };\n\n  useEffect(() => {\n    fetchAPi();\n    fetchComments();\n    console.log(\"inicio\", comments);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-post-content\",\n      children: !post ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-post-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-post-content-img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.image_src,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-text-post\",\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"comentar como: \", user.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: sendComment,\n              children: \"jaja\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"comment\",\n              id: \"comment\",\n              cols: \"30\",\n              rows: \"10\",\n              value: comment,\n              onChange: getCommentContent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"all-commets\",\n            children: comments ? comments.map((res, id) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: res.author\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: res.created_date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"post-comment\",\n                  children: res.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 25\n                }, this)]\n              }, id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 23\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"No commens\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(PostPage, \"AnvM9BvyOhSijTGZB3VeN95ejIY=\", false, function () {\n  return [useParams];\n});\n\n_c = PostPage;\nexport default PostPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["useContext","useEffect","useState","useParams","Loader","helpHttp","AuthContext","url","parametros","method","headers","accept","PostPage","user","post","setPost","comments","setComments","comment","setComment","params","fetchAPi","id","response","fetch","responseJSON","json","getCommentContent","e","target","value","sendComment","options","body","post_id","user_name","username","comentario","then","console","log","testing","fetchComments","title","image_src","content","map","res","author","created_date","text"],"sources":["/home/yair/Desktop/project/src/components/PostPage.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Loader from \"./Loader\";\nimport { helpHttp } from \"../helpers/helpHttp\";\nimport AuthContext from \"../context/AuthContext\";\nlet url = \"http://127.0.0.1:8000/api/comments/\";\n\nconst parametros = {\n  method: \"GET\",\n  headers: {\n    accept: \"application/json\",\n  },\n};\n\nconst PostPage = () => {\n  let { user } = useContext(AuthContext);\n\n  const [post, setPost] = useState();\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState(\"\");\n  const params = useParams();\n\n  const fetchAPi = async () => {\n    let url = `http://127.0.0.1:8000/api/post/${params.id}`;\n    const response = await fetch(url, parametros);\n    const responseJSON = await response.json();\n    setPost(responseJSON.post[0]);\n  };\n\n  // const fetchComments = async () => {\n  //   let url = `http://127.0.0.1:8000/api/comments/${params.id}`;\n  //   const response = await fetch(url, parametros);\n  //   const responseJSON = await response.json();\n  //   setComments(responseJSON.comments);\n  // };\n\n  const getCommentContent = (e) => {\n    setComment(e.target.value);\n    // console.log(e.target.value);\n  };\n\n  const sendComment = async () => {\n    let options = {\n      body: {\n        post_id: params.id,\n        user_name: user.username,\n        comentario: comment,\n      },\n      headers: { \"content-type\": \"application/json\" },\n    };\n    helpHttp()\n      .post(url, options)\n      .then((response) => console.log(response));\n\n    let testing = {\n      post_id: params.id,\n      user_name: user.username,\n      comentario: comment,\n    };\n\n    setComments([...comments, testing]);\n    console.log(comments);\n  };\n\n  useEffect(() => {\n    fetchAPi();\n    fetchComments();\n    console.log(\"inicio\", comments);\n  }, []);\n\n  return (\n    <>\n      <div className=\"container-post-content\">\n        {!post ? (\n          <Loader></Loader>\n        ) : (\n          <div className=\"container-post-content\">\n            <h4>{post.title}</h4>\n            <div className=\"container-post-content-img\">\n              <img src={post.image_src} alt=\"\" />\n            </div>\n            <div className=\"box-text-post\">{post.content}</div>\n\n            <section>\n              <div className=\"comment-section\">\n                <div>comentar como: {user.username}</div>\n                <button onClick={sendComment}>jaja</button>\n                <textarea\n                  name=\"comment\"\n                  id=\"comment\"\n                  cols=\"30\"\n                  rows=\"10\"\n                  value={comment}\n                  onChange={getCommentContent}\n                ></textarea>\n              </div>\n              <div className=\"all-commets\">\n                {comments ? (\n                  comments.map((res, id) => {\n                    return (\n                      <div key={id}>\n                        <div>{res.author}</div>\n                        <div>{res.created_date}</div>\n                        <div className=\"post-comment\">{res.text}</div>\n                      </div>\n                    );\n                  })\n                ) : (\n                  <div>No commens</div>\n                )}\n              </div>\n            </section>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default PostPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}