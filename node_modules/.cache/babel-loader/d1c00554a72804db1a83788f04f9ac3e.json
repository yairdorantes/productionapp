{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getRequiredBy;\n\nvar _objectIs = _interopRequireDefault(require(\"object-is\"));\n\nvar _wrapValidator = _interopRequireDefault(require(\"./helpers/wrapValidator\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction getRequiredBy(requiredByPropName, propType) {\n  var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  function requiredBy(props, propName, componentName) {\n    if (props[requiredByPropName]) {\n      var propValue = props[propName];\n\n      if ((0, _objectIs[\"default\"])(propValue, defaultValue) || typeof propValue === 'undefined') {\n        return new TypeError(\"\".concat(componentName, \": when \").concat(requiredByPropName, \" is true, prop \\u201C\").concat(propName, \"\\u201D must be present.\"));\n      }\n    }\n\n    for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      rest[_key - 3] = arguments[_key];\n    }\n\n    return propType.apply(void 0, [props, propName, componentName].concat(rest));\n  }\n\n  requiredBy.isRequired = function requiredByRequired(props, propName, componentName) {\n    var propValue = props[propName];\n\n    if ((0, _objectIs[\"default\"])(propValue, defaultValue)) {\n      return new TypeError(\"\".concat(componentName, \": prop \\u201C\").concat(propName, \"\\u201D must be present.\"));\n    }\n\n    for (var _len2 = arguments.length, rest = new Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n      rest[_key2 - 3] = arguments[_key2];\n    }\n\n    return propType.isRequired.apply(propType, [props, propName, componentName].concat(rest));\n  };\n\n  return (0, _wrapValidator[\"default\"])(requiredBy, \"requiredBy \\u201C\".concat(requiredByPropName, \"\\u201D\"), [requiredByPropName, defaultValue]);\n}","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;;;;;;;AAEe,SAASA,aAAT,CAAuBC,kBAAvB,EAA2CC,QAA3C,EAA0E;EAAA,IAArBC,YAAqB,uEAAN,IAAM;;EACvF,SAASC,UAAT,CAAoBC,KAApB,EAA2BC,QAA3B,EAAqCC,aAArC,EAA6D;IAC3D,IAAIF,KAAK,CAACJ,kBAAD,CAAT,EAA+B;MAAA,IACTO,SADS,GACKH,KADL,CACpBC,QADoB;;MAE7B,IAAI,0BAAGE,SAAH,EAAcL,YAAd,KAA+B,OAAOK,SAAP,KAAqB,WAAxD,EAAqE;QACnE,OAAO,IAAIC,SAAJ,WACFF,aADE,oBACqBN,kBADrB,kCAC0DK,QAD1D,6BAAP;MAGD;IACF;;IAR0D,kCAANI,IAAM;MAANA,IAAM,UAANA,GAAMC,eAAND;IAAM;;IAS3D,OAAOR,QAAQ,MAARA,UAASG,KAAT,EAAgBC,QAAhB,EAA0BC,aAA1B,SAA4CG,IAA5C,EAAP;EACD;;EACDN,UAAU,CAACQ,UAAXR,GAAwB,SAASS,kBAAT,CAA4BR,KAA5B,EAAmCC,QAAnC,EAA6CC,aAA7C,EAAqE;IAAA,IACvEC,SADuE,GACzDH,KADyD,CAClFC,QADkF;;IAE3F,IAAI,0BAAGE,SAAH,EAAcL,YAAd,CAAJ,EAAiC;MAC/B,OAAO,IAAIM,SAAJ,WAAiBF,aAAjB,0BAAyCD,QAAzC,6BAAP;IACD;;IAJ0F,mCAANI,IAAM;MAANA,IAAM,WAANA,GAAMC,gBAAND;IAAM;;IAK3F,OAAOR,QAAQ,CAACU,UAATV,iBAAQ,CAAYG,KAAZ,EAAmBC,QAAnB,EAA6BC,aAA7B,SAA+CG,IAA/C,CAARR,CAAP;EALF;;EAQA,OAAO,+BACLE,UADK,6BAEUH,kBAFV,aAGL,CAACA,kBAAD,EAAqBE,YAArB,CAHK,CAAP;AAKD","names":["getRequiredBy","requiredByPropName","propType","defaultValue","requiredBy","props","propName","componentName","propValue","TypeError","rest","arguments","isRequired","requiredByRequired"],"sources":["/home/yair/Desktop/Programming/what i delete form project/node_modules/react-outside-click-handler/node_modules/airbnb-prop-types/src/requiredBy.js"],"sourcesContent":["import is from 'object-is';\nimport wrapValidator from './helpers/wrapValidator';\n\nexport default function getRequiredBy(requiredByPropName, propType, defaultValue = null) {\n  function requiredBy(props, propName, componentName, ...rest) {\n    if (props[requiredByPropName]) {\n      const { [propName]: propValue } = props;\n      if (is(propValue, defaultValue) || typeof propValue === 'undefined') {\n        return new TypeError(\n          `${componentName}: when ${requiredByPropName} is true, prop “${propName}” must be present.`,\n        );\n      }\n    }\n    return propType(props, propName, componentName, ...rest);\n  }\n  requiredBy.isRequired = function requiredByRequired(props, propName, componentName, ...rest) {\n    const { [propName]: propValue } = props;\n    if (is(propValue, defaultValue)) {\n      return new TypeError(`${componentName}: prop “${propName}” must be present.`);\n    }\n    return propType.isRequired(props, propName, componentName, ...rest);\n  };\n\n  return wrapValidator(\n    requiredBy,\n    `requiredBy “${requiredByPropName}”`,\n    [requiredByPropName, defaultValue],\n  );\n}\n"]},"metadata":{},"sourceType":"script"}