{"ast":null,"code":"var _jsxFileName = \"/home/yair/Desktop/project/src/components/PayPal.js\",\n    _s = $RefreshSig$();\n\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PayPal = () => {\n  _s();\n\n  const {\n    product\n  } = props;\n  const [error, setError] = useState(null);\n  const [paidFor, setPaidFor] = useState(false);\n\n  const handleApprove = orderId => {\n    setPaidFor(true);\n  };\n\n  if (paidFor) {\n    alert(\"thanks\");\n  }\n\n  if (error) {\n    alert(\"error\");\n  }\n\n  const test = {\n    describe: \"testing\",\n    price: 50\n  };\n  return /*#__PURE__*/_jsxDEV(PayPalScriptProvider, {\n    options: {\n      \"client-id\": \"AWYnRL-IaoMzV_g06MQN-nkIpxi38HNR43onxwb6kns-lLsMTJD0WFOoQysHVmL5i8IfTVAVqfCAa-wM\"\n    },\n    children: /*#__PURE__*/_jsxDEV(PayPalButtons, {\n      onClick: (data, actions) => {\n        const hasAlreadyCourse = false;\n\n        if (hasAlreadyCourse) {\n          setError(\"ya compraste\");\n          return actions.reject();\n        }\n      },\n      createOrder: (data, actions) => {\n        return actions.order.create({\n          purchase_units: [{\n            description: test.describe,\n            amount: {\n              value: test.price\n            }\n          }]\n        });\n      },\n      onAprove: async (data, action) => {\n        const order = await action.order.capture();\n        console.log(\"order\", order);\n        handleApprove(data.orderID);\n      },\n      onCancel: () => {},\n      onError: err => {\n        setError(err);\n        console.log(\"paypal error\");\n      },\n      style: {\n        layout: \"horizontal\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PayPal, \"4LwF7KL9lzRynJGbrTFV4Uuggjg=\");\n\n_c = PayPal;\nexport default PayPal;\n\nvar _c;\n\n$RefreshReg$(_c, \"PayPal\");","map":{"version":3,"names":["PayPalScriptProvider","PayPalButtons","useState","PayPal","product","props","error","setError","paidFor","setPaidFor","handleApprove","orderId","alert","test","describe","price","data","actions","hasAlreadyCourse","reject","order","create","purchase_units","description","amount","value","action","capture","console","log","orderID","err","layout"],"sources":["/home/yair/Desktop/project/src/components/PayPal.js"],"sourcesContent":["import { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\nimport { useState } from \"react\";\nconst PayPal = () => {\n  const { product } = props;\n  const [error, setError] = useState(null);\n  const [paidFor, setPaidFor] = useState(false);\n\n  const handleApprove = (orderId) => {\n    setPaidFor(true);\n  };\n\n  if (paidFor) {\n    alert(\"thanks\");\n  }\n  if (error) {\n    alert(\"error\");\n  }\n\n  const test = {\n    describe: \"testing\",\n    price: 50,\n  };\n  return (\n    <PayPalScriptProvider\n      options={{\n        \"client-id\":\n          \"AWYnRL-IaoMzV_g06MQN-nkIpxi38HNR43onxwb6kns-lLsMTJD0WFOoQysHVmL5i8IfTVAVqfCAa-wM\",\n      }}\n    >\n      <PayPalButtons\n        onClick={(data, actions) => {\n          const hasAlreadyCourse = false;\n          if (hasAlreadyCourse) {\n            setError(\"ya compraste\");\n            return actions.reject();\n          }\n        }}\n        createOrder={(data, actions) => {\n          return actions.order.create({\n            purchase_units: [\n              {\n                description: test.describe,\n                amount: {\n                  value: test.price,\n                },\n              },\n            ],\n          });\n        }}\n        onAprove={async (data, action) => {\n          const order = await action.order.capture();\n          console.log(\"order\", order);\n          handleApprove(data.orderID);\n        }}\n        onCancel={() => {}}\n        onError={(err) => {\n          setError(err);\n          console.log(\"paypal error\");\n        }}\n        style={{ layout: \"horizontal\" }}\n      />\n    </PayPalScriptProvider>\n  );\n};\n\nexport default PayPal;\n"],"mappings":";;;AAAA,SAASA,oBAAT,EAA+BC,aAA/B,QAAoD,yBAApD;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AACA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACnB,MAAM;IAAEC;EAAF,IAAcC,KAApB;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;EACA,MAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;;EAEA,MAAMQ,aAAa,GAAIC,OAAD,IAAa;IACjCF,UAAU,CAAC,IAAD,CAAV;EACD,CAFD;;EAIA,IAAID,OAAJ,EAAa;IACXI,KAAK,CAAC,QAAD,CAAL;EACD;;EACD,IAAIN,KAAJ,EAAW;IACTM,KAAK,CAAC,OAAD,CAAL;EACD;;EAED,MAAMC,IAAI,GAAG;IACXC,QAAQ,EAAE,SADC;IAEXC,KAAK,EAAE;EAFI,CAAb;EAIA,oBACE,QAAC,oBAAD;IACE,OAAO,EAAE;MACP,aACE;IAFK,CADX;IAAA,uBAME,QAAC,aAAD;MACE,OAAO,EAAE,CAACC,IAAD,EAAOC,OAAP,KAAmB;QAC1B,MAAMC,gBAAgB,GAAG,KAAzB;;QACA,IAAIA,gBAAJ,EAAsB;UACpBX,QAAQ,CAAC,cAAD,CAAR;UACA,OAAOU,OAAO,CAACE,MAAR,EAAP;QACD;MACF,CAPH;MAQE,WAAW,EAAE,CAACH,IAAD,EAAOC,OAAP,KAAmB;QAC9B,OAAOA,OAAO,CAACG,KAAR,CAAcC,MAAd,CAAqB;UAC1BC,cAAc,EAAE,CACd;YACEC,WAAW,EAAEV,IAAI,CAACC,QADpB;YAEEU,MAAM,EAAE;cACNC,KAAK,EAAEZ,IAAI,CAACE;YADN;UAFV,CADc;QADU,CAArB,CAAP;MAUD,CAnBH;MAoBE,QAAQ,EAAE,OAAOC,IAAP,EAAaU,MAAb,KAAwB;QAChC,MAAMN,KAAK,GAAG,MAAMM,MAAM,CAACN,KAAP,CAAaO,OAAb,EAApB;QACAC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBT,KAArB;QACAV,aAAa,CAACM,IAAI,CAACc,OAAN,CAAb;MACD,CAxBH;MAyBE,QAAQ,EAAE,MAAM,CAAE,CAzBpB;MA0BE,OAAO,EAAGC,GAAD,IAAS;QAChBxB,QAAQ,CAACwB,GAAD,CAAR;QACAH,OAAO,CAACC,GAAR,CAAY,cAAZ;MACD,CA7BH;MA8BE,KAAK,EAAE;QAAEG,MAAM,EAAE;MAAV;IA9BT;MAAA;MAAA;MAAA;IAAA;EANF;IAAA;IAAA;IAAA;EAAA,QADF;AAyCD,CA7DD;;GAAM7B,M;;KAAAA,M;AA+DN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}