{"ast":null,"code":"var _jsxFileName = \"/home/yair/Desktop/project/src/components/PostPage.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Loader from \"./Loader\";\nimport { helpHttp } from \"../helpers/helpHttp\";\nimport AuthContext from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet url = \"http://127.0.0.1:8000/api/comments/\";\nconst parametros = {\n  method: \"GET\",\n  headers: {\n    accept: \"application/json\"\n  }\n};\nlet initialComment = {\n  author: \"\",\n  text: \"\",\n  created_date: \"\"\n}; // let start = [\n//   { id: 1, b: 2 },\n//   { id: 1, b: 2 },\n// ];\n\nconst PostPage = () => {\n  _s();\n\n  let {\n    user\n  } = useContext(AuthContext);\n  const [post, setPost] = useState();\n  const [comments, setComments] = useState(initialComment);\n  const [comment, setComment] = useState(\"\");\n  const params = useParams();\n\n  const getDate = () => {\n    const fecha = new Date();\n    const meses = [\"en\", \"feb\", \"mar\", \"abr\", \"may\", \"jun\", \"jul\", \"agto\", \"sept\", \"oct\", \"nov\", \"dic\"];\n    let actual = fecha.getDate() + \" \" + meses[fecha.getMonth()] + \" \" + fecha.getUTCFullYear();\n    return actual;\n  };\n\n  const fetchAPi = async () => {\n    let url = `http://127.0.0.1:8000/api/post/${params.id}`;\n    const response = await fetch(url, parametros);\n    const responseJSON = await response.json();\n    setPost(responseJSON.post[0]);\n  };\n\n  const fetchComments = async () => {\n    let url = `http://127.0.0.1:8000/api/comments/${params.id}`;\n    const response = await fetch(url, parametros);\n    const responseJSON = await response.json();\n\n    if (responseJSON.comments) {\n      setComments(responseJSON.comments);\n    }\n  };\n\n  const getCommentContent = e => {\n    setComment(e.target.value); // console.log(e.target.value);\n  };\n\n  const sendComment = async () => {\n    let options = {\n      body: {\n        post_id: params.id,\n        user_name: user.username,\n        comentario: comment,\n        date: getDate()\n      },\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    };\n    helpHttp().post(url, options).then(response => console.log(response));\n    let testing = {\n      author: user.username,\n      text: comment,\n      created_date: getDate()\n    };\n    comments.push(testing);\n    setComments([...comments]);\n    console.log(comments);\n  };\n\n  useEffect(() => {\n    fetchAPi();\n    fetchComments();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-post-content\",\n      children: !post ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-post-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-post-content-img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.image_src,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-text-post\",\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"comentar como: \", user.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: sendComment,\n              children: \"jaja\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"comment\",\n              id: \"comment\",\n              cols: \"30\",\n              rows: \"10\",\n              value: comment,\n              onChange: getCommentContent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"all-commets\",\n            children: comments.lenght ? comments.map((res, id) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: res.author\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: res.created_date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"post-comment\",\n                  children: res.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 25\n                }, this)]\n              }, id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 23\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"No commens\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(PostPage, \"MV67VHwHf0FFe9F4S2qWqRmLB8c=\", false, function () {\n  return [useParams];\n});\n\n_c = PostPage;\nexport default PostPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["useContext","useEffect","useState","useParams","Loader","helpHttp","AuthContext","url","parametros","method","headers","accept","initialComment","author","text","created_date","PostPage","user","post","setPost","comments","setComments","comment","setComment","params","getDate","fecha","Date","meses","actual","getMonth","getUTCFullYear","fetchAPi","id","response","fetch","responseJSON","json","fetchComments","getCommentContent","e","target","value","sendComment","options","body","post_id","user_name","username","comentario","date","then","console","log","testing","push","title","image_src","content","lenght","map","res"],"sources":["/home/yair/Desktop/project/src/components/PostPage.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Loader from \"./Loader\";\nimport { helpHttp } from \"../helpers/helpHttp\";\nimport AuthContext from \"../context/AuthContext\";\nlet url = \"http://127.0.0.1:8000/api/comments/\";\n\nconst parametros = {\n  method: \"GET\",\n  headers: {\n    accept: \"application/json\",\n  },\n};\nlet initialComment = {\n  author: \"\",\n  text: \"\",\n  created_date: \"\",\n};\n// let start = [\n//   { id: 1, b: 2 },\n//   { id: 1, b: 2 },\n// ];\nconst PostPage = () => {\n  let { user } = useContext(AuthContext);\n\n  const [post, setPost] = useState();\n  const [comments, setComments] = useState(initialComment);\n  const [comment, setComment] = useState(\"\");\n  const params = useParams();\n\n  const getDate = () => {\n    const fecha = new Date();\n    const meses = [\n      \"en\",\n      \"feb\",\n      \"mar\",\n      \"abr\",\n      \"may\",\n      \"jun\",\n      \"jul\",\n      \"agto\",\n      \"sept\",\n      \"oct\",\n      \"nov\",\n      \"dic\",\n    ];\n    let actual =\n      fecha.getDate() +\n      \" \" +\n      meses[fecha.getMonth()] +\n      \" \" +\n      fecha.getUTCFullYear();\n\n    return actual;\n  };\n\n  const fetchAPi = async () => {\n    let url = `http://127.0.0.1:8000/api/post/${params.id}`;\n    const response = await fetch(url, parametros);\n    const responseJSON = await response.json();\n    setPost(responseJSON.post[0]);\n  };\n\n  const fetchComments = async () => {\n    let url = `http://127.0.0.1:8000/api/comments/${params.id}`;\n    const response = await fetch(url, parametros);\n    const responseJSON = await response.json();\n    if (responseJSON.comments) {\n      setComments(responseJSON.comments);\n    }\n  };\n\n  const getCommentContent = (e) => {\n    setComment(e.target.value);\n    // console.log(e.target.value);\n  };\n\n  const sendComment = async () => {\n    let options = {\n      body: {\n        post_id: params.id,\n        user_name: user.username,\n        comentario: comment,\n        date: getDate(),\n      },\n      headers: { \"content-type\": \"application/json\" },\n    };\n    helpHttp()\n      .post(url, options)\n\n      .then((response) => console.log(response));\n\n    let testing = {\n      author: user.username,\n      text: comment,\n      created_date: getDate(),\n    };\n\n    comments.push(testing);\n    setComments([...comments]);\n    console.log(comments);\n  };\n\n  useEffect(() => {\n    fetchAPi();\n    fetchComments();\n  }, []);\n\n  return (\n    <>\n      <div className=\"container-post-content\">\n        {!post ? (\n          <Loader></Loader>\n        ) : (\n          <div className=\"container-post-content\">\n            <h4>{post.title}</h4>\n            <div className=\"container-post-content-img\">\n              <img src={post.image_src} alt=\"\" />\n            </div>\n            <div className=\"box-text-post\">{post.content}</div>\n\n            <section>\n              <div className=\"comment-section\">\n                <div>comentar como: {user.username}</div>\n                <button onClick={sendComment}>jaja</button>\n                <textarea\n                  name=\"comment\"\n                  id=\"comment\"\n                  cols=\"30\"\n                  rows=\"10\"\n                  value={comment}\n                  onChange={getCommentContent}\n                ></textarea>\n              </div>\n              <div className=\"all-commets\">\n                {comments.lenght ? (\n                  comments.map((res, id) => {\n                    return (\n                      <div key={id}>\n                        <div>{res.author}</div>\n                        <div>{res.created_date}</div>\n                        <div className=\"post-comment\">{res.text}</div>\n                      </div>\n                    );\n                  })\n                ) : (\n                  <div>No commens</div>\n                )}\n              </div>\n            </section>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default PostPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}