{"ast":null,"code":"var _jsxFileName = \"/home/yair/Desktop/what i delete form project/src/components/Cards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport \"./styles/cardStyles.css\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/css\";\nimport \"swiper/css/effect-cards\";\nimport \"./styles/stylesCards.css\";\nimport { Pagination, EffectCards, Mousewheel, Keyboard } from \"swiper\";\nimport wordSound from \"../media/cards/audio.png\";\nimport iconAdd from \"../media/add.png\";\nimport Loader from \"./Loader\";\nimport CardTuto from \"./CardTuto\";\nimport MenuBar from \"./MenuBar\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport AuthContext from \"../context/AuthContext\";\nimport FormCard from \"./FormCard\";\nimport PayPal from \"./PayPal\";\nimport { helpHttp } from \"../helpers/helpHttp\";\nimport Modal from \"react-modal\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport next from \"../media/next3.png\";\nimport { useSpeechSynthesis } from \"react-speech-kit\";\nimport mySite from \"./Domain\";\nimport { isMobile } from \"react-device-detect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet url = \"\";\nconst urlImageCard = \"https://res.cloudinary.com/tolumaster/image/upload/v1/\";\n\nconst Cards = () => {\n  _s();\n\n  let {\n    user\n  } = useContext(AuthContext);\n  console.log(user.user_id);\n  let urlIncreaseScore = `${mySite}increase/${user.user_id}`;\n  const paramsUrl = useParams();\n  const [isActive, setIsActive] = useState(true);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [isPremium, setIsPremium] = useState(false);\n  const [cardLength, setCardLength] = useState(0);\n  const [cards, setCards] = useState([]);\n  const [answerSelected, setAnswerSelected] = useState();\n  const [cardPicked, setCardPicked] = useState();\n  const [modalQuestion, setModalQuestion] = useState(false);\n  const [result, setResult] = useState();\n  const [answers, setAnswers] = useState([]);\n  const [isSent, setIsSent] = useState(false);\n  const [mode, setMode] = useState(true);\n  const customStyles = {\n    content: {\n      // color: \"black\",\n      width: isMobile ? \"84vw\" : \"320px\",\n      height: \"390px\",\n      backgroundColor: mode ? \"white\" : \"black\",\n      top: isMobile ? \"50%\" : \"40%\",\n      left: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n      border: \"solid 1px #270969\",\n      // backgroundColor: \"#00000000\",\n      outline: \"none\",\n      transition: \"1s ease-in-out\",\n      borderRadius: \"10px\",\n      overflow: \"hidden\",\n      fontFamily: \"Mulish, sans-serif\" // padding: \"0\",\n\n    },\n    overlay: {\n      zIndex: 1000,\n      backgroundColor: \"rgba(0, 0, 0, 0.9)\"\n    }\n  };\n  const params = {\n    method: \"GET\",\n    headers: {\n      accept: \"application/json\"\n    }\n  };\n\n  const fetchAPi = async () => {\n    // console.log(\"fetched\");\n    paramsUrl.section === \"mis-cartas\" ? url = `${mySite}usercards/${user.user_id}` : url = `${mySite}cards/${paramsUrl.section}`;\n    const response = await fetch(url, params);\n    const responseJSON = await response.json();\n    setCards(responseJSON);\n    setCardLength(responseJSON.cards.length); // console.log(responseJSON.cards.length);\n  };\n\n  const getUserData = () => {\n    helpHttp().get(`${mySite}users/${user.user_id}`).then(res => {\n      // console.log(res.user.premium);\n      setIsPremium(res.user.premium);\n    });\n  };\n\n  useEffect(() => {\n    fetchAPi();\n    getUserData(); // console.log(setCards);\n  }, []);\n\n  const handleDisplay = e => {\n    isActive ? setIsActive(false) : setIsActive(true);\n  };\n\n  const hideQuestion = () => {\n    setModalQuestion(false);\n    setResult();\n    setIsSent(false);\n  };\n\n  const openModal = e => {\n    // e.preventDefault();\n    modalIsOpen ? setModalIsOpen(false) : setModalIsOpen(true);\n  };\n\n  function differentRandom() {\n    var randoms = [];\n\n    while (randoms.length < 3) {\n      var r = Math.floor(Math.random() * cardLength - 1) + 1;\n      if (randoms.indexOf(r) === -1) randoms.push(r);\n    }\n\n    return randoms;\n  }\n\n  const generateQuestion = () => {\n    const lista = [];\n    const cartas = cards.cards;\n\n    if (cartas.length < 4) {\n      hideQuestion();\n      alert(\"Necesitas agregar almenos 4 cartas para generar un Quiz\");\n    } else {\n      const randomsGenerated = differentRandom();\n      const cardChoosen = cartas[randomsGenerated[0]];\n      lista.push(cardChoosen);\n      setCardPicked(cardChoosen);\n      const answerOne = cartas[randomsGenerated[1]];\n      lista.push(answerOne);\n      const answerTwo = cartas[randomsGenerated[2]];\n      lista.push(answerTwo);\n      setAnswers(lista.sort(() => Math.random() - 0.5));\n    }\n  };\n\n  const handleChangeRadio = e => {\n    setAnswerSelected(e.target.value);\n  };\n\n  const handleAnswer = () => {\n    setIsSent(true);\n\n    if (answerSelected === cardPicked.cardMeaning) {\n      console.log(\"correct\");\n      setResult(true);\n      helpHttp().post(urlIncreaseScore);\n    } else {\n      console.log(\"incorrect\");\n      setResult(false);\n    }\n  };\n\n  const openModalQuestion = e => {\n    // e.preventDefault();\n    if (cards.length < 4) {\n      alert(\"Agrega mÃ¡s cartas UwU\");\n      return;\n    } else {\n      generateQuestion();\n      modalQuestion ? setModalQuestion(false) : setModalQuestion(true);\n    }\n  };\n\n  const nextQuestion = () => {\n    generateQuestion();\n    setResult();\n    setIsSent(false);\n  };\n\n  const toggleMode = () => {\n    mode ? setMode(false) : setMode(true);\n  };\n\n  const {\n    speak,\n    voices,\n    cancel,\n    speaking\n  } = useSpeechSynthesis();\n  let voice;\n  voices.forEach(item => {\n    if (item.lang === \"en-US\") {\n      voice = item;\n    }\n  });\n\n  const speakCard = word => {\n    speak({\n      text: word,\n      voice\n    });\n    speaking && cancel();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all-cards\",\n      children: [paramsUrl.section === \"mis-cartas\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"del-cards\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/cards/delete\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-delete-cards\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Eliminar \\xF3 Editar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Swiper, {\n        keyboard: true,\n        mousewheel: true,\n        className: \"mySwiper\",\n        effect: \"cards\",\n        modules: [EffectCards, Mousewheel, Pagination, Keyboard],\n        children: !cards ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this) : !cards.cards ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nada-por-aqui\",\n          children: \"Nada por aqui...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this) : cards.cards.map((card, key) => {\n          // console.log(cards);\n          return /*#__PURE__*/_jsxDEV(SwiperSlide, {\n            style: {\n              borderColor: \"white\",\n              backgroundImage: \"url(\" + (card.imageURL === \"\" ? urlImageCard + card.cardImage : card.imageURL) + \")\"\n            },\n            className: \"swiper-slide-card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"contenido-card\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    onClick: handleDisplay,\n                    className: \"card-text\",\n                    children: isActive ? card.cardTitle : card.cardMeaning\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-sound-card\",\n                onClick: () => {\n                  speakCard(card.cardTitle);\n                },\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"word-sound\",\n                  src: wordSound,\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 19\n            }, this)\n          }, card.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), paramsUrl.section === \"mis-cartas\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-icon-add\",\n        children: cards.cards && cards.cards.length >= 10 && !isPremium ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-updatein-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert-no-more-cards\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Para seguir agregando cartas, actual\\xEDzate a premium\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(PayPal, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 17\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: openModal,\n          className: \"icon-add\",\n          src: iconAdd,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this), cards.cards && cards.cards.length > 3 && /*#__PURE__*/_jsxDEV(Modal // className=\"modal-card-question\"\n      , {\n        ariaHideApp: false,\n        style: customStyles,\n        isOpen: modalQuestion,\n        contentLabel: \"Minimal Modal Example\" // className=\"modal-quiz\"\n        ,\n        children: /*#__PURE__*/_jsxDEV(OutsideClickHandler, {\n          onOutsideClick: () => {\n            hideQuestion();\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"switch\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: toggleMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this), cardPicked && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: mode ? \"black\" : \"white\"\n              },\n              className: \"container-question-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-card\",\n                children: [\"Elige el significado de\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [\" \", cardPicked.cardTitle]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"parent-answers\",\n                children: answers && answers.map((answer, key) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"box-answers\",\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"rad-label\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"radio\",\n                        className: \"rad-input\",\n                        name: \"rad\",\n                        onChange: handleChangeRadio,\n                        value: answer.cardMeaning\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 314,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"rad-design\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 321,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"rad-text\",\n                        children: answer.cardMeaning\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 322,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 31\n                    }, this)\n                  }, answer.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 29\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"container-result-message\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: isSent ? result ? \"message-question answer-right\" : \"message-question answer-wrong\" : \"hide\",\n                  children: result ? \"Correcto\" : /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Incorrecto\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 346,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"parent-btn\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: isSent ? \"hide\" : \"btn-send-answer\",\n                  onClick: handleAnswer,\n                  children: \"Enviar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"next-quest\",\n                style: {\n                  bottom: isSent ? \"0\" : \"-65px\"\n                },\n                onClick: nextQuestion,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  onClick: nextQuestion,\n                  className: \"next-icon\",\n                  src: next,\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: result ? \"upScore-indicator upScoreAnimation\" : \"upScore-indicator\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"+1XP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this), isPremium && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cont-btn-review\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"css-button-shadow-border-sliding--sky \",\n          onClick: openModalQuestion,\n          children: \"Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormCard, {\n      fetchApi: fetchAPi,\n      modalIsOpen: modalIsOpen,\n      openModal: openModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuBar, {\n      wasUp: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Cards, \"kaR6RlWdoSkgUF2Ti638YYvXcfU=\", false, function () {\n  return [useParams, useSpeechSynthesis];\n});\n\n_c = Cards;\nexport default Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Swiper","SwiperSlide","Pagination","EffectCards","Mousewheel","Keyboard","wordSound","iconAdd","Loader","CardTuto","MenuBar","NavLink","useParams","AuthContext","FormCard","PayPal","helpHttp","Modal","OutsideClickHandler","next","useSpeechSynthesis","mySite","isMobile","url","urlImageCard","Cards","user","console","log","user_id","urlIncreaseScore","paramsUrl","isActive","setIsActive","modalIsOpen","setModalIsOpen","isPremium","setIsPremium","cardLength","setCardLength","cards","setCards","answerSelected","setAnswerSelected","cardPicked","setCardPicked","modalQuestion","setModalQuestion","result","setResult","answers","setAnswers","isSent","setIsSent","mode","setMode","customStyles","content","width","height","backgroundColor","top","left","transform","border","outline","transition","borderRadius","overflow","fontFamily","overlay","zIndex","params","method","headers","accept","fetchAPi","section","response","fetch","responseJSON","json","length","getUserData","get","then","res","premium","handleDisplay","e","hideQuestion","openModal","differentRandom","randoms","r","Math","floor","random","indexOf","push","generateQuestion","lista","cartas","alert","randomsGenerated","cardChoosen","answerOne","answerTwo","sort","handleChangeRadio","target","value","handleAnswer","cardMeaning","post","openModalQuestion","nextQuestion","toggleMode","speak","voices","cancel","speaking","voice","forEach","item","lang","speakCard","word","text","map","card","key","borderColor","backgroundImage","imageURL","cardImage","cardTitle","id","color","answer","bottom"],"sources":["/home/yair/Desktop/what i delete form project/src/components/Cards.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport \"./styles/cardStyles.css\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/css\";\nimport \"swiper/css/effect-cards\";\nimport \"./styles/stylesCards.css\";\nimport { Pagination, EffectCards, Mousewheel, Keyboard } from \"swiper\";\nimport wordSound from \"../media/cards/audio.png\";\nimport iconAdd from \"../media/add.png\";\nimport Loader from \"./Loader\";\nimport CardTuto from \"./CardTuto\";\nimport MenuBar from \"./MenuBar\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport AuthContext from \"../context/AuthContext\";\nimport FormCard from \"./FormCard\";\nimport PayPal from \"./PayPal\";\nimport { helpHttp } from \"../helpers/helpHttp\";\nimport Modal from \"react-modal\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport next from \"../media/next3.png\";\nimport { useSpeechSynthesis } from \"react-speech-kit\";\nimport mySite from \"./Domain\";\nimport { isMobile } from \"react-device-detect\";\nlet url = \"\";\nconst urlImageCard = \"https://res.cloudinary.com/tolumaster/image/upload/v1/\";\n\nconst Cards = () => {\n  let { user } = useContext(AuthContext);\n  console.log(user.user_id);\n  let urlIncreaseScore = `${mySite}increase/${user.user_id}`;\n\n  const paramsUrl = useParams();\n  const [isActive, setIsActive] = useState(true);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [isPremium, setIsPremium] = useState(false);\n  const [cardLength, setCardLength] = useState(0);\n  const [cards, setCards] = useState([]);\n  const [answerSelected, setAnswerSelected] = useState();\n  const [cardPicked, setCardPicked] = useState();\n  const [modalQuestion, setModalQuestion] = useState(false);\n  const [result, setResult] = useState();\n  const [answers, setAnswers] = useState([]);\n  const [isSent, setIsSent] = useState(false);\n  const [mode, setMode] = useState(true);\n  const customStyles = {\n    content: {\n      // color: \"black\",\n      width: isMobile ? \"84vw\" : \"320px\",\n      height: \"390px\",\n      backgroundColor: mode ? \"white\" : \"black\",\n      top: isMobile ? \"50%\" : \"40%\",\n      left: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n      border: \"solid 1px #270969\",\n      // backgroundColor: \"#00000000\",\n      outline: \"none\",\n      transition: \"1s ease-in-out\",\n      borderRadius: \"10px\",\n      overflow: \"hidden\",\n      fontFamily: \"Mulish, sans-serif\",\n\n      // padding: \"0\",\n    },\n    overlay: { zIndex: 1000, backgroundColor: \"rgba(0, 0, 0, 0.9)\" },\n  };\n  const params = {\n    method: \"GET\",\n    headers: {\n      accept: \"application/json\",\n    },\n  };\n\n  const fetchAPi = async () => {\n    // console.log(\"fetched\");\n    paramsUrl.section === \"mis-cartas\"\n      ? (url = `${mySite}usercards/${user.user_id}`)\n      : (url = `${mySite}cards/${paramsUrl.section}`);\n    const response = await fetch(url, params);\n    const responseJSON = await response.json();\n    setCards(responseJSON);\n    setCardLength(responseJSON.cards.length);\n    // console.log(responseJSON.cards.length);\n  };\n\n  const getUserData = () => {\n    helpHttp()\n      .get(`${mySite}users/${user.user_id}`)\n      .then((res) => {\n        // console.log(res.user.premium);\n        setIsPremium(res.user.premium);\n      });\n  };\n\n  useEffect(() => {\n    fetchAPi();\n    getUserData();\n    // console.log(setCards);\n  }, []);\n\n  const handleDisplay = (e) => {\n    isActive ? setIsActive(false) : setIsActive(true);\n  };\n  const hideQuestion = () => {\n    setModalQuestion(false);\n    setResult();\n    setIsSent(false);\n  };\n\n  const openModal = (e) => {\n    // e.preventDefault();\n    modalIsOpen ? setModalIsOpen(false) : setModalIsOpen(true);\n  };\n\n  function differentRandom() {\n    var randoms = [];\n    while (randoms.length < 3) {\n      var r = Math.floor(Math.random() * cardLength - 1) + 1;\n      if (randoms.indexOf(r) === -1) randoms.push(r);\n    }\n    return randoms;\n  }\n  const generateQuestion = () => {\n    const lista = [];\n    const cartas = cards.cards;\n    if (cartas.length < 4) {\n      hideQuestion();\n      alert(\"Necesitas agregar almenos 4 cartas para generar un Quiz\");\n    } else {\n      const randomsGenerated = differentRandom();\n      const cardChoosen = cartas[randomsGenerated[0]];\n      lista.push(cardChoosen);\n      setCardPicked(cardChoosen);\n      const answerOne = cartas[randomsGenerated[1]];\n      lista.push(answerOne);\n      const answerTwo = cartas[randomsGenerated[2]];\n      lista.push(answerTwo);\n      setAnswers(lista.sort(() => Math.random() - 0.5));\n    }\n  };\n\n  const handleChangeRadio = (e) => {\n    setAnswerSelected(e.target.value);\n  };\n  const handleAnswer = () => {\n    setIsSent(true);\n    if (answerSelected === cardPicked.cardMeaning) {\n      console.log(\"correct\");\n      setResult(true);\n      helpHttp().post(urlIncreaseScore);\n    } else {\n      console.log(\"incorrect\");\n      setResult(false);\n    }\n  };\n  const openModalQuestion = (e) => {\n    // e.preventDefault();\n    if (cards.length < 4) {\n      alert(\"Agrega mÃ¡s cartas UwU\");\n      return;\n    } else {\n      generateQuestion();\n      modalQuestion ? setModalQuestion(false) : setModalQuestion(true);\n    }\n  };\n  const nextQuestion = () => {\n    generateQuestion();\n    setResult();\n    setIsSent(false);\n  };\n\n  const toggleMode = () => {\n    mode ? setMode(false) : setMode(true);\n  };\n\n  const { speak, voices, cancel, speaking } = useSpeechSynthesis();\n  let voice;\n  voices.forEach((item) => {\n    if (item.lang === \"en-US\") {\n      voice = item;\n    }\n  });\n  const speakCard = (word) => {\n    speak({\n      text: word,\n      voice,\n    });\n    speaking && cancel();\n  };\n  return (\n    <>\n      {/* <AboutUser wasUp={result}></AboutUser> */}\n\n      <div className=\"all-cards\">\n        {paramsUrl.section === \"mis-cartas\" && (\n          <div className=\"del-cards\">\n            <NavLink to=\"/cards/delete\">\n              <button className=\"btn-delete-cards\">\n                <strong>Eliminar Ã³ Editar</strong>\n              </button>\n            </NavLink>\n          </div>\n        )}\n\n        <Swiper\n          keyboard={true}\n          mousewheel={true}\n          className=\"mySwiper\"\n          effect={\"cards\"}\n          modules={[EffectCards, Mousewheel, Pagination, Keyboard]}\n        >\n          {/* <CardTuto></CardTuto> */}\n          {!cards ? (\n            <Loader></Loader>\n          ) : !cards.cards ? (\n            <div className=\"nada-por-aqui\">Nada por aqui...</div>\n          ) : (\n            cards.cards.map((card, key) => {\n              // console.log(cards);\n              return (\n                <SwiperSlide\n                  style={{\n                    borderColor: \"white\",\n                    backgroundImage:\n                      \"url(\" +\n                      (card.imageURL === \"\"\n                        ? urlImageCard + card.cardImage\n                        : card.imageURL) +\n                      \")\",\n                  }}\n                  className=\"swiper-slide-card\"\n                  key={card.id}\n                >\n                  <div className=\"container-card\">\n                    <div className=\"card\">\n                      <div className=\"contenido-card\">\n                        <h3 onClick={handleDisplay} className=\"card-text\">\n                          {isActive ? card.cardTitle : card.cardMeaning}\n                        </h3>\n                      </div>\n                    </div>\n                    <button\n                      className=\"btn-sound-card\"\n                      onClick={() => {\n                        speakCard(card.cardTitle);\n                      }}\n                    >\n                      <img className=\"word-sound\" src={wordSound} alt=\"\" />\n                    </button>\n                  </div>\n                </SwiperSlide>\n              );\n            })\n          )}\n        </Swiper>\n        {paramsUrl.section === \"mis-cartas\" && (\n          <div className=\"container-icon-add\">\n            {cards.cards && cards.cards.length >= 10 && !isPremium ? (\n              <>\n                <div className=\"container-updatein-card\">\n                  <div className=\"alert-no-more-cards\">\n                    <strong>\n                      Para seguir agregando cartas, actualÃ­zate a premium\n                    </strong>\n                  </div>\n                  <div>\n                    <PayPal></PayPal>\n                  </div>\n                </div>\n              </>\n            ) : (\n              <img\n                onClick={openModal}\n                className=\"icon-add\"\n                src={iconAdd}\n                alt=\"\"\n              />\n            )}\n          </div>\n        )}\n        {cards.cards && cards.cards.length > 3 && (\n          <Modal\n            // className=\"modal-card-question\"\n            ariaHideApp={false}\n            style={customStyles}\n            isOpen={modalQuestion}\n            contentLabel=\"Minimal Modal Example\"\n            // className=\"modal-quiz\"\n          >\n            <OutsideClickHandler\n              onOutsideClick={() => {\n                hideQuestion();\n              }}\n            >\n              <label className=\"switch\">\n                <input type=\"checkbox\" onClick={toggleMode} />\n                <span className=\"slider\"></span>\n              </label>\n              {cardPicked && (\n                <>\n                  <div\n                    style={{ color: mode ? \"black\" : \"white\" }}\n                    className=\"container-question-card\"\n                  >\n                    <div className=\"question-card\">\n                      Elige el significado de\n                      <strong> {cardPicked.cardTitle}</strong>\n                    </div>\n                    <div className=\"parent-answers\">\n                      {answers &&\n                        answers.map((answer, key) => {\n                          return (\n                            <div key={answer.id} className=\"box-answers\">\n                              <label className=\"rad-label\">\n                                <input\n                                  type=\"radio\"\n                                  className=\"rad-input\"\n                                  name=\"rad\"\n                                  onChange={handleChangeRadio}\n                                  value={answer.cardMeaning}\n                                />\n                                <div className=\"rad-design\"></div>\n                                <div className=\"rad-text\">\n                                  {answer.cardMeaning}\n                                </div>\n                              </label>\n                            </div>\n                          );\n                        })}\n                    </div>\n\n                    <div className=\"container-result-message\">\n                      <div\n                        className={\n                          isSent\n                            ? result\n                              ? \"message-question answer-right\"\n                              : \"message-question answer-wrong\"\n                            : \"hide\"\n                        }\n                      >\n                        {result ? (\n                          \"Correcto\"\n                        ) : (\n                          <span>\n                            Incorrecto\n                            <br />\n                            {/* <span style={{ fontSize: \"15px\" }}>\n                            Respuesta: <strong>{cardPicked.cardMeaning}</strong>\n                          </span> */}\n                          </span>\n                        )}\n                      </div>\n                    </div>\n\n                    <div className=\"parent-btn\">\n                      <button\n                        className={isSent ? \"hide\" : \"btn-send-answer\"}\n                        onClick={handleAnswer}\n                      >\n                        Enviar\n                      </button>\n                    </div>\n                    <div\n                      className=\"next-quest\"\n                      style={{\n                        bottom: isSent ? \"0\" : \"-65px\",\n                      }}\n                      onClick={nextQuestion}\n                    >\n                      <img\n                        onClick={nextQuestion}\n                        className=\"next-icon\"\n                        src={next}\n                        alt=\"\"\n                      />\n                    </div>\n                  </div>\n                  <div\n                    className={\n                      result\n                        ? \"upScore-indicator upScoreAnimation\"\n                        : \"upScore-indicator\"\n                    }\n                  >\n                    <strong>+1XP</strong>\n                  </div>\n                </>\n              )}\n            </OutsideClickHandler>\n          </Modal>\n        )}\n        {isPremium && (\n          <div className=\"cont-btn-review\">\n            <button\n              className=\"css-button-shadow-border-sliding--sky \"\n              onClick={openModalQuestion}\n            >\n              Quiz\n            </button>\n          </div>\n        )}\n      </div>\n      <FormCard\n        fetchApi={fetchAPi}\n        modalIsOpen={modalIsOpen}\n        openModal={openModal}\n      ></FormCard>\n\n      <MenuBar wasUp={result}></MenuBar>\n    </>\n  );\n};\n\nexport default Cards;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}