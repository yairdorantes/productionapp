{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _objectIs = _interopRequireDefault(require(\"object-is\"));\n\nvar _wrapValidator = _interopRequireDefault(require(\"./helpers/wrapValidator\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction isNonNegative(x) {\n  return typeof x === 'number' && isFinite(x) && x >= 0 && !(0, _objectIs[\"default\"])(x, -0);\n}\n\nfunction nonNegativeNumber(props, propName, componentName) {\n  var value = props[propName];\n\n  if (value == null || isNonNegative(value)) {\n    return null;\n  }\n\n  return new RangeError(\"\".concat(propName, \" in \").concat(componentName, \" must be a non-negative number\"));\n}\n\nfunction requiredNonNegativeNumber(props, propName, componentName) {\n  var value = props[propName];\n\n  if (isNonNegative(value)) {\n    return null;\n  }\n\n  return new RangeError(\"\".concat(propName, \" in \").concat(componentName, \" must be a non-negative number\"));\n}\n\nnonNegativeNumber.isRequired = requiredNonNegativeNumber;\n\nvar _default = function _default() {\n  return (0, _wrapValidator[\"default\"])(nonNegativeNumber, 'nonNegativeNumber');\n};\n\nexports[\"default\"] = _default;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;;;;;;;AAEA,SAASA,aAAT,CAAuBC,CAAvB,EAA0B;EACxB,OAAO,OAAOA,CAAP,KAAa,QAAb,IAAyBC,QAAQ,CAACD,CAAD,CAAjC,IAAwCA,CAAC,IAAI,CAA7C,IAAkD,CAAC,0BAAGA,CAAH,EAAM,CAAC,CAAP,CAA1D;AACD;;AAED,SAASE,iBAAT,CAA2BC,KAA3B,EAAkCC,QAAlC,EAA4CC,aAA5C,EAA2D;EACzD,IAAMC,KAAK,GAAGH,KAAK,CAACC,QAAD,CAAnB;;EAEA,IAAIE,KAAK,IAAI,IAATA,IAAiBP,aAAa,CAACO,KAAD,CAAlC,EAA2C;IACzC,OAAO,IAAP;EACD;;EAED,OAAO,IAAIC,UAAJ,WAAkBH,QAAlB,iBAAiCC,aAAjC,oCAAP;AACD;;AAED,SAASG,yBAAT,CAAmCL,KAAnC,EAA0CC,QAA1C,EAAoDC,aAApD,EAAmE;EACjE,IAAMC,KAAK,GAAGH,KAAK,CAACC,QAAD,CAAnB;;EAEA,IAAIL,aAAa,CAACO,KAAD,CAAjB,EAA0B;IACxB,OAAO,IAAP;EACD;;EAED,OAAO,IAAIC,UAAJ,WAAkBH,QAAlB,iBAAiCC,aAAjC,oCAAP;AACD;;AAEDH,iBAAiB,CAACO,UAAlBP,GAA+BM,yBAA/BN;;eAEe;EAAA,OAAM,+BAAcA,iBAAd,EAAiC,mBAAjC,CAAN","names":["isNonNegative","x","isFinite","nonNegativeNumber","props","propName","componentName","value","RangeError","requiredNonNegativeNumber","isRequired"],"sources":["/home/yair/Desktop/Programming/what i delete form project/node_modules/react-outside-click-handler/node_modules/airbnb-prop-types/src/nonNegativeNumber.js"],"sourcesContent":["import is from 'object-is';\nimport wrapValidator from './helpers/wrapValidator';\n\nfunction isNonNegative(x) {\n  return typeof x === 'number' && isFinite(x) && x >= 0 && !is(x, -0);\n}\n\nfunction nonNegativeNumber(props, propName, componentName) {\n  const value = props[propName];\n\n  if (value == null || isNonNegative(value)) {\n    return null;\n  }\n\n  return new RangeError(`${propName} in ${componentName} must be a non-negative number`);\n}\n\nfunction requiredNonNegativeNumber(props, propName, componentName) {\n  const value = props[propName];\n\n  if (isNonNegative(value)) {\n    return null;\n  }\n\n  return new RangeError(`${propName} in ${componentName} must be a non-negative number`);\n}\n\nnonNegativeNumber.isRequired = requiredNonNegativeNumber;\n\nexport default () => wrapValidator(nonNegativeNumber, 'nonNegativeNumber');\n"]},"metadata":{},"sourceType":"script"}