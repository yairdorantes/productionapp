{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _propTypes = require(\"prop-types\");\n\nvar _wrapValidator = _interopRequireDefault(require(\"./helpers/wrapValidator\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction uniqueCountWithSet(arr) {\n  return new Set(arr).size;\n}\n/* istanbul ignore next */\n\n\nfunction uniqueCountLegacy(arr) {\n  var seen = [];\n  arr.forEach(function (item) {\n    if (seen.indexOf(item) === -1) {\n      seen.push(item);\n    }\n  });\n  return seen.length;\n}\n\nvar getUniqueCount = typeof Set === 'function' ? uniqueCountWithSet :\n/* istanbul ignore next */\nuniqueCountLegacy;\n\nfunction requiredUniqueArray(props, propName, componentName) {\n  for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    rest[_key - 3] = arguments[_key];\n  }\n\n  var result = _propTypes.array.isRequired.apply(_propTypes.array, [props, propName, componentName].concat(rest));\n\n  if (result != null) {\n    return result;\n  }\n\n  var propValue = props[propName];\n  var uniqueCount = getUniqueCount(propValue);\n\n  if (uniqueCount !== propValue.length) {\n    return new RangeError(\"\".concat(componentName, \": values must be unique. \").concat(propValue.length - uniqueCount, \" duplicate values found.\"));\n  }\n\n  return null;\n}\n\nfunction uniqueArray(props, propName) {\n  var propValue = props[propName];\n\n  if (propValue == null) {\n    return null;\n  }\n\n  for (var _len2 = arguments.length, rest = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n    rest[_key2 - 2] = arguments[_key2];\n  }\n\n  return requiredUniqueArray.apply(void 0, [props, propName].concat(rest));\n}\n\nuniqueArray.isRequired = requiredUniqueArray;\n\nvar _default = function _default() {\n  return (0, _wrapValidator[\"default\"])(uniqueArray, 'uniqueArray');\n};\n\nexports[\"default\"] = _default;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;;;;;;;AAEA,SAASA,kBAAT,CAA4BC,GAA5B,EAAiC;EAAE,OAAO,IAAIC,GAAJ,CAAQD,GAAR,EAAaE,IAApB;AAA2B;AAC9D;;;AACA,SAASC,iBAAT,CAA2BH,GAA3B,EAAgC;EAC9B,IAAMI,IAAI,GAAG,EAAb;EACAJ,GAAG,CAACK,OAAJL,CAAY,UAACM,IAAD,EAAU;IACpB,IAAIF,IAAI,CAACG,OAALH,CAAaE,IAAbF,MAAuB,CAAC,CAA5B,EAA+B;MAC7BA,IAAI,CAACI,IAALJ,CAAUE,IAAVF;IACD;EAHH;EAKA,OAAOA,IAAI,CAACK,MAAZ;AACD;;AAED,IAAMC,cAAc,GAAG,OAAOT,GAAP,KAAe,UAAf,GAA4BF,kBAA5B;AAAiD;AAA2BI,iBAAnG;;AAEA,SAASQ,mBAAT,CAA6BC,KAA7B,EAAoCC,QAApC,EAA8CC,aAA9C,EAAsE;EAAA,kCAANC,IAAM;IAANA,IAAM,UAANA,GAAMC,eAAND;EAAM;;EACpE,IAAME,MAAM,GAAGC,iBAAMC,UAAND,0BAAiBN,KAAjB,EAAwBC,QAAxB,EAAkCC,aAAlC,SAAoDC,IAApD,EAAf;;EACA,IAAIE,MAAM,IAAI,IAAd,EAAoB;IAClB,OAAOA,MAAP;EACD;;EAJmE,IAMhDG,SANgD,GAMlCR,KANkC,CAM3DC,QAN2D;EAOpE,IAAMQ,WAAW,GAAGX,cAAc,CAACU,SAAD,CAAlC;;EACA,IAAIC,WAAW,KAAKD,SAAS,CAACX,MAA9B,EAAsC;IACpC,OAAO,IAAIa,UAAJ,WAAkBR,aAAlB,sCAA2DM,SAAS,CAACX,MAAVW,GAAmBC,WAA9E,8BAAP;EACD;;EACD,OAAO,IAAP;AACD;;AAED,SAASE,WAAT,CAAqBX,KAArB,EAA4BC,QAA5B,EAA+C;EAAA,IACzBO,SADyB,GACXR,KADW,CACpCC,QADoC;;EAE7C,IAAIO,SAAS,IAAI,IAAjB,EAAuB;IACrB,OAAO,IAAP;EACD;;EAJ4C,mCAANL,IAAM;IAANA,IAAM,WAANA,GAAMC,gBAAND;EAAM;;EAM7C,OAAOJ,mBAAmB,MAAnBA,UAAoBC,KAApB,EAA2BC,QAA3B,SAAwCE,IAAxC,EAAP;AACD;;AACDQ,WAAW,CAACJ,UAAZI,GAAyBZ,mBAAzBY;;eAEe;EAAA,OAAM,+BAAcA,WAAd,EAA2B,aAA3B,CAAN","names":["uniqueCountWithSet","arr","Set","size","uniqueCountLegacy","seen","forEach","item","indexOf","push","length","getUniqueCount","requiredUniqueArray","props","propName","componentName","rest","arguments","result","array","isRequired","propValue","uniqueCount","RangeError","uniqueArray"],"sources":["/home/yair/Desktop/Programming/what i delete form project/node_modules/react-outside-click-handler/node_modules/airbnb-prop-types/src/uniqueArray.js"],"sourcesContent":["import { array } from 'prop-types';\nimport wrapValidator from './helpers/wrapValidator';\n\nfunction uniqueCountWithSet(arr) { return new Set(arr).size; }\n/* istanbul ignore next */\nfunction uniqueCountLegacy(arr) {\n  const seen = [];\n  arr.forEach((item) => {\n    if (seen.indexOf(item) === -1) {\n      seen.push(item);\n    }\n  });\n  return seen.length;\n}\n\nconst getUniqueCount = typeof Set === 'function' ? uniqueCountWithSet : /* istanbul ignore next */ uniqueCountLegacy;\n\nfunction requiredUniqueArray(props, propName, componentName, ...rest) {\n  const result = array.isRequired(props, propName, componentName, ...rest);\n  if (result != null) {\n    return result;\n  }\n\n  const { [propName]: propValue } = props;\n  const uniqueCount = getUniqueCount(propValue);\n  if (uniqueCount !== propValue.length) {\n    return new RangeError(`${componentName}: values must be unique. ${propValue.length - uniqueCount} duplicate values found.`);\n  }\n  return null;\n}\n\nfunction uniqueArray(props, propName, ...rest) {\n  const { [propName]: propValue } = props;\n  if (propValue == null) {\n    return null;\n  }\n\n  return requiredUniqueArray(props, propName, ...rest);\n}\nuniqueArray.isRequired = requiredUniqueArray;\n\nexport default () => wrapValidator(uniqueArray, 'uniqueArray');\n"]},"metadata":{},"sourceType":"script"}