{"ast":null,"code":"var _jsxFileName = \"/home/yair/Desktop/project/src/components/Cards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/css\";\nimport \"swiper/css/effect-cards\";\nimport \"./stylesCards.css\";\nimport { EffectCards, Mousewheel } from \"swiper\";\nimport wordSound from \"../media/cards/audio.png\";\nimport Loader from \"./Loader\";\nimport AboutUser from \"./AboutUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cards = () => {\n  _s();\n\n  let url = \"http://127.0.0.1:8000/api/cards/\";\n  const [isActive, setIsActive] = useState(true);\n  const [cards, setCards] = useState();\n  const params = {\n    method: \"GET\",\n    headers: {\n      accept: \"application/json\"\n    }\n  };\n\n  const fetchAPi = async () => {\n    const response = await fetch(url, params);\n    const responseJSON = await response.json();\n    setCards(responseJSON); // console.log(responseJSON);\n  };\n\n  useEffect(() => {\n    fetchAPi();\n  }, []);\n\n  const handleDisplay = e => {\n    isActive ? setIsActive(false) : setIsActive(true); // console.log(e.target.textContent);\n  };\n\n  var speechSynthesis = require(\"speech-synthesis\");\n\n  var cont = -1;\n  var arr = [\"#1F1A24\", \"#282A36\"];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AboutUser, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all-cards\",\n      children: /*#__PURE__*/_jsxDEV(Swiper, {\n        mousewheel: true,\n        className: \"mySwiper\",\n        effect: \"cards\",\n        modules: [EffectCards, Mousewheel],\n        children: !cards ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this) : cards.cards.map((card, key) => {\n          cont++;\n\n          if (cont === arr.length) {\n            cont = 0;\n          }\n\n          return /*#__PURE__*/_jsxDEV(SwiperSlide, {\n            style: {\n              borderWidth: \"2px\",\n              borderheight: \"1px\",\n              borderStyle: \"solid\",\n              backgroundColor: `${arr[cont]}`,\n              borderColor: \"white\",\n              width: \"00px\"\n            },\n            className: \"swiper-slide-card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container-card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"image-cards\",\n                  src: card.imageURL,\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"contenido-card\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    onClick: handleDisplay,\n                    className: \"card-text\",\n                    children: isActive ? card.cardTitle : card.cardMeaning\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    onClick: () => {\n                      speechSynthesis(card.cardTitle); // console.log(card.cardTitle);\n                    },\n                    className: \"word-sound\",\n                    src: wordSound,\n                    alt: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this)\n          }, card.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Cards, \"inrKkhrh18yzcZUOnf1c8650fdE=\");\n\n_c = Cards;\nexport default Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useEffect","useState","Swiper","SwiperSlide","EffectCards","Mousewheel","wordSound","Loader","AboutUser","Cards","url","isActive","setIsActive","cards","setCards","params","method","headers","accept","fetchAPi","response","fetch","responseJSON","json","handleDisplay","e","speechSynthesis","require","cont","arr","map","card","key","length","borderWidth","borderheight","borderStyle","backgroundColor","borderColor","width","imageURL","cardTitle","cardMeaning","id"],"sources":["/home/yair/Desktop/project/src/components/Cards.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/css\";\nimport \"swiper/css/effect-cards\";\nimport \"./stylesCards.css\";\n\nimport { EffectCards, Mousewheel } from \"swiper\";\nimport wordSound from \"../media/cards/audio.png\";\n\nimport Loader from \"./Loader\";\nimport AboutUser from \"./AboutUser\";\nconst Cards = () => {\n  let url = \"http://127.0.0.1:8000/api/cards/\";\n  const [isActive, setIsActive] = useState(true);\n\n  const [cards, setCards] = useState();\n  const params = {\n    method: \"GET\",\n    headers: {\n      accept: \"application/json\",\n    },\n  };\n  const fetchAPi = async () => {\n    const response = await fetch(url, params);\n    const responseJSON = await response.json();\n    setCards(responseJSON);\n    // console.log(responseJSON);\n  };\n\n  useEffect(() => {\n    fetchAPi();\n  }, []);\n\n  const handleDisplay = (e) => {\n    isActive ? setIsActive(false) : setIsActive(true);\n    // console.log(e.target.textContent);\n  };\n\n  var speechSynthesis = require(\"speech-synthesis\");\n\n  var cont = -1;\n  var arr = [\"#1F1A24\", \"#282A36\"];\n  return (\n    <>\n      <AboutUser></AboutUser>\n\n      <div className=\"all-cards\">\n        <Swiper\n          mousewheel={true}\n          className=\"mySwiper\"\n          effect={\"cards\"}\n          modules={[EffectCards, Mousewheel]}\n        >\n          {!cards ? (\n            <Loader></Loader>\n          ) : (\n            cards.cards.map((card, key) => {\n              cont++;\n              if (cont === arr.length) {\n                cont = 0;\n              }\n              return (\n                <SwiperSlide\n                  style={{\n                    borderWidth: \"2px\",\n                    borderheight: \"1px\",\n                    borderStyle: \"solid\",\n                    backgroundColor: `${arr[cont]}`,\n                    borderColor: \"white\",\n                    width: \"00px\",\n                  }}\n                  className=\"swiper-slide-card\"\n                  key={card.id}\n                >\n                  <div className=\"container-card\">\n                    <div className=\"card\">\n                      <img className=\"image-cards\" src={card.imageURL} alt=\"\" />\n                      <div className=\"contenido-card\">\n                        <h3 onClick={handleDisplay} className=\"card-text\">\n                          {isActive ? card.cardTitle : card.cardMeaning}\n                        </h3>\n                        <img\n                          onClick={() => {\n                            speechSynthesis(card.cardTitle);\n                            // console.log(card.cardTitle);\n                          }}\n                          className=\"word-sound\"\n                          src={wordSound}\n                          alt=\"\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </SwiperSlide>\n              );\n            })\n          )}\n        </Swiper>\n      </div>\n    </>\n  );\n};\n\nexport default Cards;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,cAApC;AACA,OAAO,YAAP;AACA,OAAO,yBAAP;AACA,OAAO,mBAAP;AAEA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,QAAxC;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;;AACA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAClB,IAAIC,GAAG,GAAG,kCAAV;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,IAAD,CAAxC;EAEA,MAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,EAAlC;EACA,MAAMc,MAAM,GAAG;IACbC,MAAM,EAAE,KADK;IAEbC,OAAO,EAAE;MACPC,MAAM,EAAE;IADD;EAFI,CAAf;;EAMA,MAAMC,QAAQ,GAAG,YAAY;IAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACX,GAAD,EAAMK,MAAN,CAA5B;IACA,MAAMO,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;IACAT,QAAQ,CAACQ,YAAD,CAAR,CAH2B,CAI3B;EACD,CALD;;EAOAtB,SAAS,CAAC,MAAM;IACdmB,QAAQ;EACT,CAFQ,EAEN,EAFM,CAAT;;EAIA,MAAMK,aAAa,GAAIC,CAAD,IAAO;IAC3Bd,QAAQ,GAAGC,WAAW,CAAC,KAAD,CAAd,GAAwBA,WAAW,CAAC,IAAD,CAA3C,CAD2B,CAE3B;EACD,CAHD;;EAKA,IAAIc,eAAe,GAAGC,OAAO,CAAC,kBAAD,CAA7B;;EAEA,IAAIC,IAAI,GAAG,CAAC,CAAZ;EACA,IAAIC,GAAG,GAAG,CAAC,SAAD,EAAY,SAAZ,CAAV;EACA,oBACE;IAAA,wBACE,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAGE;MAAK,SAAS,EAAC,WAAf;MAAA,uBACE,QAAC,MAAD;QACE,UAAU,EAAE,IADd;QAEE,SAAS,EAAC,UAFZ;QAGE,MAAM,EAAE,OAHV;QAIE,OAAO,EAAE,CAACzB,WAAD,EAAcC,UAAd,CAJX;QAAA,UAMG,CAACQ,KAAD,gBACC,QAAC,MAAD;UAAA;UAAA;UAAA;QAAA,QADD,GAGCA,KAAK,CAACA,KAAN,CAAYiB,GAAZ,CAAgB,CAACC,IAAD,EAAOC,GAAP,KAAe;UAC7BJ,IAAI;;UACJ,IAAIA,IAAI,KAAKC,GAAG,CAACI,MAAjB,EAAyB;YACvBL,IAAI,GAAG,CAAP;UACD;;UACD,oBACE,QAAC,WAAD;YACE,KAAK,EAAE;cACLM,WAAW,EAAE,KADR;cAELC,YAAY,EAAE,KAFT;cAGLC,WAAW,EAAE,OAHR;cAILC,eAAe,EAAG,GAAER,GAAG,CAACD,IAAD,CAAO,EAJzB;cAKLU,WAAW,EAAE,OALR;cAMLC,KAAK,EAAE;YANF,CADT;YASE,SAAS,EAAC,mBATZ;YAAA,uBAYE;cAAK,SAAS,EAAC,gBAAf;cAAA,uBACE;gBAAK,SAAS,EAAC,MAAf;gBAAA,wBACE;kBAAK,SAAS,EAAC,aAAf;kBAA6B,GAAG,EAAER,IAAI,CAACS,QAAvC;kBAAiD,GAAG,EAAC;gBAArD;kBAAA;kBAAA;kBAAA;gBAAA,QADF,eAEE;kBAAK,SAAS,EAAC,gBAAf;kBAAA,wBACE;oBAAI,OAAO,EAAEhB,aAAb;oBAA4B,SAAS,EAAC,WAAtC;oBAAA,UACGb,QAAQ,GAAGoB,IAAI,CAACU,SAAR,GAAoBV,IAAI,CAACW;kBADpC;oBAAA;oBAAA;oBAAA;kBAAA,QADF,eAIE;oBACE,OAAO,EAAE,MAAM;sBACbhB,eAAe,CAACK,IAAI,CAACU,SAAN,CAAf,CADa,CAEb;oBACD,CAJH;oBAKE,SAAS,EAAC,YALZ;oBAME,GAAG,EAAEnC,SANP;oBAOE,GAAG,EAAC;kBAPN;oBAAA;oBAAA;oBAAA;kBAAA,QAJF;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAFF;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA;UAZF,GAUOyB,IAAI,CAACY,EAVZ;YAAA;YAAA;YAAA;UAAA,QADF;QAkCD,CAvCD;MATJ;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA,gBADF;AA2DD,CA1FD;;GAAMlC,K;;KAAAA,K;AA4FN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}