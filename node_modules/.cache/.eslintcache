[{"/home/yair/Desktop/project/src/index.js":"1","/home/yair/Desktop/project/src/App.js":"2","/home/yair/Desktop/project/src/reportWebVitals.js":"3","/home/yair/Desktop/project/src/router/Routers.js":"4","/home/yair/Desktop/project/src/router/PrivateRoute.js":"5","/home/yair/Desktop/project/src/components/Cards.js":"6","/home/yair/Desktop/project/src/components/Menu.js":"7","/home/yair/Desktop/project/src/context/AuthContext.js":"8","/home/yair/Desktop/project/src/components/LoginPage.js":"9","/home/yair/Desktop/project/src/components/Session.js":"10","/home/yair/Desktop/project/src/components/Shorts.js":"11","/home/yair/Desktop/project/src/components/Stripe.js":"12","/home/yair/Desktop/project/src/components/Loader.js":"13","/home/yair/Desktop/project/src/components/AboutUser.js":"14","/home/yair/Desktop/project/src/components/Yair.js":"15","/home/yair/Desktop/project/src/helpers/helpHttp.js":"16","/home/yair/Desktop/project/src/components/PayPal.js":"17","/home/yair/Desktop/project/src/components/ShortsV2.js":"18","/home/yair/Desktop/project/src/components/Posts.js":"19","/home/yair/Desktop/project/src/components/PostPage.js":"20","/home/yair/Desktop/what i delete form project/src/index.js":"21","/home/yair/Desktop/what i delete form project/src/App.js":"22","/home/yair/Desktop/what i delete form project/src/reportWebVitals.js":"23","/home/yair/Desktop/what i delete form project/src/router/Routers.js":"24","/home/yair/Desktop/what i delete form project/src/router/PrivateRoute.js":"25","/home/yair/Desktop/what i delete form project/src/components/LoginPage.js":"26","/home/yair/Desktop/what i delete form project/src/components/Menu.js":"27","/home/yair/Desktop/what i delete form project/src/components/Cards.js":"28","/home/yair/Desktop/what i delete form project/src/components/Session.js":"29","/home/yair/Desktop/what i delete form project/src/components/ShortsV2.js":"30","/home/yair/Desktop/what i delete form project/src/components/Posts.js":"31","/home/yair/Desktop/what i delete form project/src/components/PostPage.js":"32","/home/yair/Desktop/what i delete form project/src/context/AuthContext.js":"33","/home/yair/Desktop/what i delete form project/src/components/AboutUser.js":"34","/home/yair/Desktop/what i delete form project/src/components/Loader.js":"35","/home/yair/Desktop/what i delete form project/src/helpers/helpHttp.js":"36","/home/yair/Desktop/what i delete form project/src/components/PayPal.js":"37","/home/yair/Desktop/what i delete form project/src/components/Stripe.js":"38","/home/yair/Desktop/what i delete form project/src/components/CardTuto.js":"39","/home/yair/Desktop/what i delete form project/src/components/MenuBar.js":"40","/home/yair/Desktop/what i delete form project/src/components/CardsMenu.js":"41","/home/yair/Desktop/what i delete form project/src/components/FormCard.js":"42","/home/yair/Desktop/what i delete form project/src/components/DeleteCards.js":"43","/home/yair/Desktop/what i delete form project/src/components/LoaderThin.js":"44","/home/yair/Desktop/what i delete form project/src/components/LeaderBoard.js":"45","/home/yair/Desktop/what i delete form project/src/components/Test.js":"46"},{"size":847,"mtime":1665801702381,"results":"47","hashOfConfig":"48"},{"size":232,"mtime":1664679853469,"results":"49","hashOfConfig":"48"},{"size":362,"mtime":1661975996000,"results":"50","hashOfConfig":"48"},{"size":1216,"mtime":1665800298912,"results":"51","hashOfConfig":"48"},{"size":300,"mtime":1664416157119,"results":"52","hashOfConfig":"48"},{"size":2942,"mtime":1665780322684,"results":"53","hashOfConfig":"48"},{"size":3014,"mtime":1665777735876,"results":"54","hashOfConfig":"48"},{"size":2745,"mtime":1664733778876,"results":"55","hashOfConfig":"48"},{"size":2683,"mtime":1665777487490,"results":"56","hashOfConfig":"48"},{"size":1386,"mtime":1665777599010,"results":"57","hashOfConfig":"48"},{"size":5486,"mtime":1665087283341,"results":"58","hashOfConfig":"48"},{"size":1192,"mtime":1664660874072,"results":"59","hashOfConfig":"48"},{"size":2441,"mtime":1665778139903,"results":"60","hashOfConfig":"48"},{"size":2933,"mtime":1665777822155,"results":"61","hashOfConfig":"48"},{"size":585,"mtime":1665087204963,"results":"62","hashOfConfig":"48"},{"size":1601,"mtime":1661975996000,"results":"63","hashOfConfig":"48"},{"size":2232,"mtime":1665806056601,"results":"64","hashOfConfig":"48"},{"size":9822,"mtime":1665780388326,"results":"65","hashOfConfig":"48"},{"size":3932,"mtime":1665777223294,"results":"66","hashOfConfig":"48"},{"size":4884,"mtime":1665769842971,"results":"67","hashOfConfig":"48"},{"size":847,"mtime":1666142388786,"results":"68","hashOfConfig":"69"},{"size":143,"mtime":1668730311251,"results":"70","hashOfConfig":"69"},{"size":362,"mtime":1661975996000,"results":"71","hashOfConfig":"69"},{"size":1702,"mtime":1666580586903,"results":"72","hashOfConfig":"69"},{"size":300,"mtime":1664416157119,"results":"73","hashOfConfig":"69"},{"size":2992,"mtime":1666475796934,"results":"74","hashOfConfig":"69"},{"size":2191,"mtime":1668474763285,"results":"75","hashOfConfig":"69"},{"size":13015,"mtime":1668743000234,"results":"76","hashOfConfig":"69"},{"size":1660,"mtime":1666114199074,"results":"77","hashOfConfig":"69"},{"size":11306,"mtime":1668390322813,"results":"78","hashOfConfig":"69"},{"size":6308,"mtime":1668388447127,"results":"79","hashOfConfig":"69"},{"size":5441,"mtime":1668387676122,"results":"80","hashOfConfig":"69"},{"size":2843,"mtime":1666034162429,"results":"81","hashOfConfig":"69"},{"size":4088,"mtime":1668744362393,"results":"82","hashOfConfig":"69"},{"size":2441,"mtime":1665778139903,"results":"83","hashOfConfig":"69"},{"size":1601,"mtime":1661975996000,"results":"84","hashOfConfig":"69"},{"size":2355,"mtime":1668024392305,"results":"85","hashOfConfig":"69"},{"size":1863,"mtime":1666290638001,"results":"86","hashOfConfig":"69"},{"size":1153,"mtime":1666543688224,"results":"87","hashOfConfig":"69"},{"size":2432,"mtime":1668743258507,"results":"88","hashOfConfig":"69"},{"size":3746,"mtime":1666583341269,"results":"89","hashOfConfig":"69"},{"size":5858,"mtime":1668745174672,"results":"90","hashOfConfig":"69"},{"size":3875,"mtime":1666748863136,"results":"91","hashOfConfig":"69"},{"size":382,"mtime":1666737745612,"results":"92","hashOfConfig":"69"},{"size":4162,"mtime":1668627233638,"results":"93","hashOfConfig":"69"},{"size":203,"mtime":1668730249446,"results":"94","hashOfConfig":"69"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"p3ulc9",{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"101"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},"1h2j9t4",{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"163"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"163"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"163"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"163"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"163"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"163"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"163"},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212"},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"163"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233"},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"240"},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"163"},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251"},{"filePath":"252","messages":"253","suppressedMessages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/yair/Desktop/project/src/index.js",[],[],"/home/yair/Desktop/project/src/App.js",[],[],[],"/home/yair/Desktop/project/src/reportWebVitals.js",[],[],"/home/yair/Desktop/project/src/router/Routers.js",[],[],"/home/yair/Desktop/project/src/router/PrivateRoute.js",[],[],"/home/yair/Desktop/project/src/components/Cards.js",["255"],[],"/home/yair/Desktop/project/src/components/Menu.js",[],[],"/home/yair/Desktop/project/src/context/AuthContext.js",["256"],[],"import jwt_decode from \"jwt-decode\";\nimport { createContext, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst AuthContext = createContext();\n\nexport default AuthContext;\n\nexport const AuthProvider = ({ children }) => {\n  let [authTokens, setAuthTokens] = useState(() =>\n    localStorage.getItem(\"authTokens\")\n      ? JSON.parse(localStorage.getItem(\"authTokens\"))\n      : null\n  );\n  let [user, setUser] = useState(() =>\n    localStorage.getItem(\"authTokens\")\n      ? jwt_decode(localStorage.getItem(\"authTokens\"))\n      : null\n  );\n  const [loading, setLoading] = useState(true);\n\n  const navigate = useNavigate();\n\n  let loginUser = async (e) => {\n    e.preventDefault();\n    let response = await fetch(\"http://127.0.0.1:8000/api/token/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: e.target.username.value,\n\n        password: e.target.password.value,\n      }),\n    });\n    let data = await response.json();\n    if (response.status === 200) {\n      console.log(\"success\");\n      console.log(data);\n      setAuthTokens(data);\n\n      setUser(jwt_decode(data.access));\n      console.log(jwt_decode(data.access));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n      navigate(\"/menu\");\n    } else {\n      alert(\"something went wrong\");\n    }\n  };\n\n  let logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem(\"authTokens\");\n    navigate(\"/login\");\n  };\n\n  let updateToken = async () => {\n    console.log(\"update token called\");\n    let response = await fetch(\"http://127.0.0.1:8000/api/token/refresh/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        refresh: authTokens?.refresh,\n      }),\n    });\n    let data = await response.json();\n\n    if (response.satus === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n    } else {\n      console.log(\"err\");\n      //logoutUser();\n    }\n    if (loading) {\n      setLoading(false);\n    }\n  };\n\n  let contextData = {\n    user: user,\n    authTokens: authTokens,\n    loginUser: loginUser,\n    logoutUser: logoutUser,\n  };\n\n  useEffect(() => {\n    if (loading) {\n      updateToken();\n    }\n    let fourMinutes = 1000 * 60 * 4;\n    let interval = setInterval(() => {\n      if (authTokens) {\n        updateToken();\n      }\n    }, fourMinutes);\n    return () => clearInterval(interval);\n  }, [authTokens, loading]);\n\n  return (\n    <AuthContext.Provider value={contextData}>\n      {loading ? null : children}\n    </AuthContext.Provider>\n  );\n};\n","/home/yair/Desktop/project/src/components/LoginPage.js",["257","258","259","260"],[],"/home/yair/Desktop/project/src/components/Session.js",["261","262"],[],"/home/yair/Desktop/project/src/components/Shorts.js",["263","264","265","266"],[],"/home/yair/Desktop/project/src/components/Stripe.js",["267","268","269","270","271","272"],[],"import {\n  Elements,\n  CardElement,\n  useStripe,\n  useElements,\n} from \"@stripe/react-stripe-js\";\n\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport axios from \"axios\";\nimport { helpHttp } from \"../helpers/helpHttp\";\nconst stripePromise = loadStripe(\n  \"pk_test_51KjBqNA9KCn8yVMOEG2TF4LAS9CZwMVfMuAIHu1opMaabVxmgUri9qkETyQ9Q7DGyB6g9bNxEg62zf6dsqQZGdij00t1hmBwwH\"\n);\nconst Stripe = () => {\n  const handleSubmit = async () => {\n    const stripe = await stripePromise;\n    const session = await stripe.redirectToCheckout({\n      lineItems: [\n        {\n          price: \"price_1Lnye9A9KCn8yVMOdR9IBuEE\",\n          quantity: \"1\",\n        },\n      ],\n      mode: \"payment\",\n      successUrl: \"http://localhost:3000/menu\",\n    });\n    console.log(session);\n  };\n  return (\n    <>\n      <form\n        action=\"http://127.0.0.1:8000/api/checkout/\"\n        method=\"POST\"\n        // onSubmit={handleSubmit}\n        className=\"card card-body\"\n      >\n        <div className=\"form-group\"></div>\n        <input type=\"text\" defaultValue={\"yair\"} />\n        <button onClick={handleSubmit} className=\"btn btn-success\">\n          buy\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default Stripe;\n",[],"/home/yair/Desktop/project/src/components/Loader.js",[],[],"/home/yair/Desktop/project/src/components/AboutUser.js",["273","274","275"],[],"/home/yair/Desktop/project/src/components/Yair.js",["276","277","278","279","280"],[],"/home/yair/Desktop/project/src/helpers/helpHttp.js",[],[],"/home/yair/Desktop/project/src/components/PayPal.js",["281"],[],"import { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\nimport { useContext, useState } from \"react\";\nimport AuthContext from \"../context/AuthContext\";\nimport { helpHttp } from \"../helpers/helpHttp\";\nconst PayPal = () => {\n  let { user } = useContext(AuthContext);\n\n  //const { product } = props;\n  const [error, setError] = useState(null);\n  const [paidFor, setPaidFor] = useState(false);\n\n  const handleApprove = (orderId) => {\n    setPaidFor(true);\n  };\n\n  if (paidFor) {\n    alert(\"thanks\");\n  }\n  if (error) {\n    alert(\"error\");\n  }\n\n  const test = {\n    describe: \"testing\",\n    price: 13.23,\n  };\n  return (\n    <div className=\"paypal-btn\">\n      <PayPalButtons\n        onClick={(data, actions) => {\n          const hasAlreadyCourse = false;\n          if (hasAlreadyCourse) {\n            setError(\"ya compraste\");\n            return actions.reject();\n          } else {\n            return actions.resolve();\n          }\n        }}\n        createOrder={(data, actions) => {\n          return actions.order.create({\n            purchase_units: [\n              {\n                description: test.describe,\n                amount: {\n                  value: test.price,\n                },\n              },\n            ],\n          });\n        }}\n        onApprove={async (data, action) => {\n          const order = await action.order.capture();\n          console.log(\"order\", order);\n          handleApprove(data.orderID);\n\n          helpHttp()\n            .put(`http://127.0.0.1:8000/api/makepremium/${user.user_id}`)\n            .then((res) => {\n              console.log(res);\n              if (!res.err) {\n                console.log(\"no error\");\n                //   setLoading(false);\n              } else {\n                console.log(res);\n                // setError(res);\n              }\n            });\n          //return action.order.capture();\n        }}\n        onCancel={() => {\n          // button.updateProps();\n        }}\n        onError={(err) => {\n          setError(err);\n          console.log(\"paypal error\");\n        }}\n        style={{\n          layout: \"horizontal\",\n          color: \"gold\",\n          shape: \"pill\",\n        }}\n      />\n    </div>\n  );\n};\n\nexport default PayPal;\n","/home/yair/Desktop/project/src/components/ShortsV2.js",["282","283","284"],[],"/home/yair/Desktop/project/src/components/Posts.js",["285"],[],"/home/yair/Desktop/project/src/components/PostPage.js",["286","287"],[],"/home/yair/Desktop/what i delete form project/src/index.js",[],[],[],"/home/yair/Desktop/what i delete form project/src/App.js",[],[],"/home/yair/Desktop/what i delete form project/src/reportWebVitals.js",[],[],"/home/yair/Desktop/what i delete form project/src/router/Routers.js",["288","289"],[],"import { Routes, Route, Form } from \"react-router-dom\";\nimport Cards from \"../components/Cards\";\n// import LoginAuth from \"../components/LoginAuth\";\nimport LoginPage from \"../components/LoginPage\";\nimport Menu from \"../components/Menu\";\nimport Session from \"../components/Session\";\nimport { AuthProvider } from \"../context/AuthContext\";\n\nimport PrivateRoute from \"./PrivateRoute\";\nimport ShortsV2 from \"../components/ShortsV2\";\nimport Posts from \"../components/Posts\";\nimport PostPage from \"../components/PostPage\";\n// import Stripe from \"../components/Stripe\";\nimport CardsMenu from \"../components/CardsMenu\";\nimport FormCard from \"../components/FormCard\";\nimport DeleteCards from \"../components/DeleteCards\";\nconst Routers = () => {\n  return (\n    <AuthProvider>\n      <Routes>\n        <Route path=\"/signup\" element={<LoginPage />}></Route>\n\n        <Route path=\"/login\" element={<Session />}></Route>\n        {/* <Route path=\"/login\" element={<LoginAuth />}></Route> */}\n        <Route element={<PrivateRoute />}>\n          <Route path=\"/cards\" element={<CardsMenu />}></Route>\n          <Route path=\"/cards/:section\" element={<Cards />}></Route>\n\n          <Route path=\"/shorts\" element={<ShortsV2 />}></Route>\n          <Route path=\"/posts\" element={<Posts />}></Route>\n          <Route path=\"/postpage/:id\" element={<PostPage />}></Route>\n          <Route path=\"/delete\" element={<DeleteCards />}></Route>\n          {/* <Route path=\"/form-card\" element={<FormCard />}></Route> */}\n\n          {/* <Route path=\"/stripe\" element={<Stripe />}></Route> */}\n          <Route path=\"/menu\" element={<Menu />}></Route>\n        </Route>\n      </Routes>\n    </AuthProvider>\n  );\n};\n\nexport default Routers;\n","/home/yair/Desktop/what i delete form project/src/router/PrivateRoute.js",[],[],"/home/yair/Desktop/what i delete form project/src/components/LoginPage.js",["290","291","292","293","294","295"],[],"import \"./styles/formStyles.css\";\nimport { useContext, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport AuthContext from \"../context/AuthContext\";\n\nimport { helpHttp } from \"../helpers/helpHttp\";\nlet url = \"https://englishapputc.herokuapp.com/api/users/\";\n\nconst initialForm = {\n  name: \"\",\n  email: \"\",\n  password: \"\",\n};\nconst LoginPage = () => {\n  let { loginUser, logoutUser } = useContext(AuthContext);\n  const navigate = useNavigate();\n\n  const [db, setDb] = useState([]);\n  const [form, setForm] = useState(initialForm);\n  const [registered, setRegistered] = useState(false);\n\n  const createData = (data) => {\n    let options = {\n      body: data,\n      headers: { \"content-type\": \"application/json\" },\n    };\n\n    // data.id = Date.now();\n\n    helpHttp()\n      .post(url, options)\n      .then((res) => {\n        console.log(res);\n        // if (!res.err) {\n        //   setDb([...db, res]);\n        //   //   setLoading(false);\n        // } else {\n        //   console.log(res);\n        //   // setError(res);\n        // }\n      });\n  };\n\n  const handleChange = (e) => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!form.name || !form.email || !form.password) {\n      alert(\"Please enter your email and password\");\n      return;\n    } else {\n      setRegistered(true);\n      // logoutUser();\n      navigate(\"/menu\");\n    }\n    setForm((form[\"password\"] = form[\"password\"]));\n    createData(form);\n    console.log(form[\"password\"]);\n    handleReset();\n  };\n\n  const handleReset = (e) => {\n    setForm(initialForm);\n  };\n\n  return (\n    <>\n      <div className=\"login-form\">\n        <div className=\"login-container\">\n          <form className=\"form\">\n            <input\n              onChange={handleChange}\n              className=\"parrafo\"\n              name=\"name\"\n              placeholder=\"Nombre de usuario\"\n              type=\"text\"\n              value={form.name}\n            />\n            <input\n              onChange={handleChange}\n              className=\"parrafo\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Email\"\n              value={form.email}\n            />\n\n            <input\n              onChange={handleChange}\n              className=\"parrafo\"\n              name=\"password\"\n              placeholder=\"Password\"\n              type=\"password\"\n              value={form.password}\n            />\n            <div className=\"btn-register\">\n              <button onClick={handleSubmit} type=\"submit\">\n                Registrar\n              </button>\n              <Link\n                style={{ color: \"#0781df\", textDecoration: \"none\" }}\n                className=\"link-to-signup\"\n                to={\"/login\"}\n              >\n                <div>Login</div>\n              </Link>\n            </div>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LoginPage;\n","/home/yair/Desktop/what i delete form project/src/components/Menu.js",["296"],[],"import \"./styles/menuStyles.css\";\nimport cards from \"../media/cardss.png\";\nimport video from \"../media/play.png\";\nimport tips from \"../media/blog.png\";\n\nimport { Link } from \"react-router-dom\";\nimport AboutUser from \"./AboutUser\";\nimport LeaderBoard from \"./LeaderBoard\";\n\nconst Menu = () => {\n  return (\n    <>\n      {console.log(\"welcome yair heroku\")}\n      <div className=\"bg-menu\">\n        <AboutUser />\n        <LeaderBoard></LeaderBoard>\n        {/* <div className=\"places-points\">jjaaj</div> */}\n\n        <div className=\"container-menu\">\n          <div>\n            <Link to=\"/cards\" className=\"link\">\n              <div className=\"square-background\">\n                <div className=\"container-data-menu-option\">\n                  <div className=\"container-img-menu\">\n                    <img className=\"img-learning-section\" src={cards} alt=\"\" />\n                  </div>\n                  <div className=\"container-name-section\">Cartas</div>\n                </div>\n              </div>\n            </Link>\n          </div>\n          {/* <div>\n            <Link to=\"/shorts\" className=\"link\">\n              <div className=\"square-background\">\n                <div className=\"container-data-menu-option\">\n                  <div className=\"container-img-menu\">\n                    <img className=\"img-learning-section\" src={video} alt=\"\" />\n                  </div>\n                  <div className=\"container-name-section\">Videos</div>\n                </div>\n              </div>\n            </Link>\n          </div> */}\n\n          <div>\n            <Link to=\"/posts\" className=\"link\">\n              <div className=\"square-background\">\n                <div className=\"container-data-menu-option\">\n                  <div className=\"container-img-menu\">\n                    <img className=\"img-learning-section\" src={tips} alt=\"\" />\n                  </div>\n                  <div className=\"container-name-section\">Blog</div>\n                </div>\n              </div>\n            </Link>\n          </div>\n        </div>\n        {/* <MenuBar></MenuBar> */}\n      </div>\n      {/* <Link to={\"/stripe\"}>\n        <div>ajaja</div>\n      </Link> */}\n    </>\n  );\n};\n\nexport default Menu;\n","/home/yair/Desktop/what i delete form project/src/components/Cards.js",["297","298","299","300"],[],"import React, { useContext, useEffect, useState } from \"react\";\nimport \"./styles/cardStyles.css\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/css\";\nimport \"swiper/css/effect-cards\";\nimport \"./styles/stylesCards.css\";\nimport { Pagination, EffectCards, Mousewheel, Keyboard } from \"swiper\";\nimport wordSound from \"../media/cards/audio.png\";\nimport iconAdd from \"../media/add.png\";\nimport Loader from \"./Loader\";\nimport AboutUser from \"./AboutUser\";\nimport CardTuto from \"./CardTuto\";\nimport MenuBar from \"./MenuBar\";\nimport { Link, NavLink, useParams } from \"react-router-dom\";\nimport AuthContext from \"../context/AuthContext\";\nimport FormCard from \"./FormCard\";\nimport PayPal from \"./PayPal\";\nimport { helpHttp } from \"../helpers/helpHttp\";\nimport Modal from \"react-modal\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport next from \"../media/next3.png\";\n\nimport { isMobile } from \"react-device-detect\";\nlet url = \"\";\nconst urlImageCard = \"https://res.cloudinary.com/tolumaster/image/upload/v1/\";\n\nconst Cards = () => {\n  let { user } = useContext(AuthContext);\n  let urlIncreaseScore = `https://englishapputc.herokuapp.com/api/increase/${user.user_id}`;\n\n  const paramsUrl = useParams();\n  const [isActive, setIsActive] = useState(true);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [isPremium, setIsPremium] = useState(false);\n  const [cardLength, setCardLength] = useState(0);\n  const [cards, setCards] = useState([]);\n  const [answerSelected, setAnswerSelected] = useState();\n  const [cardPicked, setCardPicked] = useState();\n  const [modalQuestion, setModalQuestion] = useState(false);\n  const [result, setResult] = useState();\n  const [answers, setAnswers] = useState([]);\n  const [isSent, setIsSent] = useState(false);\n  const [mode, setMode] = useState(true);\n  const customStyles = {\n    content: {\n      // color: \"black\",\n      width: isMobile ? \"84vw\" : \"320px\",\n      height: \"390px\",\n      backgroundColor: mode ? \"white\" : \"black\",\n      top: isMobile ? \"50%\" : \"40%\",\n      left: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n      border: \"solid 1px #270969\",\n      // backgroundColor: \"#00000000\",\n      outline: \"none\",\n      transition: \"1s ease-in-out\",\n      borderRadius: \"10px\",\n      overflow: \"hidden\",\n      fontFamily: \"Mulish, sans-serif\",\n\n      // padding: \"0\",\n    },\n    overlay: { zIndex: 1000, backgroundColor: \"rgba(0, 0, 0, 0.9)\" },\n  };\n  const params = {\n    method: \"GET\",\n    headers: {\n      accept: \"application/json\",\n    },\n  };\n\n  const fetchAPi = async () => {\n    // console.log(\"fetched\");\n    paramsUrl.section === \"mis-cartas\"\n      ? (url = `https://englishapputc.herokuapp.com/api/usercards/${user.user_id}`)\n      : (url = `https://englishapputc.herokuapp.com/api/cards/${paramsUrl.section}`);\n    const response = await fetch(url, params);\n    const responseJSON = await response.json();\n    setCards(responseJSON);\n    setCardLength(responseJSON.cards.length);\n    // console.log(responseJSON.cards.length);\n  };\n\n  const getUserData = () => {\n    helpHttp()\n      .get(`https://englishapputc.herokuapp.com/api/users/${user.user_id}`)\n      .then((res) => {\n        // console.log(res.user.premium);\n        setIsPremium(res.user.premium);\n      });\n  };\n\n  useEffect(() => {\n    fetchAPi();\n    getUserData();\n    // console.log(setCards);\n  }, []);\n\n  const handleDisplay = (e) => {\n    isActive ? setIsActive(false) : setIsActive(true);\n  };\n  const hideQuestion = () => {\n    setModalQuestion(false);\n    setResult();\n    setIsSent(false);\n  };\n\n  var speechSynthesis = require(\"speech-synthesis\");\n  const openModal = (e) => {\n    // e.preventDefault();\n    modalIsOpen ? setModalIsOpen(false) : setModalIsOpen(true);\n  };\n\n  function differentRandom() {\n    var randoms = [];\n    while (randoms.length < 3) {\n      var r = Math.floor(Math.random() * cardLength - 1) + 1;\n      if (randoms.indexOf(r) === -1) randoms.push(r);\n    }\n    return randoms;\n  }\n  const generateQuestion = () => {\n    const lista = [];\n\n    const cartas = cards.cards;\n    const randomsGenerated = differentRandom();\n    const cardChoosen = cartas[randomsGenerated[0]];\n    lista.push(cardChoosen);\n    setCardPicked(cardChoosen);\n\n    const answerOne = cartas[randomsGenerated[1]];\n    lista.push(answerOne);\n\n    const answerTwo = cartas[randomsGenerated[2]];\n    lista.push(answerTwo);\n\n    setAnswers(lista.sort(() => Math.random() - 0.5));\n  };\n\n  const handleChangeRadio = (e) => {\n    setAnswerSelected(e.target.value);\n  };\n  const handleAnswer = () => {\n    setIsSent(true);\n    if (answerSelected === cardPicked.cardMeaning) {\n      console.log(\"correct\");\n      setResult(true);\n      helpHttp().post(urlIncreaseScore);\n    } else {\n      console.log(\"incorrect\");\n      setResult(false);\n    }\n  };\n  const openModalQuestion = (e) => {\n    // e.preventDefault();\n    generateQuestion();\n    modalQuestion ? setModalQuestion(false) : setModalQuestion(true);\n  };\n  const nextQuestion = () => {\n    generateQuestion();\n    setResult();\n    setIsSent(false);\n  };\n\n  const toggleMode = () => {\n    mode ? setMode(false) : setMode(true);\n  };\n\n  return (\n    <>\n      {/* <AboutUser wasUp={result}></AboutUser> */}\n\n      <div className=\"all-cards\">\n        {paramsUrl.section === \"mis-cartas\" && (\n          <div className=\"del-cards\">\n            <NavLink to=\"/delete\">\n              <button className=\"btn-delete-cards\">Eliminar/Editar</button>\n            </NavLink>\n          </div>\n        )}\n\n        <Swiper\n          keyboard={true}\n          mousewheel={true}\n          className=\"mySwiper\"\n          effect={\"cards\"}\n          modules={[EffectCards, Mousewheel, Pagination, Keyboard]}\n        >\n          {/* <CardTuto></CardTuto> */}\n          {!cards ? (\n            <Loader></Loader>\n          ) : !cards.cards ? (\n            <div className=\"nada-por-aqui\">Nada por aqui...</div>\n          ) : (\n            cards.cards.map((card, key) => {\n              // console.log(cards);\n              return (\n                <SwiperSlide\n                  style={{\n                    borderColor: \"white\",\n                    backgroundImage:\n                      \"url(\" +\n                      (card.imageURL === \"\"\n                        ? urlImageCard + card.cardImage\n                        : card.imageURL) +\n                      \")\",\n                  }}\n                  className=\"swiper-slide-card\"\n                  key={card.id}\n                >\n                  <div className=\"container-card\">\n                    <div className=\"card\">\n                      {/* <img className=\"image-cards\" src={card.imageURL} alt=\"\" /> */}\n                      <div className=\"contenido-card\">\n                        <h3\n                          // title=\"testt\"\n                          onClick={handleDisplay}\n                          className=\"card-text\"\n                        >\n                          {isActive ? card.cardTitle : card.cardMeaning}\n                        </h3>\n                        <button\n                          className=\"btn-sound-card\"\n                          onClick={() => {\n                            speechSynthesis(card.cardTitle, \"en-US\");\n                            // console.log(card.cardTitle);\n                          }}\n                        >\n                          <img className=\"word-sound\" src={wordSound} alt=\"\" />\n                        </button>\n                        <div>\n                          {/* <img src={urlImageCard + card.cardImage} alt=\"\" /> */}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </SwiperSlide>\n              );\n            })\n          )}\n        </Swiper>\n        {paramsUrl.section === \"mis-cartas\" && (\n          <div className=\"container-icon-add\">\n            {cards.cards && cards.cards.length >= 10 && !isPremium ? (\n              <>\n                <div className=\"container-updatein-card\">\n                  <div className=\"alert-no-more-cards\">\n                    <strong>\n                      Para seguir agregando cartas, actualízate a premium\n                    </strong>\n                  </div>\n                  <div>\n                    <PayPal></PayPal>\n                  </div>\n                </div>\n              </>\n            ) : (\n              <img\n                onClick={openModal}\n                className=\"icon-add\"\n                src={iconAdd}\n                alt=\"\"\n              />\n            )}\n          </div>\n        )}\n        <Modal\n          // className=\"modal-card-question\"\n          ariaHideApp={false}\n          style={customStyles}\n          isOpen={modalQuestion}\n          contentLabel=\"Minimal Modal Example\"\n          // className=\"modal-quiz\"\n        >\n          <OutsideClickHandler\n            onOutsideClick={() => {\n              hideQuestion();\n            }}\n          >\n            <label className=\"switch\">\n              <input type=\"checkbox\" onClick={toggleMode} />\n              <span className=\"slider\"></span>\n            </label>\n            {cardPicked && (\n              <>\n                <div\n                  style={{ color: mode ? \"black\" : \"white\" }}\n                  className=\"container-question-card\"\n                >\n                  <div className=\"question-card\">\n                    Elige el significado de\n                    <strong> {cardPicked.cardTitle}</strong>\n                  </div>\n                  <div className=\"parent-answers\">\n                    {answers &&\n                      answers.map((answer, key) => {\n                        return (\n                          <div key={answer.id} className=\"box-answers\">\n                            <label className=\"rad-label\">\n                              <input\n                                type=\"radio\"\n                                className=\"rad-input\"\n                                name=\"rad\"\n                                onChange={handleChangeRadio}\n                                value={answer.cardMeaning}\n                              />\n                              <div className=\"rad-design\"></div>\n                              <div className=\"rad-text\">\n                                {answer.cardMeaning}\n                              </div>\n                            </label>\n                          </div>\n                        );\n                      })}\n                  </div>\n\n                  <div className=\"container-result-message\">\n                    <div\n                      className={\n                        isSent\n                          ? result\n                            ? \"message-question answer-right\"\n                            : \"message-question answer-wrong\"\n                          : \"hide\"\n                      }\n                    >\n                      {result ? (\n                        \"Correcto\"\n                      ) : (\n                        <span>\n                          Incorrecto\n                          <br />\n                          {/* <span style={{ fontSize: \"15px\" }}>\n                            Respuesta: <strong>{cardPicked.cardMeaning}</strong>\n                          </span> */}\n                        </span>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"parent-btn\">\n                    <button\n                      className={isSent ? \"hide\" : \"btn-send-answer\"}\n                      onClick={handleAnswer}\n                    >\n                      Enviar\n                    </button>\n                  </div>\n                  <div\n                    className=\"next-quest\"\n                    style={{\n                      bottom: isSent ? \"0\" : \"-65px\",\n                    }}\n                    onClick={nextQuestion}\n                  >\n                    <img\n                      onClick={nextQuestion}\n                      className=\"next-icon\"\n                      src={next}\n                      alt=\"\"\n                    />\n                  </div>\n                </div>\n                <div\n                  className={\n                    result\n                      ? \"upScore-indicator upScoreAnimation\"\n                      : \"upScore-indicator\"\n                  }\n                >\n                  <strong>+1XP</strong>\n                </div>\n              </>\n            )}\n          </OutsideClickHandler>\n        </Modal>\n        {isPremium && (\n          <div className=\"cont-btn-review\">\n            <button\n              className=\"css-button-shadow-border-sliding--sky \"\n              onClick={openModalQuestion}\n            >\n              Quiz\n            </button>\n          </div>\n        )}\n      </div>\n      <FormCard\n        fetchApi={fetchAPi}\n        modalIsOpen={modalIsOpen}\n        openModal={openModal}\n      ></FormCard>\n\n      <MenuBar wasUp={result}></MenuBar>\n    </>\n  );\n};\n\nexport default Cards;\n","/home/yair/Desktop/what i delete form project/src/components/Session.js",["301"],[],"import \"./styles/formStyles.css\";\nimport React, { useContext, useState } from \"react\";\nimport AuthContext from \"../context/AuthContext\";\nimport { Link } from \"react-router-dom\";\nconst initialForm = {\n  username: \"\",\n  //email: \"\",\n  password: \"\",\n};\nconst Session = () => {\n  let { loginUser } = useContext(AuthContext);\n\n  const [form, setForm] = useState(initialForm);\n  //const [user, setUser] = useState(null);\n\n  const handleChange = (e) => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleReset = (e) => {\n    setForm(initialForm);\n  };\n\n  return (\n    <>\n      <div className=\"login-form\">\n        <div className=\"login-container\">\n          <form className=\"form\" onSubmit={loginUser}>\n            <input\n              onChange={handleChange}\n              className=\"parrafo\"\n              name=\"username\"\n              type=\"\"\n              placeholder=\"usuario\"\n              value={form.username}\n            />\n\n            <input\n              onChange={handleChange}\n              className=\"parrafo\"\n              name=\"password\"\n              placeholder=\"Password\"\n              type=\"password\"\n              value={form.password}\n            />\n            <div className=\"btn-register\">\n              <button type=\"submit\">Ingresar</button>\n              <Link\n                style={{ color: \"#0781df\", textDecoration: \"none\" }}\n                className=\"link-to-signup\"\n                to={\"/signup\"}\n              >\n                <div>Crea una cuenta</div>\n              </Link>\n            </div>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Session;\n","/home/yair/Desktop/what i delete form project/src/components/ShortsV2.js",["302","303","304","305","306","307"],[],"import \"./styles/shortStyles.css\";\nimport { InView } from \"react-intersection-observer\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { Mousewheel, Pagination, Keyboard } from \"swiper\";\nimport \"swiper/css\";\nimport \"swiper/css/pagination\";\n// import left from \"../media/left-arrow.png\";\n// import right from \"../media/right-arrow.png\";\nimport { useEffect, useState } from \"react\";\nimport Loader from \"./Loader\";\nimport { useContext } from \"react\";\nimport AuthContext from \"../context/AuthContext\";\nimport { helpHttp } from \"../helpers/helpHttp\";\nimport MenuBar from \"./MenuBar\";\nimport ReactMarkdown from \"react-markdown\";\n\nlet url = \"https://englishapputc.herokuapp.com/api/shortsetV2/\";\nlet manageScore = \"https://englishapputc.herokuapp.com/api/shortsV2/\";\nconst ShortsV2 = () => {\n  let { user } = useContext(AuthContext);\n  let getUserUrl = `https://englishapputc.herokuapp.com/api/users/${user.user_id}`;\n  const [show, setShow] = useState(false);\n  const [shortId, setShortId] = useState();\n  const [correctAnswer, setCorrectAnswer] = useState(\"\");\n  const [answerSelected, setAnswerSelected] = useState();\n  const [disabledBtnSendAnswer, setDisabledBtnSendAnswer] = useState(true);\n  const [currentVideo, setCurrentVideo] = useState();\n  const [shorts, setShorts] = useState([]);\n  const [videoIsEnd, setVideoIsEnd] = useState(false);\n  const [btnTranscription, setBtnTranscription] = useState(false);\n  const [correct, setCorrect] = useState(false);\n  // const [stop, setStop] = useState(true);\n  const [answerAlreadySent, setAnswerAlreadySent] = useState(false);\n  const [alreadyAnswered, setAlreadyAnswered] = useState(false);\n  const [userScore, setUserScore] = useState();\n\n  const fetchAPi = async () => {\n    const response = await fetch(url);\n    const responseJSON = await response.json();\n    setShorts(responseJSON);\n    const getUserFetch = await fetch(getUserUrl);\n    const receiveUser = await getUserFetch.json();\n    setUserScore(receiveUser.user.score);\n    console.log(responseJSON);\n  };\n  useEffect(() => {\n    fetchAPi();\n    // document.addEventListener(\"keydown\", clicked, true);\n  }, []);\n  // const clicked = (e) => {\n  //   if (e.key === \" \") {\n  //     // console.log(currentVideo);\n  //     // currentVideo && currentVideo.pause();\n  //   }\n  // };\n\n  const handleText = () => {\n    show ? setShow(false) : setShow(true);\n  };\n  const handleChangeRadio = (e) => {\n    setAnswerSelected(parseInt(e.target.value));\n  };\n  useEffect(() => {\n    answerSelected === correctAnswer ? setCorrect(true) : setCorrect(false);\n  }, [answerSelected]);\n\n  const getValue = () => {\n    setBtnTranscription(false);\n\n    setAnswerAlreadySent(true);\n\n    // if (answerSelected == correctAnswer) {\n    //   setCorrect(true);\n    // } else {\n    //   setCorrect(false);\n    // }\n\n    let options = {\n      body: {\n        id: shortId,\n        user_id: user.user_id,\n        is_correct: correct,\n      },\n      headers: { \"content-type\": \"application/json\" },\n    };\n\n    console.log(options);\n    // console.log(correct);\n\n    helpHttp()\n      .post(manageScore, options)\n      .then((res) => {\n        console.log(res);\n        res.subio === true && setUserScore(userScore + 10);\n        res.subio === false && setUserScore(userScore - 5);\n      });\n  };\n\n  const advance = () => {\n    // const video = document.querySelector(\"video\");\n    currentVideo.currentTime = currentVideo.currentTime + 2;\n  };\n  const goBack = () => {\n    currentVideo.currentTime = currentVideo.currentTime - 2;\n  };\n\n  return (\n    <>\n      <Swiper\n        keyboard={true}\n        mousewheel={true}\n        style={{ height: \"100vh\" }}\n        className=\"swiper-shorts\"\n        slidesPerView={1}\n        spaceBetween={30}\n        modules={[Pagination, Mousewheel, Keyboard]}\n        // cssMode={true}\n        // pagination={true}\n        loop={true}\n        // direction={\"vertical\"}\n        // noSwiping={true}\n        // noSwipingClass={\"swiper-slide\"}\n        // allowTouchMove={false}\n        // pagination={{ clickable: true }}\n      >\n        {!shorts ? (\n          <Loader></Loader>\n        ) : (\n          shorts.map((short) => {\n            return (\n              <SwiperSlide className=\"swiper-slide-short\" key={short.id}>\n                <InView\n                  os=\"div\"\n                  onChange={(inView, entry) => {\n                    var video = entry.target.querySelector(\"video\");\n\n                    if (inView) {\n                      setShortId(short.id);\n                      setCurrentVideo(video);\n\n                      video.play();\n                      // .catch((e) => {\n                      //   console.log(e);\n                      // });\n\n                      short.answers.map((answer) => {\n                        // console.log(answer);\n                        answer.is_correct === true &&\n                          setCorrectAnswer(answer.id);\n                      });\n\n                      video.onended = function (e) {\n                        // console.log(\"termino\");\n                        setVideoIsEnd(true);\n                        console.log(e);\n                        setBtnTranscription(true);\n                        setShow(false);\n                        setDisabledBtnSendAnswer(false);\n                        //\n                        //\n                      };\n                    } else {\n                      video.pause();\n                      setAlreadyAnswered(false);\n\n                      setShow(false);\n                      //setCorrectAnswer(0);\n                      // setAnswerSelected();\n                      setDisabledBtnSendAnswer(true);\n\n                      setVideoIsEnd(false);\n                      setBtnTranscription(false);\n                      //  setCorrect();\n                      setAnswerAlreadySent(false);\n                    }\n                  }}\n                >\n                  <div className=\"container-short\">\n                    <video\n                      src={short.short_url}\n                      controls\n                      // loop\n                    ></video>\n                    <div>\n                      <button\n                        disabled={btnTranscription ? true : false}\n                        onClick={handleText}\n                        className=\"btn-transcription\"\n                      >\n                        {show\n                          ? \"Ocultar trasncripcion\"\n                          : \"Mostrar trasncripcion\"}\n                      </button>\n                      {/* <div className=\"container-arrows-video\">\n                        <button\n                          // style={{ marginRight: \"10px\" }}\n                          className=\"btn-control-video\"\n                          onClick={goBack}\n                        >\n                          <img style={{ width: \"25px\" }} src={left} alt=\"\" />\n                        </button>\n                        <button className=\"btn-control-video\" onClick={advance}>\n                          <img style={{ width: \"25px\" }} src={right} alt=\"\" />\n                        </button>\n                      </div> */}\n                    </div>\n                    <div className=\"container-question-answer\">\n                      <h3\n                        className={\n                          videoIsEnd\n                            ? \"container-question\"\n                            : \"container-question hidden\"\n                        }\n                      >\n                        {short.question}\n                      </h3>\n\n                      <br />\n                      <div>\n                        <div\n                          className={\n                            videoIsEnd\n                              ? \"container-answers\"\n                              : \"container-answers hidden\"\n                          }\n                        >\n                          {short.answers.map((answer, i) => {\n                            return (\n                              <label\n                                key={answer.id}\n                                className=\"block-radio\"\n                                htmlFor={answer.id}\n                              >\n                                <input\n                                  className=\"input-radio\"\n                                  onChange={handleChangeRadio}\n                                  type=\"radio\"\n                                  id={answer.id}\n                                  name=\"radio_answet\"\n                                  value={answer.id}\n                                  //  checked={answerSelected[answer.id] || false}\n                                />\n                                {answer.answer_text}\n                              </label>\n                            );\n                          })}\n                          <div\n                            className={\n                              videoIsEnd\n                                ? \"container-btn-send-answer\"\n                                : \"container-btn-send-answer hidden\"\n                            }\n                          >\n                            <button\n                              disabled={disabledBtnSendAnswer}\n                              className={\n                                answerAlreadySent\n                                  ? \"hide-btn-send\"\n                                  : \"send-answer\"\n                              }\n                              onClick={getValue}\n                            >\n                              Enviar\n                            </button>\n                            <div\n                              className={\n                                answerAlreadySent\n                                  ? correct\n                                    ? \"answer-sent is-correct\"\n                                    : \"answer-sent is-wrong\"\n                                  : \"hide-mgs-answer\"\n                              }\n                            >\n                              {answerAlreadySent && correct\n                                ? \"¡Correcto!\"\n                                : \"¡Incorrecto!\"}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"container-text-short\">\n                        <div\n                          className={\n                            show\n                              ? `transcription-short`\n                              : \"transcription-short hidden\"\n                          }\n                        >\n                          <ReactMarkdown\n                            // remarkPlugins={[remarkGfm]}\n                            children={short.translation}\n                          ></ReactMarkdown>\n                          {/* {short.translation} */}\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* </Modal> */}\n                  </div>\n                </InView>\n              </SwiperSlide>\n            );\n          })\n        )}\n        <div className=\"score-user-show-short\">Puntuación: {userScore}</div>\n      </Swiper>\n      <MenuBar></MenuBar>\n    </>\n  );\n};\n\nexport default ShortsV2;\n","/home/yair/Desktop/what i delete form project/src/components/Posts.js",["308","309"],[],"import \"./styles/postCards.css\";\nimport { useContext, useEffect, useState } from \"react\";\nimport Heart from \"react-heart\";\nimport Loader from \"./Loader\";\nimport { helpHttp } from \"../helpers/helpHttp\";\nimport AuthContext from \"../context/AuthContext\";\nimport { Link } from \"react-router-dom\";\nimport MenuBar from \"./MenuBar\";\n// import remarkGfm from \"remark-gfm\";\n\nconst txt = ` ¿ada vez que buscas aprender \\n\\n  inglés\\n rápido te encuentras con los mismos consejos de siempre?: Ve películas y series en inglés (con o sin subtítulos, dependiendo del nivel), escucha música y lee las letras, y lee libros de temas que te interesen, ¿estás buscando algo más que eso? \\r\\n\\r\\n\\r\\nSin duda, para iniciar con el pie derecho el aprendizaje de un idioma la clave está en el vocabulario. En muchos idiomas, la mayoría de actividades diarias, tales como viajar en transporte público o pedir comida en un restaurante, pueden ser realizadas con un aproximado de 300 palabras. Por esto, para aprender de manera rápida y fácil el idioma es básico conocer dichas palabras comunes.\\r\\n\\r\\nAsí como el anterior, en este artículo te encontrarás con una serie de consejos que van un paso más allá para que conozcas tips para aprender inglés con los que acelerarás tu curva de aprendizaje.\\r\\n\\r\\n¿Cómo elegir el mejor curso de inglés para ti? Conoce y descarga nuestro ebook para saber elegir el mejor curso de inglés  y dominar una segunda lengua.\\r\\n\\r\\nLa triada clásica para aprender inglés rápido\\r\\nEs importante que no descartes los tres tips para aprender inglés más conocidos. Se repiten constantemente porque son útiles, sin embargo, este artículo busca dar un paso más allá para ofrecer técnicas comprobadas que a veces están fuera del radar de estudiantes de inglés. Aún así, vale la pena partir de la base de dichos tres consejos:\\r\\n\\r\\nVe películas y series. Este consejo te permite pasar un rato de ocio mientras estudias inglés. Además te ayuda a conocer expresiones típicas.\\r\\n\\r\\nEscucha música. Las letras de canciones te dan acceso a la sonoridad de las palabras, acentos y te ayudan a aprender como pronunciar el inglés de manera correcta.\\r\\n\\r\\nLee libros. Ya sea ficción o no ficción, leer libros en inglés, desde historietas a los clásicos de la literatura inglesa, adquirirás vocabulario y gramática.`;\n\nlet url = `https://englishapputc.herokuapp.com/api/postset/`;\nlet like = \"https://englishapputc.herokuapp.com/api/posts/\";\n\nconst params = {\n  method: \"GET\",\n  headers: {\n    accept: \"application/json\",\n  },\n};\nconst Posts = () => {\n  let { user } = useContext(AuthContext);\n  let likedPosts = `https://englishapputc.herokuapp.com/api/posts/${user.user_id}`;\n\n  const [likes, setLikes] = useState([]);\n\n  const [posts, setPosts] = useState();\n\n  const fetchAPi = async () => {\n    const response = await fetch(url, params);\n    const responseJSON = await response.json();\n    setPosts(responseJSON);\n    // console.log(responseJSON);\n  };\n\n  const getLikedPosts = async () => {\n    const response = await fetch(likedPosts, params);\n    const responseJSON = await response.json();\n    // setPosts(responseJSON);\n    // console.log(\"liked\", responseJSON);\n    responseJSON.posts_liked_by_user.map((post) => likes.push(post.id));\n    setLikes([...likes]);\n  };\n\n  useEffect(() => {\n    fetchAPi();\n    getLikedPosts();\n  }, []);\n\n  const handleLike = (post) => {\n    let index = likes.findIndex((x) => x === post.id);\n    if (index >= 0) {\n      likes.splice(index, 1);\n      post.likes_count -= 1;\n      let options = {\n        body: { is_like: false, id: post.id, user_id: user.user_id },\n        headers: { \"content-type\": \"application/json\" },\n      };\n      helpHttp()\n        .post(like, options)\n        .then((res) => console.log(res.message));\n    } else {\n      likes.push(post.id);\n      post.likes_count += 1;\n      let options = {\n        body: { is_like: true, id: post.id, user_id: user.user_id },\n        headers: { \"content-type\": \"application/json\" },\n      };\n      helpHttp()\n        .post(like, options)\n        .then((res) => console.log(res.message));\n    }\n    setLikes([...likes]);\n    // console.log(likes);\n  };\n\n  return (\n    <>\n      <div className=\"container-posts\">\n        {!posts ? (\n          <Loader></Loader>\n        ) : (\n          posts.map((post) => {\n            return (\n              <div key={post.id} className=\"card-post\">\n                <Link to={`/postpage/${post.id}`} className=\"link-post\">\n                  <div\n                    style={{ backgroundImage: \"url(\" + post.image_src + \")\" }}\n                    className=\"box-img-post-card\"\n                  >\n                    {/* <img\n                      className=\"image-post\"\n                      src={post.image_src}\n                      alt=\"Avatar\"\n                      style={{ width: \"100%\", maxHeight: \"100px\" }}\n                    /> */}\n                  </div>\n                  <div\n                    style={{ backgroundColor: `${post.categoria.color}` }}\n                    className=\"section-post\"\n                  >\n                    <span>{post.categoria.name}</span>\n                  </div>\n                  <div className=\"container-card-text\">\n                    <h3 className=\"title-post-card\">{post.title}</h3>\n                  </div>\n                </Link>\n\n                <div className=\"like-post\">\n                  <div className=\"heart-box\">\n                    {likes.findIndex((x) => x === post.id) >= 0 ? (\n                      <Heart\n                        onClick={handleLike.bind(this, post)}\n                        style={{ width: \"20px\" }}\n                        isActive={true}\n                      />\n                    ) : (\n                      <Heart\n                        onClick={handleLike.bind(this, post)}\n                        style={{ width: \"20px\" }}\n                        isActive={false}\n                      />\n                    )}\n                    <div className=\"number-likes-post\">\n                      {post.likes_count} Likes\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          })\n        )}\n      </div>\n      <MenuBar></MenuBar>\n    </>\n  );\n};\n\nexport default Posts;\n","/home/yair/Desktop/what i delete form project/src/components/PostPage.js",["310","311","312","313","314"],[],"import \"./styles/singlePost.css\";\nimport send from \"../media/send.png\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Loader from \"./Loader\";\nimport { helpHttp } from \"../helpers/helpHttp\";\nimport AuthContext from \"../context/AuthContext\";\nimport { InView } from \"react-intersection-observer\";\n// import MenuBar from \"./MenuBar\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\n\nimport {\n  BrowserView,\n  MobileView,\n  isBrowser,\n  isMobile,\n} from \"react-device-detect\";\n\nlet url = \"https://englishapputc.herokuapp.com/api/comments/\";\nconst parametros = {\n  method: \"GET\",\n  headers: {\n    accept: \"application/json\",\n  },\n};\nconst meses = [\n  \"en\",\n  \"feb\",\n  \"mar\",\n  \"abr\",\n  \"may\",\n  \"jun\",\n  \"jul\",\n  \"agto\",\n  \"sept\",\n  \"oct\",\n  \"nov\",\n  \"dic\",\n];\n\nconst PostPage = () => {\n  let { user } = useContext(AuthContext);\n\n  const [post, setPost] = useState();\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState(\"\");\n  const params = useParams();\n  const [fetchedComments, setFetchedComments] = useState(false);\n\n  const getDate = () => {\n    const fecha = new Date();\n\n    let actual =\n      fecha.getDate() +\n      \" \" +\n      meses[fecha.getMonth()] +\n      \" \" +\n      fecha.getUTCFullYear();\n\n    return actual;\n  };\n\n  const fetchAPi = async () => {\n    let url = `https://englishapputc.herokuapp.com/api/post/${params.id}`;\n    const response = await fetch(url, parametros);\n    const responseJSON = await response.json();\n    setPost(responseJSON.post[0]);\n  };\n\n  const fetchComments = async () => {\n    let url = `https://englishapputc.herokuapp.com/api/comments/${params.id}`;\n    const response = await fetch(url, parametros);\n    const responseJSON = await response.json();\n    setComments(responseJSON.comments);\n    setFetchedComments(true); //\n  };\n\n  const getCommentContent = (e) => {\n    setComment(e.target.value);\n    // console.log(e.target.value);\n  };\n\n  const sendComment = () => {\n    let options = {\n      body: {\n        post_id: params.id,\n        user_name: user.username,\n        comentario: comment,\n        date: getDate(),\n      },\n      headers: { \"content-type\": \"application/json\" },\n    };\n    helpHttp()\n      .post(url, options)\n\n      .then((response) => console.log(response));\n\n    let testing = {\n      author: user.username,\n      text: comment,\n      created_date: getDate(),\n    };\n    // console.log(comments);\n    comments.unshift(testing);\n    setComments([...comments]);\n    setComment(\"\");\n    console.log(comments);\n  };\n\n  useEffect(() => {\n    fetchAPi();\n  }, []);\n\n  return (\n    <>\n      <div className=\"container-post-content\">\n        {!post ? (\n          <Loader></Loader>\n        ) : (\n          <div className=\"post-content\">\n            <h1 className=\"title-post\">{post.title}</h1>\n            <div className=\"box-image-post\">\n              <img className=\"image-single-post\" src={post.image_src} />\n            </div>\n\n            <div\n              className=\"box-text-post\"\n              style={{\n                fontSize: isMobile ? \"18px\" : \"20px\",\n                padding: isMobile && \"20px\",\n              }}\n            >\n              <ReactMarkdown\n                remarkPlugins={[remarkGfm]}\n                children={post.content}\n              ></ReactMarkdown>\n            </div>\n            <section>\n              <InView\n                as=\"div\"\n                onChange={(inView) => {\n                  inView && !fetchedComments && fetchComments();\n                }}\n              >\n                <div className=\"comment-section\">\n                  <input\n                    autoComplete=\"off\"\n                    className=\"comment-input\"\n                    placeholder={`Si puedes aportar algo más, coméntalo!...`}\n                    name=\"comment\"\n                    id=\"comment\"\n                    // cols=\"30\"\n                    // rows=\"10\"\n                    value={comment}\n                    onChange={getCommentContent}\n                  ></input>\n                  <img\n                    onClick={sendComment}\n                    className={\n                      comment.length > 0\n                        ? \"btn-send-comment\"\n                        : \"btn-send-comment hidden\"\n                    }\n                    src={send}\n                    alt=\"\"\n                  />\n                </div>\n\n                <div className=\"all-commets\">\n                  {comments.length > 0 ? (\n                    comments.map((res, id) => {\n                      return (\n                        <div className=\"lone-comment\" key={id}>\n                          <div className=\"author-comment\">\n                            {res.author}{\" \"}\n                            <span className=\"date-comment\">\n                              {res.created_date}\n                            </span>\n                          </div>\n                          <div className=\"post-comment\">{res.text}</div>\n                        </div>\n                      );\n                    })\n                  ) : (\n                    <div>Sin comentarios</div>\n                  )}\n                </div>\n                <br />\n                <br />\n              </InView>\n            </section>\n          </div>\n        )}\n      </div>\n      {/* <MenuBar></MenuBar> */}\n    </>\n  );\n};\n\nexport default PostPage;\n","/home/yair/Desktop/what i delete form project/src/context/AuthContext.js",["315"],[],"import jwt_decode from \"jwt-decode\";\nimport { createContext, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst AuthContext = createContext();\n\nexport default AuthContext;\n\nexport const AuthProvider = ({ children }) => {\n  let [authTokens, setAuthTokens] = useState(() =>\n    localStorage.getItem(\"authTokens\")\n      ? JSON.parse(localStorage.getItem(\"authTokens\"))\n      : null\n  );\n  let [user, setUser] = useState(() =>\n    localStorage.getItem(\"authTokens\")\n      ? jwt_decode(localStorage.getItem(\"authTokens\"))\n      : null\n  );\n  const [loading, setLoading] = useState(true);\n\n  const navigate = useNavigate();\n\n  let loginUser = async (e) => {\n    e.preventDefault();\n    let response = await fetch(\n      \"https://englishapputc.herokuapp.com/api/token/\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          username: e.target.username.value,\n\n          password: e.target.password.value,\n        }),\n      }\n    );\n    let data = await response.json();\n    if (response.status === 200) {\n      console.log(\"success\");\n      console.log(data);\n      setAuthTokens(data);\n\n      setUser(jwt_decode(data.access));\n      console.log(jwt_decode(data.access));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n      navigate(\"/menu\");\n    } else {\n      alert(\"something went wrong\");\n    }\n  };\n\n  let logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem(\"authTokens\");\n    navigate(\"/login\");\n  };\n\n  let updateToken = async () => {\n    console.log(\"update token called\");\n    let response = await fetch(\n      \"https://englishapputc.herokuapp.com/api/token/refresh/\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          refresh: authTokens?.refresh,\n        }),\n      }\n    );\n    let data = await response.json();\n\n    if (response.satus === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n    } else {\n      console.log(\"err\");\n      //logoutUser();\n    }\n    if (loading) {\n      setLoading(false);\n    }\n  };\n\n  let contextData = {\n    user: user,\n    authTokens: authTokens,\n    loginUser: loginUser,\n    logoutUser: logoutUser,\n  };\n\n  useEffect(() => {\n    if (loading) {\n      updateToken();\n    }\n    let fourMinutes = 1000 * 60 * 4;\n    let interval = setInterval(() => {\n      if (authTokens) {\n        updateToken();\n      }\n    }, fourMinutes);\n    return () => clearInterval(interval);\n  }, [authTokens, loading]);\n\n  return (\n    <AuthContext.Provider value={contextData}>\n      {loading ? null : children}\n    </AuthContext.Provider>\n  );\n};\n","/home/yair/Desktop/what i delete form project/src/components/AboutUser.js",["316","317"],[],"import \"./styles/modalStyles.css\";\nimport usuario from \"../media/user.png\";\nimport Modal from \"react-modal\";\nimport { useContext, useEffect, useState } from \"react\";\nimport AuthContext from \"../context/AuthContext\";\nimport { helpHttp } from \"../helpers/helpHttp\";\nimport PayPal from \"./PayPal\";\nimport closeUser from \"../media/logout.png\";\nimport vip from \"../media/vip.png\";\nimport crossOut from \"../media/crossout.png\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport \"./styles/shinytext.css\";\n\n// Modal.defaultStyles.overlay.backgroundColor = \"rgba(0, 0, 0, 0.83)\";\nconst customStyles = {\n  content: {\n    color: \"white\",\n    width: \"270px\",\n    height: \"450px\",\n    backgroundColor: \"black\",\n    border: \"solid 1px #040615\",\n    outline: \"none\",\n    borderRadius: \"15px\",\n    left: \"50%\",\n    transform: \"translate(-50%,0%)\",\n    top: \"10px\",\n    transition: \"2s ease-in-out\",\n  },\n  overlay: { zIndex: 999, backgroundColor: \"rgba(0, 0, 0, 0)\" },\n};\n\nconst AboutUser = ({ wasUp }) => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  let { user, logoutUser } = useContext(AuthContext);\n  const [scoreUser, setScoreUser] = useState();\n  const [isPremium, setIsPremium] = useState(false);\n  let url = `https://englishapputc.herokuapp.com/api/users/${user.user_id}`;\n  const hideAboutUser = () => {\n    setModalIsOpen(false);\n  };\n  // const ref = useDetectClickOutside({ onTriggered: hideAboutUser });\n\n  const getuser = () => {\n    console.log(\"loli\");\n    helpHttp()\n      .get(url)\n      .then((res) => {\n        setIsPremium(res.user.premium);\n        // console.log(isPremium);\n        setScoreUser(res.user.score);\n      });\n  };\n\n  useEffect(() => {\n    getuser();\n  }, []);\n  useEffect(() => {\n    wasUp && getuser();\n  }, [wasUp]);\n\n  const openModal = (e) => {\n    // e.preventDefault();\n    modalIsOpen ? setModalIsOpen(false) : setModalIsOpen(true);\n  };\n\n  return (\n    <>\n      <img\n        style={{\n          filter: modalIsOpen ? \"brightness(100%)\" : \"brightness(45%)\",\n        }}\n        className=\"icon-menu-bar\"\n        onClick={openModal}\n        src={usuario}\n        alt=\"\"\n      />\n      <Modal\n        ariaHideApp={false}\n        style={customStyles}\n        isOpen={modalIsOpen}\n        contentLabel=\"Minimal Modal Example\"\n      >\n        <OutsideClickHandler\n          onOutsideClick={() => {\n            hideAboutUser();\n          }}\n        >\n          <img\n            className=\"cross-out\"\n            onClick={openModal}\n            src={crossOut}\n            alt=\"\"\n          />\n\n          <div className=\"container-info-inside-modal\">\n            <div>\n              <h2 className=\"textito\">\n                ¡Bienvenido{\" \"}\n                <span className={isPremium ? \"shiny-text\" : \"\"}>\n                  {/* {console.log(isPremium)} */}\n                  {user.username}\n                </span>\n                !\n              </h2>\n              <h4 style={{ textAlign: \"center\", marginTop: \"10px\" }}>\n                {scoreUser} XP\n              </h4>\n            </div>\n\n            <div className=\"user-is-vip\">\n              <img className=\"vip-icon\" src={vip} alt=\"\" />\n              <span>\n                <strong>\n                  {isPremium\n                    ? \"Eres usuario premium 😃!\"\n                    : \"Todavia no eres usuario premium ☹️ (puedes serlo pagando aqui⬇)\"}\n                  {!isPremium && <PayPal></PayPal>}\n                </strong>\n              </span>\n            </div>\n            {/* <button class=\"button-pro\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 36 24\">\n                <path d=\"m18 0 8 12 10-8-4 20H4L0 4l10 8 8-12z\"></path>\n              </svg>\n              Unlock Pro\n            </button> */}\n\n            <div className=\"icon-text-modal-logout\" onClick={logoutUser}>\n              <img className=\"logout-icon\" src={closeUser} alt=\"\" />\n              <span className=\"logout-text\">Cerrar sesión</span>\n            </div>\n          </div>\n        </OutsideClickHandler>\n      </Modal>\n    </>\n  );\n};\n\nexport default AboutUser;\n","/home/yair/Desktop/what i delete form project/src/components/Loader.js",[],[],"/home/yair/Desktop/what i delete form project/src/helpers/helpHttp.js",[],[],"/home/yair/Desktop/what i delete form project/src/components/PayPal.js",["318"],[],"import { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\nimport { useContext, useState } from \"react\";\nimport AuthContext from \"../context/AuthContext\";\nimport { helpHttp } from \"../helpers/helpHttp\";\nconst PayPal = () => {\n  let { user } = useContext(AuthContext);\n\n  //const { product } = props;\n  const [error, setError] = useState(null);\n  const [paidFor, setPaidFor] = useState(false);\n\n  const handleApprove = (orderId) => {\n    setPaidFor(true);\n  };\n\n  if (paidFor) {\n    alert(\"thanks\");\n    window.location.reload();\n  }\n  if (error) {\n    alert(\"error\");\n    window.location.reload();\n  }\n\n  const test = {\n    describe: \"testing\",\n    price: 0.05,\n  };\n  return (\n    <div className=\"paypal-btn\">\n      <PayPalButtons\n        onClick={(data, actions) => {\n          const hasAlreadyCourse = false;\n          if (hasAlreadyCourse) {\n            setError(\"ya compraste\");\n            return actions.reject();\n          } else {\n            return actions.resolve();\n          }\n        }}\n        createOrder={(data, actions) => {\n          return actions.order.create({\n            purchase_units: [\n              {\n                description: test.describe,\n                amount: {\n                  value: test.price,\n                },\n              },\n            ],\n          });\n        }}\n        onApprove={async (data, action) => {\n          const order = await action.order.capture();\n          console.log(\"order\", order);\n          handleApprove(data.orderID);\n\n          helpHttp()\n            .put(\n              `https://englishapputc.herokuapp.com/api/makepremium/${user.user_id}`\n            )\n            .then((res) => {\n              console.log(res);\n              if (!res.err) {\n                console.log(\"no error\");\n                //   setLoading(false);\n              } else {\n                console.log(res);\n                // setError(res);\n              }\n            });\n          //return action.order.capture();\n        }}\n        onCancel={() => {\n          // button.updateProps();\n        }}\n        onError={(err) => {\n          setError(err);\n          console.log(\"paypal error\");\n        }}\n        style={{\n          layout: \"horizontal\",\n          color: \"gold\",\n          shape: \"rect\",\n          height: 30,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default PayPal;\n","/home/yair/Desktop/what i delete form project/src/components/Stripe.js",["319"],[],"import React, { useEffect } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nconst stripePromise = loadStripe(\"pk_test_wk6O7Cc5k3McBIG2Hut2irGs\");\n\nconst Stripe = () => {\n  const handleClick = async (event) => {\n    // When the customer clicks on the button, redirect them to Checkout.\n    const stripe = await stripePromise;\n    const { error } = await stripe.redirectToCheckout({\n      lineItems: [\n        {\n          price: \"price_1Lnyd7A9KCn8yVMOn9dLgqkc\", // Replace with the ID of your price\n          quantity: 1,\n        },\n      ],\n      mode: \"payment\",\n      successUrl: \"https://example.com/success\",\n      cancelUrl: \"https://example.com/cancel\",\n    });\n    error && console.log(\"no fue\");\n    // If `redirectToCheckout` fails due to a browser or network\n    // error, display the localized error message to your customer\n    // using `error.message`.\n  };\n  // useEffect(() => {\n  //   // Check to see if this is a redirect back from Checkout\n  //   const query = new URLSearchParams(window.location.search);\n\n  //   if (query.get(\"success\")) {\n  //     console.log(\"succes\");\n  //   }\n\n  //   if (query.get(\"canceled\")) {\n  //     console.log(\"canceled\");\n  //   }\n  // }, []);\n\n  return (\n    <section>\n      <div className=\"product\">\n        <div className=\"description\">\n          <h3>Starter plan</h3>\n          <h5>$20.00 / month</h5>\n        </div>\n      </div>\n      <form action=\"http://127.0.0.1:8000/stripe/\" method=\"POST\">\n        {/* Add a hidden field with the lookup_key of your Price */}\n        {/* <input type=\"hidden\" name=\"lookup_key\" value=\"{{PRICE_LOOKUP_KEY}}\" /> */}\n        <button id=\"checkout-and-portal-button\" type=\"submit\">\n          Checkout\n        </button>\n      </form>\n      <button role=\"link\" onClick={handleClick}>\n        Checkout\n      </button>\n    </section>\n  );\n};\n\nexport default Stripe;\n","/home/yair/Desktop/what i delete form project/src/components/CardTuto.js",[],[],"/home/yair/Desktop/what i delete form project/src/components/MenuBar.js",["320"],[],"import { NavLink, useNavigate } from \"react-router-dom\";\nimport \"./styles/menuBar.css\";\nimport cards from \"../media/cardss.png\";\nimport video from \"../media/play.png\";\nimport tips from \"../media/blog.png\";\nimport menus from \"../media/menu.png\";\nimport back from \"../media/undo.png\";\nimport AboutUser from \"./AboutUser\";\nconst MenuBar = ({ wasUp }) => {\n  const navigate = useNavigate();\n\n  return (\n    <div className=\"container-menu-bar\">\n      <div className=\"container-menus-bar\">\n        <div className=\"link-my-menu\">\n          <NavLink\n            className=\"link-element\"\n            to=\"/menu\"\n            style={{ filter: \"brightness(63%)\" }}\n          >\n            <img\n              className={\"icon-menu-bar\"}\n              icon-name=\"menu\"\n              src={menus}\n              alt=\"\"\n            />\n          </NavLink>\n        </div>\n        <div className=\"link-my-menu\">\n          <NavLink>\n            <AboutUser wasUp={wasUp}></AboutUser>\n          </NavLink>\n        </div>\n        <div className=\"link-my-menu\">\n          <NavLink\n            style={({ isActive }) =>\n              isActive\n                ? {\n                    filter: \"brightness(100%)\",\n                  }\n                : { filter: \"brightness(45%)\" }\n            }\n            className=\"link-element\"\n            to=\"/cards\"\n          >\n            <img\n              icon-name=\"cards\"\n              className={\"icon-menu-bar\"}\n              src={cards}\n              alt=\"\"\n            />\n          </NavLink>\n        </div>\n\n        <div className=\"link-my-menu\">\n          <NavLink\n            style={({ isActive }) =>\n              isActive\n                ? {\n                    filter: \"brightness(100%)\",\n                  }\n                : { filter: \"brightness(45%)\" }\n            }\n            className=\"link-element\"\n            to=\"/posts\"\n          >\n            <img\n              icon-name=\"blog\"\n              className={\"icon-menu-bar\"}\n              src={tips}\n              alt=\"\"\n            />\n          </NavLink>\n        </div>\n        <div className=\"link-my-menu\">\n          <div onClick={() => navigate(-1)}>\n            <img\n              style={{ filter: \"brightness(70%)\" }}\n              className={\"icon-menu-bar\"}\n              icon-name=\"menu\"\n              src={back}\n              alt=\"\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MenuBar;\n","/home/yair/Desktop/what i delete form project/src/components/CardsMenu.js",[],[],"/home/yair/Desktop/what i delete form project/src/components/FormCard.js",["321","322"],[],"import { useState } from \"react\";\nimport \"./styles/formCard.css\";\nimport { helpHttp } from \"../helpers/helpHttp\";\nimport { useContext } from \"react\";\nimport AuthContext from \"../context/AuthContext\";\nimport ReactFileReader from \"react-file-reader\";\nimport Modal from \"react-modal\";\nimport crossOut from \"../media/crossout.png\";\nimport LoaderThin from \"./LoaderThin\";\n\nconst url = \"https://englishapputc.herokuapp.com/api/cards/\";\n\nconst customStyles = {\n  content: {\n    // color: \"white\",\n    width: \"350px\",\n    height: \"350px\",\n    backgroundColor: \"#00000000\",\n\n    outline: \"none\",\n  },\n  overlay: { zIndex: 999, backgroundColor: \"#18191ab1\" },\n};\nconst FormCard = ({ modalIsOpen, openModal, fetchApi }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState(false);\n  const [optionSelected, setOptionSelected] = useState(\"\");\n  const [fileSelected, setFileSelected] = useState(false);\n  const [showBtn, setShowBtn] = useState(true);\n  // const [modalIsOpen, setModalIsOpen] = useState(true);\n  let { user } = useContext(AuthContext);\n\n  const initialForm = {\n    user: user.user_id,\n    title: \"\",\n    meaning: \"\",\n    file: \"\",\n    img_url: \"\",\n  };\n\n  // const openModal = (e) => {\n  //   // e.preventDefault();\n  //   modalIsOpen ? setModalIsOpen(false) : setModalIsOpen(true);\n  // };\n\n  const [form, setForm] = useState(initialForm);\n\n  const createData = (data) => {\n    console.log(form);\n    // if (!form.title === \"\" || !form.meaning === \"\" || !form.file === \"\") {\n    if (\n      form.title === \"\" ||\n      form.meaning === \"\" ||\n      (form.file === \"\" && form.img_url === \"\")\n    ) {\n      alert(\"llena todos los campos por favor\");\n    } else if (form.title.length > 23 || form.meaning.length > 23) {\n      alert(\"demasiado larga UwU\");\n    } else {\n      let options = {\n        body: data,\n        headers: { \"content-type\": \"multipart/form-data\" },\n      };\n      console.log(options);\n      setIsLoading(true);\n      setShowBtn(false);\n      helpHttp()\n        .post(url, options)\n        .then((res) => {\n          res.err ? setMessage(true) : setMessage(false);\n          fetchApi();\n        });\n\n      !message && openModal();\n      setForm(initialForm);\n      setShowBtn(true);\n      setOptionSelected(\"\");\n      setIsLoading(false);\n    }\n    // } else {\n    //   alert(\"llena\");\n    // }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(e.taget);\n    console.log(form);\n\n    createData(form);\n  };\n  const handleChange = (e) => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleFiles = (file) => {\n    file && setFileSelected(true);\n    setForm({\n      ...form,\n      [\"file\"]: file.base64,\n    });\n  };\n\n  const handleChangeRadio = (e) => {\n    setOptionSelected(e.target.value);\n    console.log(optionSelected);\n  };\n  return (\n    <Modal\n      className=\"modal\"\n      ariaHideApp={false}\n      style={customStyles}\n      isOpen={modalIsOpen}\n      // contentLabel=\"Minimal Modal Example\"\n    >\n      <img\n        style={{ margin: \"10px\" }}\n        className=\"cross-out\"\n        onClick={openModal}\n        src={crossOut}\n        alt=\"\"\n      />\n      <div className=\"container-form-card\">\n        <div className=\"form-card\">\n          <div>\n            <h3>¡Sube tus cartas!</h3>\n          </div>\n          <div>\n            <input\n              name=\"title\"\n              value={form.title}\n              onChange={handleChange}\n              className=\"input-form-card\"\n              type=\"text\"\n              placeholder=\"Palabra en ingles\"\n            />\n          </div>\n          <div>\n            <input\n              name=\"meaning\"\n              value={form.meaning}\n              onChange={handleChange}\n              className=\"input-form-card\"\n              type=\"text\"\n              placeholder=\"signicado\"\n            />\n          </div>\n          <h2></h2>\n          <br />\n          <div>\n            Enviar imagen en:\n            <br />\n            <label htmlFor=\"file\">Archivo </label>\n            <input\n              onChange={handleChangeRadio}\n              id=\"file\"\n              name=\"btn-radio\"\n              type=\"radio\"\n              value=\"file\"\n            />\n            <br />\n            <label htmlFor=\"url\">Url </label>\n            <input\n              onChange={handleChangeRadio}\n              id=\"url\"\n              name=\"btn-radio\"\n              type=\"radio\"\n              value=\"url\"\n            />\n          </div>\n          <div></div>\n          {optionSelected === \"file\" ? (\n            <div className=\"main_div\">\n              <ReactFileReader handleFiles={handleFiles} base64={true}>\n                <button>\n                  {fileSelected\n                    ? \"Archivo seleccionado 😀\"\n                    : \"Selecciona imagen\"}\n                </button>\n              </ReactFileReader>\n            </div>\n          ) : (\n            optionSelected === \"url\" && (\n              <div>\n                <input\n                  name=\"img_url\"\n                  value={form.img_url}\n                  onChange={handleChange}\n                  className=\"input-form-card\"\n                  type=\"text\"\n                  placeholder=\"Dirección de la imagen\"\n                />\n              </div>\n            )\n          )}\n          <div>\n            <button\n              onClick={handleSubmit}\n              type=\"submit\"\n              className={showBtn ? \"btn-send-card\" : \"hide-btn-send-card\"}\n            >\n              Enviar\n            </button>\n          </div>\n          {isLoading && <LoaderThin></LoaderThin>}\n        </div>\n      </div>\n\n      {message && (\n        <div style={{ textAlign: \"center\", color: \"red\" }}>\n          ups Algo salio mal, intentalo de nuevo\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default FormCard;\n","/home/yair/Desktop/what i delete form project/src/components/DeleteCards.js",["323"],[],"import { useContext } from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport AuthContext from \"../context/AuthContext\";\nimport Loader from \"./Loader\";\nimport { helpHttp } from \"../helpers/helpHttp\";\n\nimport Modal from \"react-modal\";\nimport MenuBar from \"./MenuBar\";\nconst customStyles = {\n  content: {\n    // color: \"white\",\n\n    width: \"350px\",\n    height: \"350px\",\n    backgroundColor: \"#00000000\",\n\n    outline: \"none\",\n  },\n  overlay: { zIndex: 999, backgroundColor: \"#171515ce\" },\n};\nconst urlImageCard = \"https://res.cloudinary.com/tolumaster/image/upload/v1/\";\n\nconst DeleteCards = () => {\n  let { user } = useContext(AuthContext);\n\n  const [cards, setCards] = useState();\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [cardId, setCardId] = useState();\n  const [actualCardTitle, setActualCardTitle] = useState(\"\");\n  //   const [actualCardImg, setActualCardImg] = useState(\"\");\n  const fetchAPi = async () => {\n    let url = `https://englishapputc.herokuapp.com/api/usercards/${user.user_id}`;\n\n    const response = await fetch(url);\n    const responseJSON = await response.json();\n    setCards(responseJSON);\n    console.log(responseJSON);\n  };\n  const deleteCardF = () => {\n    let urlDel = `https://englishapputc.herokuapp.com/api/delcard/${cardId}`;\n\n    helpHttp()\n      .del(urlDel)\n      .then((res) => {\n        console.log(res);\n        setModalIsOpen(false);\n        fetchAPi();\n      });\n  };\n  const openModal = () => {\n    modalIsOpen ? setModalIsOpen(false) : setModalIsOpen(true);\n  };\n  const getCurrentData = (title, id) => {\n    setActualCardTitle(title);\n    setCardId(id);\n    // setActualCardImg(img);\n  };\n\n  useEffect(() => {\n    fetchAPi();\n  }, []);\n\n  return (\n    <>\n      <div className=\"container-cards-delete\">\n        {!cards ? (\n          <Loader></Loader>\n        ) : !cards.cards ? (\n          <div>Nada para borrar</div>\n        ) : (\n          cards.cards.map((card) => {\n            return (\n              <div key={card.id} className=\"container-card-delete\">\n                <h3 style={{ textAlign: \"center\", margin: \"5px\" }}>\n                  {card.cardTitle}\n                </h3>\n                <img\n                  className=\"delete-img-card\"\n                  src={\n                    card.cardImage === \"\"\n                      ? card.imageURL\n                      : urlImageCard + card.cardImage\n                  }\n                  alt=\"\"\n                />\n                <div style={{ textAlign: \"center\" }}>\n                  <button\n                    onClick={() => {\n                      openModal();\n                      getCurrentData(card.cardTitle, card.id);\n                    }}\n                    className=\"btn-delete-card\"\n                  >\n                    <h4>Eliminar</h4>\n                  </button>\n                </div>\n              </div>\n            );\n          })\n        )}\n      </div>\n      <Modal\n        className=\"modal-delete-card\"\n        ariaHideApp={false}\n        style={customStyles}\n        isOpen={modalIsOpen}\n      >\n        <div style={{ textAlign: \"center\" }}>\n          <div className=\"container-alert-text\">\n            <h2>\n              ¡Se eliminara la carta:\n              <span\n                style={{\n                  backgroundColor: \"white\",\n                  color: \"#087FFF\",\n                  borderRadius: \"5px\",\n                }}\n              >\n                {actualCardTitle}\n              </span>\n              !\n            </h2>\n          </div>\n          <button onClick={deleteCardF} className=\"btn-delete-card\">\n            <h3>ok</h3>\n          </button>\n          <button className=\"btn-cancel-delete\" onClick={openModal}>\n            <h3>Cancelar</h3>\n          </button>\n        </div>\n      </Modal>\n      <MenuBar></MenuBar>\n    </>\n  );\n};\n\nexport default DeleteCards;\n","/home/yair/Desktop/what i delete form project/src/components/LoaderThin.js",[],[],"/home/yair/Desktop/what i delete form project/src/components/LeaderBoard.js",["324"],[],"import \"./styles/leaderboard.css\";\nimport first from \"../media/first.png\";\nimport second from \"../media/second.png\";\nimport third from \"../media/third.png\";\nimport usuario from \"../media/user.png\";\nimport trofeo from \"../media/ganador.png\";\nimport { useState } from \"react\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport { helpHttp } from \"../helpers/helpHttp\";\nimport { useEffect } from \"react\";\nimport Loader from \"./Loader\";\nimport { useContext } from \"react\";\nimport AuthContext from \"../context/AuthContext\";\nimport \"./styles/shinytext.css\";\nconst LeaderBoard = () => {\n  let { user } = useContext(AuthContext);\n  const [userData, setUserData] = useState();\n  const [tops, setTops] = useState([]);\n  const getTop = () => {\n    helpHttp()\n      .get(\"https://englishapputc.herokuapp.com/api/topusers/\")\n      .then((res) => {\n        setTops(res.topuser);\n      });\n    helpHttp()\n      .get(`https://englishapputc.herokuapp.com/api/users/${user.user_id}`)\n      .then((res) => {\n        setUserData(res.user);\n        console.log(res);\n        console.log(res.user.score);\n      });\n  };\n\n  const [isBoard, setIsBoard] = useState(false);\n  const handleLeaderboard = () => {\n    isBoard ? setIsBoard(false) : setIsBoard(true);\n  };\n  const hideLeaderboard = () => {\n    setIsBoard(false);\n  };\n  useEffect(() => {\n    getTop();\n  }, []);\n\n  return (\n    <>\n      <OutsideClickHandler\n        onOutsideClick={() => {\n          hideLeaderboard();\n        }}\n      >\n        <div onClick={handleLeaderboard} className=\"leader-board\">\n          <img className=\"trofeo\" src={trofeo} alt=\"\" />\n          <div\n            className={\n              !isBoard ? \"text-board-img\" : \"text-board-img hide-text-board-img\"\n            }\n          >\n            Tabla de liderazgo\n          </div>\n        </div>\n        <div\n          className={\n            isBoard\n              ? \"container-leader-board\"\n              : \"container-leader-board hide-leaderboard \"\n          }\n        >\n          <fieldset className=\"fieldset-leader\">\n            <legend>\n              <h2 className=\"leader-title\">Tabla de liderazgo</h2>\n            </legend>\n            <div className=\"container-content-leader\">\n              <div className=\"container-legend-leader\">\n                <div>Posición</div>\n                <div>Usuario</div>\n                <div>XP</div>\n              </div>\n              {!tops ? (\n                <Loader></Loader>\n              ) : (\n                tops.map((top, key) => {\n                  return (\n                    <div key={key} className=\"container-place-icons\">\n                      <div className=\"container-place-user\">\n                        <div>\n                          <img\n                            className=\"place-icon\"\n                            src={\n                              (key === 0 && first) ||\n                              (key === 1 && second) ||\n                              (key === 2 && third)\n                            }\n                            alt=\"\"\n                          />\n                        </div>\n                        <div className=\"icon-username\">\n                          <div>\n                            <img\n                              className=\"user-icon-leader\"\n                              src={usuario}\n                              alt=\"\"\n                            />\n                            <div\n                              className={\n                                top.premium === true ? \"shiny-text\" : \"\"\n                              }\n                            >\n                              {top.username}\n                            </div>\n                          </div>\n                        </div>\n                        <div>{top.score}</div>\n                      </div>\n                    </div>\n                  );\n                })\n              )}\n              <div className=\"your-score-board\">\n                Tu XP: {userData && userData.score}\n              </div>\n            </div>\n          </fieldset>\n        </div>\n      </OutsideClickHandler>\n    </>\n  );\n};\n\nexport default LeaderBoard;\n","/home/yair/Desktop/what i delete form project/src/components/Test.js",[],[],{"ruleId":"325","severity":1,"message":"326","line":33,"column":6,"nodeType":"327","endLine":33,"endColumn":8,"suggestions":"328"},{"ruleId":"325","severity":1,"message":"329","line":103,"column":6,"nodeType":"327","endLine":103,"endColumn":27,"suggestions":"330"},{"ruleId":"331","severity":1,"message":"332","line":15,"column":9,"nodeType":"333","messageId":"334","endLine":15,"endColumn":18},{"ruleId":"331","severity":1,"message":"335","line":15,"column":20,"nodeType":"333","messageId":"334","endLine":15,"endColumn":30},{"ruleId":"331","severity":1,"message":"336","line":20,"column":10,"nodeType":"333","messageId":"334","endLine":20,"endColumn":20},{"ruleId":"337","severity":1,"message":"338","line":61,"column":33,"nodeType":"339","messageId":"340","endLine":61,"endColumn":49},{"ruleId":"331","severity":1,"message":"335","line":11,"column":20,"nodeType":"333","messageId":"334","endLine":11,"endColumn":30},{"ruleId":"331","severity":1,"message":"341","line":23,"column":9,"nodeType":"333","messageId":"334","endLine":23,"endColumn":20},{"ruleId":"331","severity":1,"message":"342","line":1,"column":21,"nodeType":"333","messageId":"334","endLine":1,"endColumn":27},{"ruleId":"331","severity":1,"message":"343","line":7,"column":31,"nodeType":"333","messageId":"334","endLine":7,"endColumn":40},{"ruleId":"331","severity":1,"message":"344","line":8,"column":8,"nodeType":"333","messageId":"334","endLine":8,"endColumn":12},{"ruleId":"331","severity":1,"message":"345","line":76,"column":27,"nodeType":"333","messageId":"334","endLine":76,"endColumn":34},{"ruleId":"331","severity":1,"message":"346","line":2,"column":3,"nodeType":"333","messageId":"334","endLine":2,"endColumn":11},{"ruleId":"331","severity":1,"message":"347","line":3,"column":3,"nodeType":"333","messageId":"334","endLine":3,"endColumn":14},{"ruleId":"331","severity":1,"message":"348","line":4,"column":3,"nodeType":"333","messageId":"334","endLine":4,"endColumn":12},{"ruleId":"331","severity":1,"message":"349","line":5,"column":3,"nodeType":"333","messageId":"334","endLine":5,"endColumn":14},{"ruleId":"331","severity":1,"message":"350","line":9,"column":8,"nodeType":"333","messageId":"334","endLine":9,"endColumn":13},{"ruleId":"331","severity":1,"message":"351","line":10,"column":10,"nodeType":"333","messageId":"334","endLine":10,"endColumn":18},{"ruleId":"331","severity":1,"message":"352","line":4,"column":22,"nodeType":"333","messageId":"334","endLine":4,"endColumn":31},{"ruleId":"353","severity":1,"message":"354","line":32,"column":28,"nodeType":"355","messageId":"356","endLine":32,"endColumn":30},{"ruleId":"331","severity":1,"message":"357","line":50,"column":9,"nodeType":"333","messageId":"334","endLine":50,"endColumn":19},{"ruleId":"331","severity":1,"message":"358","line":2,"column":10,"nodeType":"333","messageId":"334","endLine":2,"endColumn":16},{"ruleId":"331","severity":1,"message":"359","line":2,"column":29,"nodeType":"333","messageId":"334","endLine":2,"endColumn":40},{"ruleId":"331","severity":1,"message":"360","line":3,"column":10,"nodeType":"333","messageId":"334","endLine":3,"endColumn":20},{"ruleId":"331","severity":1,"message":"361","line":3,"column":22,"nodeType":"333","messageId":"334","endLine":3,"endColumn":32},{"ruleId":"331","severity":1,"message":"362","line":6,"column":9,"nodeType":"333","messageId":"334","endLine":6,"endColumn":15},{"ruleId":"331","severity":1,"message":"363","line":1,"column":10,"nodeType":"333","messageId":"334","endLine":1,"endColumn":30},{"ruleId":"353","severity":1,"message":"354","line":60,"column":20,"nodeType":"355","messageId":"356","endLine":60,"endColumn":22},{"ruleId":"331","severity":1,"message":"364","line":74,"column":9,"nodeType":"333","messageId":"334","endLine":74,"endColumn":14},{"ruleId":"365","severity":1,"message":"366","line":117,"column":50,"nodeType":"367","messageId":"368","endLine":117,"endColumn":52},{"ruleId":"325","severity":1,"message":"369","line":43,"column":6,"nodeType":"327","endLine":43,"endColumn":8,"suggestions":"370"},{"ruleId":"325","severity":1,"message":"326","line":101,"column":6,"nodeType":"327","endLine":101,"endColumn":8,"suggestions":"371"},{"ruleId":"372","severity":1,"message":"373","line":112,"column":15,"nodeType":"374","endLine":112,"endColumn":73},{"ruleId":"331","severity":1,"message":"375","line":1,"column":25,"nodeType":"333","messageId":"334","endLine":1,"endColumn":29},{"ruleId":"331","severity":1,"message":"376","line":15,"column":8,"nodeType":"333","messageId":"334","endLine":15,"endColumn":16},{"ruleId":"331","severity":1,"message":"332","line":15,"column":9,"nodeType":"333","messageId":"334","endLine":15,"endColumn":18},{"ruleId":"331","severity":1,"message":"335","line":15,"column":20,"nodeType":"333","messageId":"334","endLine":15,"endColumn":30},{"ruleId":"331","severity":1,"message":"377","line":18,"column":10,"nodeType":"333","messageId":"334","endLine":18,"endColumn":12},{"ruleId":"331","severity":1,"message":"378","line":18,"column":14,"nodeType":"333","messageId":"334","endLine":18,"endColumn":19},{"ruleId":"331","severity":1,"message":"336","line":20,"column":10,"nodeType":"333","messageId":"334","endLine":20,"endColumn":20},{"ruleId":"337","severity":1,"message":"338","line":60,"column":33,"nodeType":"339","messageId":"340","endLine":60,"endColumn":49},{"ruleId":"331","severity":1,"message":"379","line":3,"column":8,"nodeType":"333","messageId":"334","endLine":3,"endColumn":13},{"ruleId":"331","severity":1,"message":"380","line":11,"column":8,"nodeType":"333","messageId":"334","endLine":11,"endColumn":17},{"ruleId":"331","severity":1,"message":"381","line":12,"column":8,"nodeType":"333","messageId":"334","endLine":12,"endColumn":16},{"ruleId":"331","severity":1,"message":"382","line":14,"column":10,"nodeType":"333","messageId":"334","endLine":14,"endColumn":14},{"ruleId":"325","severity":1,"message":"383","line":97,"column":6,"nodeType":"327","endLine":97,"endColumn":8,"suggestions":"384"},{"ruleId":"331","severity":1,"message":"341","line":23,"column":9,"nodeType":"333","messageId":"334","endLine":23,"endColumn":20},{"ruleId":"331","severity":1,"message":"385","line":34,"column":10,"nodeType":"333","messageId":"334","endLine":34,"endColumn":25},{"ruleId":"325","severity":1,"message":"326","line":49,"column":6,"nodeType":"327","endLine":49,"endColumn":8,"suggestions":"386"},{"ruleId":"325","severity":1,"message":"387","line":65,"column":6,"nodeType":"327","endLine":65,"endColumn":22,"suggestions":"388"},{"ruleId":"331","severity":1,"message":"389","line":99,"column":9,"nodeType":"333","messageId":"334","endLine":99,"endColumn":16},{"ruleId":"331","severity":1,"message":"390","line":103,"column":9,"nodeType":"333","messageId":"334","endLine":103,"endColumn":15},{"ruleId":"365","severity":1,"message":"366","line":146,"column":50,"nodeType":"367","messageId":"368","endLine":146,"endColumn":52},{"ruleId":"331","severity":1,"message":"391","line":11,"column":7,"nodeType":"333","messageId":"334","endLine":11,"endColumn":10},{"ruleId":"325","severity":1,"message":"369","line":49,"column":6,"nodeType":"327","endLine":49,"endColumn":8,"suggestions":"392"},{"ruleId":"331","severity":1,"message":"393","line":14,"column":3,"nodeType":"333","messageId":"334","endLine":14,"endColumn":14},{"ruleId":"331","severity":1,"message":"394","line":15,"column":3,"nodeType":"333","messageId":"334","endLine":15,"endColumn":13},{"ruleId":"331","severity":1,"message":"395","line":16,"column":3,"nodeType":"333","messageId":"334","endLine":16,"endColumn":12},{"ruleId":"325","severity":1,"message":"326","line":113,"column":6,"nodeType":"327","endLine":113,"endColumn":8,"suggestions":"396"},{"ruleId":"372","severity":1,"message":"373","line":124,"column":15,"nodeType":"374","endLine":124,"endColumn":73},{"ruleId":"325","severity":1,"message":"329","line":109,"column":6,"nodeType":"327","endLine":109,"endColumn":27,"suggestions":"397"},{"ruleId":"325","severity":1,"message":"398","line":56,"column":6,"nodeType":"327","endLine":56,"endColumn":8,"suggestions":"399"},{"ruleId":"325","severity":1,"message":"398","line":59,"column":6,"nodeType":"327","endLine":59,"endColumn":13,"suggestions":"400"},{"ruleId":"331","severity":1,"message":"363","line":1,"column":10,"nodeType":"333","messageId":"334","endLine":1,"endColumn":30},{"ruleId":"331","severity":1,"message":"352","line":1,"column":17,"nodeType":"333","messageId":"334","endLine":1,"endColumn":26},{"ruleId":"331","severity":1,"message":"379","line":4,"column":8,"nodeType":"333","messageId":"334","endLine":4,"endColumn":13},{"ruleId":"401","severity":1,"message":"402","line":103,"column":7,"nodeType":"403","messageId":"404","endLine":103,"endColumn":28,"fix":"405"},{"ruleId":"406","severity":1,"message":"407","line":151,"column":11,"nodeType":"374","endLine":151,"endColumn":15},{"ruleId":"325","severity":1,"message":"326","line":62,"column":6,"nodeType":"327","endLine":62,"endColumn":8,"suggestions":"408"},{"ruleId":"325","severity":1,"message":"409","line":43,"column":6,"nodeType":"327","endLine":43,"endColumn":8,"suggestions":"410"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchAPi'. Either include it or remove the dependency array.","ArrayExpression",["411"],"React Hook useEffect has a missing dependency: 'updateToken'. Either include it or remove the dependency array.",["412"],"no-unused-vars","'loginUser' is assigned a value but never used.","Identifier","unusedVar","'logoutUser' is assigned a value but never used.","'registered' is assigned a value but never used.","no-self-assign","'form[\"password\"]' is assigned to itself.","MemberExpression","selfAssignment","'handleReset' is assigned a value but never used.","'useRef' is defined but never used.","'useSwiper' is defined but never used.","'Yair' is defined but never used.","'idVideo' is assigned a value but never used.","'Elements' is defined but never used.","'CardElement' is defined but never used.","'useStripe' is defined but never used.","'useElements' is defined but never used.","'axios' is defined but never used.","'helpHttp' is defined but never used.","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'closeModal' is assigned a value but never used.","'Swiper' is defined but never used.","'SwiperSlide' is defined but never used.","'Pagination' is defined but never used.","'Mousewheel' is defined but never used.","'swiper' is assigned a value but never used.","'PayPalScriptProvider' is defined but never used.","'stopc' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'getLikedPosts'. Either include it or remove the dependency array.",["413"],["414"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Form' is defined but never used.","'FormCard' is defined but never used.","'db' is assigned a value but never used.","'setDb' is assigned a value but never used.","'video' is defined but never used.","'AboutUser' is defined but never used.","'CardTuto' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchAPi' and 'getUserData'. Either include them or remove the dependency array.",["415"],"'alreadyAnswered' is assigned a value but never used.",["416"],"React Hook useEffect has a missing dependency: 'correctAnswer'. Either include it or remove the dependency array.",["417"],"'advance' is assigned a value but never used.","'goBack' is assigned a value but never used.","'txt' is assigned a value but never used.",["418"],"'BrowserView' is defined but never used.","'MobileView' is defined but never used.","'isBrowser' is defined but never used.",["419"],["420"],"React Hook useEffect has a missing dependency: 'getuser'. Either include it or remove the dependency array.",["421"],["422"],"no-useless-computed-key","Unnecessarily computed property [\"file\"] found.","Property","unnecessarilyComputedProperty",{"range":"423","text":"424"},"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.",["425"],"React Hook useEffect has a missing dependency: 'getTop'. Either include it or remove the dependency array.",["426"],{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"desc":"427","fix":"433"},{"desc":"434","fix":"435"},{"desc":"427","fix":"436"},{"desc":"437","fix":"438"},{"desc":"431","fix":"439"},{"desc":"427","fix":"440"},{"desc":"429","fix":"441"},{"desc":"442","fix":"443"},{"desc":"444","fix":"445"},[2720,2728],"\"file\"",{"desc":"427","fix":"446"},{"desc":"447","fix":"448"},"Update the dependencies array to be: [fetchAPi]",{"range":"449","text":"450"},"Update the dependencies array to be: [authTokens, loading, updateToken]",{"range":"451","text":"452"},"Update the dependencies array to be: [getLikedPosts]",{"range":"453","text":"454"},{"range":"455","text":"450"},"Update the dependencies array to be: [fetchAPi, getUserData]",{"range":"456","text":"457"},{"range":"458","text":"450"},"Update the dependencies array to be: [answerSelected, correctAnswer]",{"range":"459","text":"460"},{"range":"461","text":"454"},{"range":"462","text":"450"},{"range":"463","text":"452"},"Update the dependencies array to be: [getuser]",{"range":"464","text":"465"},"Update the dependencies array to be: [getuser, wasUp]",{"range":"466","text":"467"},{"range":"468","text":"450"},"Update the dependencies array to be: [getTop]",{"range":"469","text":"470"},[917,919],"[fetchAPi]",[2592,2613],"[authTokens, loading, updateToken]",[1271,1273],"[getLikedPosts]",[2453,2455],[3368,3370],"[fetchAPi, getUserData]",[2129,2131],[2569,2585],"[answerSelected, correctAnswer]",[3338,3340],[2651,2653],[2690,2711],[1712,1714],"[getuser]",[1766,1773],"[getuser, wasUp]",[1731,1733],[1361,1363],"[getTop]"]